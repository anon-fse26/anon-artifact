2LS version 0.10.0
Parsing Benchmarks/TermCOMP/C/Di_Stefano_20/formation-noarray_true-termination/formation-noarray_true-termination.c
Converting
Type-checking formation-noarray_true-termination
Generating GOTO Program
Adding CPROVER library
Function Pointer Removal
Generic Property Instrumentation
Constant Propagation
Using intervals domain with binary search solver
Computing SSA of main
Simplifying
Computing SSA of __CPROVER_initialize
Simplifying
Computing SSA of __abs
Simplifying
Computing SSA of getI
Simplifying
Computing SSA of getpc
Simplifying
Computing SSA of setpc
Simplifying
Computing SSA of getHin
Simplifying
Computing SSA of getHout
Simplifying
Computing SSA of getHinCnt
Simplifying
Computing SSA of setHinCnt
Simplifying
Computing SSA of getHoutCnt
Simplifying
Computing SSA of setHoutCnt
Simplifying
Computing SSA of setHin
Simplifying
Computing SSA of clearHin
Simplifying
Computing SSA of setHout
Simplifying
Computing SSA of clearHout
Simplifying
Computing SSA of now
Simplifying
Computing SSA of getLvalue
Simplifying
Computing SSA of setLvalue
Simplifying
Computing SSA of getLtstamp
Simplifying
Computing SSA of setLtstamp
Simplifying
Computing SSA of timeof
Simplifying
Computing SSA of getTupleStart
Simplifying
Computing SSA of getTupleEnd
Simplifying
Computing SSA of link
Simplifying
Computing SSA of attr
Simplifying
Computing SSA of lstig
Simplifying
Computing SSA of differentLstig
Simplifying
Computing SSA of confirm
Simplifying
Computing SSA of propagate
Simplifying
Computing SSA of init
Simplifying
Computing SSA of _0_2
Simplifying
Computing SSA of _0_3
Simplifying
Computing SSA of _0_4
Simplifying
Computing SSA of _0_5
Simplifying
Computing SSA of _0_6
Simplifying
Computing SSA of __CPROVER__start
Simplifying

Summarizing function __CPROVER__start
Checking precondition of __CPROVER_initialize
Function __CPROVER_initialize not analyzed yet
Recursively summarizing function __CPROVER_initialize
Analyzing function __CPROVER_initialize
Computing summary
Computing termination argument for __CPROVER_initialize
Function trivially terminates

Summary for function __CPROVER_initialize
params: 
globals_in: __CPROVER_threads_exited __CPROVER_thread_key_dtors __CPROVER_thread_keys __CPROVER_malloc_is_new_array Hin_0_0 Hin_0_1 Hin_1_0 Hin_1_1 Hin_2_0 Hin_2_1 Hout_0_0 Hout_0_1 Hout_1_0 Hout_1_1 Hout_2_0 Hout_2_1 __CPROVER_alloca_object'obj __CPROVER_dead_object'obj __CPROVER_deallocated'obj __CPROVER_new_object'obj __CPROVER_alloca_object __CPROVER_dead_object __CPROVER_deallocated __CPROVER_new_object __CPROVER_rounding_mode I_0_0 I_1_0 I_2_0 Ltstamp_0_0 Ltstamp_0_1 Ltstamp_1_0 Ltstamp_1_1 Ltstamp_2_0 Ltstamp_2_1 Lvalue_0_0 Lvalue_0_1 Lvalue_1_0 Lvalue_1_1 Lvalue_2_0 Lvalue_2_1 __CPROVER_pipe_count __CPROVER_max_malloc_size __CPROVER_next_thread_id __CPROVER_next_thread_key __CPROVER_thread_id HinCnt_0 HinCnt_1 HinCnt_2 HoutCnt_0 HoutCnt_1 HoutCnt_2 __LABS_time pc_0_0 pc_1_0 pc_2_0 tupleEnd_0 tupleEnd_1 tupleStart_0 tupleStart_1 
globals_out: __CPROVER_threads_exited#198 __CPROVER_thread_key_dtors#196 __CPROVER_thread_keys#197 __CPROVER_malloc_is_new_array#188 Hin_0_0#202 Hin_0_1#203 Hin_1_0#204 Hin_1_1#205 Hin_2_0#206 Hin_2_1#207 Hout_0_0#211 Hout_0_1#212 Hout_1_0#213 Hout_1_1#214 Hout_2_0#215 Hout_2_1#216 __CPROVER_alloca_object'obj __CPROVER_dead_object'obj __CPROVER_deallocated'obj __CPROVER_new_object'obj __CPROVER_alloca_object#185 __CPROVER_dead_object#186 __CPROVER_deallocated#187 __CPROVER_new_object#190 __CPROVER_rounding_mode#194 I_0_0#217 I_1_0#218 I_2_0#219 Ltstamp_0_0#220 Ltstamp_0_1#221 Ltstamp_1_0#222 Ltstamp_1_1#223 Ltstamp_2_0#224 Ltstamp_2_1#225 Lvalue_0_0#226 Lvalue_0_1#227 Lvalue_1_0#228 Lvalue_1_1#229 Lvalue_2_0#230 Lvalue_2_1#231 __CPROVER_pipe_count#193 __CPROVER_max_malloc_size#189 __CPROVER_next_thread_id#191 __CPROVER_next_thread_key#192 __CPROVER_thread_id#195 HinCnt_0#199 HinCnt_1#200 HinCnt_2#201 HoutCnt_0#208 HoutCnt_1#209 HoutCnt_2#210 __LABS_time#232 pc_0_0#233 pc_1_0#234 pc_2_0#235 tupleEnd_0#236 tupleEnd_1#237 
forward precondition: TRUE
forward transformer: __CPROVER_rounding_mode#194 <= 0 && -((signed __CPROVER_bitvector[33])__CPROVER_rounding_mode#194) <= 0 && I_0_0#217 <= 0 && -((signed __CPROVER_bitvector[9])I_0_0#217) <= 0 && I_1_0#218 <= 0 && -((signed __CPROVER_bitvector[9])I_1_0#218) <= 0 && I_2_0#219 <= 0 && -((signed __CPROVER_bitvector[9])I_2_0#219) <= 0 && Ltstamp_0_0#220 <= 0 && -((signed __CPROVER_bitvector[9])Ltstamp_0_0#220) <= 0 && Ltstamp_0_1#221 <= 0 && -((signed __CPROVER_bitvector[9])Ltstamp_0_1#221) <= 0 && Ltstamp_1_0#222 <= 0 && -((signed __CPROVER_bitvector[9])Ltstamp_1_0#222) <= 0 && Ltstamp_1_1#223 <= 0 && -((signed __CPROVER_bitvector[9])Ltstamp_1_1#223) <= 0 && Ltstamp_2_0#224 <= 0 && -((signed __CPROVER_bitvector[9])Ltstamp_2_0#224) <= 0 && Ltstamp_2_1#225 <= 0 && -((signed __CPROVER_bitvector[9])Ltstamp_2_1#225) <= 0 && Lvalue_0_0#226 <= 0 && -((signed __CPROVER_bitvector[9])Lvalue_0_0#226) <= 0 && Lvalue_0_1#227 <= 0 && -((signed __CPROVER_bitvector[9])Lvalue_0_1#227) <= 0 && Lvalue_1_0#228 <= 0 && -((signed __CPROVER_bitvector[9])Lvalue_1_0#228) <= 0 && Lvalue_1_1#229 <= 0 && -((signed __CPROVER_bitvector[9])Lvalue_1_1#229) <= 0 && Lvalue_2_0#230 <= 0 && -((signed __CPROVER_bitvector[9])Lvalue_2_0#230) <= 0 && Lvalue_2_1#231 <= 0 && -((signed __CPROVER_bitvector[9])Lvalue_2_1#231) <= 0 && __CPROVER_pipe_count#193 <= 0u && -((signed __CPROVER_bitvector[33])__CPROVER_pipe_count#193) <= 0 && __CPROVER_max_malloc_size#189 <= 36028797018963968ul && -((signed __CPROVER_bitvector[65])__CPROVER_max_malloc_size#189) <= -36028797018963968 && __CPROVER_next_thread_id#191 <= 0ul && -((signed __CPROVER_bitvector[65])__CPROVER_next_thread_id#191) <= 0 && __CPROVER_next_thread_key#192 <= 0ul && -((signed __CPROVER_bitvector[65])__CPROVER_next_thread_key#192) <= 0 && __CPROVER_thread_id#195 <= 0ul && -((signed __CPROVER_bitvector[65])__CPROVER_thread_id#195) <= 0 && HinCnt_0#199 <= 0 && -((signed __CPROVER_bitvector[9])HinCnt_0#199) <= 0 && HinCnt_1#200 <= 0 && -((signed __CPROVER_bitvector[9])HinCnt_1#200) <= 0 && HinCnt_2#201 <= 0 && -((signed __CPROVER_bitvector[9])HinCnt_2#201) <= 0 && HoutCnt_0#208 <= 0 && -((signed __CPROVER_bitvector[9])HoutCnt_0#208) <= 0 && HoutCnt_1#209 <= 0 && -((signed __CPROVER_bitvector[9])HoutCnt_1#209) <= 0 && HoutCnt_2#210 <= 0 && -((signed __CPROVER_bitvector[9])HoutCnt_2#210) <= 0 && __LABS_time#232 <= 0 && -((signed __CPROVER_bitvector[9])__LABS_time#232) <= 0 && pc_0_0#233 <= 0 && -((signed __CPROVER_bitvector[9])pc_0_0#233) <= 0 && pc_1_0#234 <= 0 && -((signed __CPROVER_bitvector[9])pc_1_0#234) <= 0 && pc_2_0#235 <= 0 && -((signed __CPROVER_bitvector[9])pc_2_0#235) <= 0 && tupleEnd_0#236 <= 0 && -((signed __CPROVER_bitvector[9])tupleEnd_0#236) <= 0 && tupleEnd_1#237 <= 1 && -((signed __CPROVER_bitvector[9])tupleEnd_1#237) <= -1
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of main
Function main not analyzed yet
Recursively summarizing function main
Checking precondition of init
Function init not analyzed yet
Recursively summarizing function init
Checking precondition of now
Function now not analyzed yet
Recursively summarizing function now
Analyzing function now
Computing summary
Computing termination argument for now
Function trivially terminates

Summary for function now
params: 
globals_in: __LABS_time 
globals_out: __LABS_time#566 now#return_value#567 
forward precondition: TRUE
forward transformer: __LABS_time#566 <= 255 && -((signed __CPROVER_bitvector[9])__LABS_time#566) <= 0 && now#return_value#567 <= 255 && -((signed __CPROVER_bitvector[9])now#return_value#567) <= 0
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of now
Precondition trivially holds, replacing by summary.
Checking precondition of now
Precondition trivially holds, replacing by summary.
Checking precondition of now
Precondition trivially holds, replacing by summary.
Checking precondition of now
Precondition trivially holds, replacing by summary.
Checking precondition of now
Precondition trivially holds, replacing by summary.
Checking precondition of now
Precondition trivially holds, replacing by summary.
Analyzing function init
Computing summary
Computing termination argument for init
Function terminates

Summary for function init
params: 
globals_in: Hin_0_0 Hin_0_1 Hin_1_0 Hin_1_1 Hin_2_0 Hin_2_1 Hout_0_0 Hout_0_1 Hout_1_0 Hout_1_1 Hout_2_0 Hout_2_1 I_0_0 I_1_0 I_2_0 Ltstamp_0_0 Ltstamp_0_1 Ltstamp_1_0 Ltstamp_1_1 Ltstamp_2_0 Ltstamp_2_1 Lvalue_0_0 Lvalue_0_1 Lvalue_1_0 Lvalue_1_1 Lvalue_2_0 Lvalue_2_1 HinCnt_0 HinCnt_1 HinCnt_2 HoutCnt_0 HoutCnt_1 HoutCnt_2 pc_0_0 pc_1_0 pc_2_0 
globals_out: Hin_0_0#1010 Hin_0_1#1011 Hin_1_0#1012 Hin_1_1#1013 Hin_2_0#1014 Hin_2_1#1015 Hout_0_0#1016 Hout_0_1#1017 Hout_1_0#1018 Hout_1_1#1019 Hout_2_0#1020 Hout_2_1#1021 I_0_0#1042 I_1_0#1048 I_2_0#1054 Ltstamp_0_0#1059 Ltstamp_0_1#1064 Ltstamp_1_0#1069 Ltstamp_1_1#1074 Ltstamp_2_0#1079 Ltstamp_2_1#1084 Lvalue_0_0#1031 Lvalue_0_1#1034 Lvalue_1_0#1032 Lvalue_1_1#1035 Lvalue_2_0#1033 Lvalue_2_1#1036 HinCnt_0#1022 HinCnt_1#1023 HinCnt_2#1024 HoutCnt_0#1025 HoutCnt_1#1026 HoutCnt_2#1027 pc_0_0#1028 pc_1_0#1029 pc_2_0#1030 
forward precondition: TRUE
forward transformer: I_0_0#1042 <= '\t' && -((signed __CPROVER_bitvector[9])I_0_0#1042) <= -1 && I_1_0#1048 <= '\t' && -((signed __CPROVER_bitvector[9])I_1_0#1048) <= -1 && I_2_0#1054 <= '\t' && -((signed __CPROVER_bitvector[9])I_2_0#1054) <= -1 && Ltstamp_0_0#1059 <= 127 && -((signed __CPROVER_bitvector[9])Ltstamp_0_0#1059) <= 128 && Ltstamp_0_1#1064 <= 127 && -((signed __CPROVER_bitvector[9])Ltstamp_0_1#1064) <= 128 && Ltstamp_1_0#1069 <= 127 && -((signed __CPROVER_bitvector[9])Ltstamp_1_0#1069) <= 128 && Ltstamp_1_1#1074 <= 127 && -((signed __CPROVER_bitvector[9])Ltstamp_1_1#1074) <= 128 && Ltstamp_2_0#1079 <= 127 && -((signed __CPROVER_bitvector[9])Ltstamp_2_0#1079) <= 128 && Ltstamp_2_1#1084 <= 127 && -((signed __CPROVER_bitvector[9])Ltstamp_2_1#1084) <= 128 && Lvalue_0_0#1031 <= -128 && -((signed __CPROVER_bitvector[9])Lvalue_0_0#1031) <= 128 && Lvalue_0_1#1034 <= -128 && -((signed __CPROVER_bitvector[9])Lvalue_0_1#1034) <= 128 && Lvalue_1_0#1032 <= -128 && -((signed __CPROVER_bitvector[9])Lvalue_1_0#1032) <= 128 && Lvalue_1_1#1035 <= -128 && -((signed __CPROVER_bitvector[9])Lvalue_1_1#1035) <= 128 && Lvalue_2_0#1033 <= -128 && -((signed __CPROVER_bitvector[9])Lvalue_2_0#1033) <= 128 && Lvalue_2_1#1036 <= -128 && -((signed __CPROVER_bitvector[9])Lvalue_2_1#1036) <= 128 && HinCnt_0#1022 <= 0 && -((signed __CPROVER_bitvector[9])HinCnt_0#1022) <= 0 && HinCnt_1#1023 <= 0 && -((signed __CPROVER_bitvector[9])HinCnt_1#1023) <= 0 && HinCnt_2#1024 <= 0 && -((signed __CPROVER_bitvector[9])HinCnt_2#1024) <= 0 && HoutCnt_0#1025 <= 0 && -((signed __CPROVER_bitvector[9])HoutCnt_0#1025) <= 0 && HoutCnt_1#1026 <= 0 && -((signed __CPROVER_bitvector[9])HoutCnt_1#1026) <= 0 && HoutCnt_2#1027 <= 0 && -((signed __CPROVER_bitvector[9])HoutCnt_2#1027) <= 0 && pc_0_0#1028 <= 6 && -((signed __CPROVER_bitvector[9])pc_0_0#1028) <= -6 && pc_1_0#1029 <= 6 && -((signed __CPROVER_bitvector[9])pc_1_0#1029) <= -6 && pc_2_0#1030 <= 6 && -((signed __CPROVER_bitvector[9])pc_2_0#1030) <= -6
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of getpc
Function getpc not analyzed yet
Recursively summarizing function getpc
Analyzing function getpc
Computing summary
Computing termination argument for getpc
Function trivially terminates

Summary for function getpc
params: i j 
globals_in: pc_0_0 pc_1_0 pc_2_0 
globals_out: getpc#return_value#phi268 pc_0_0 pc_1_0 pc_2_0 
forward precondition: TRUE
forward transformer: getpc#return_value#phi268 <= 127 && -((signed __CPROVER_bitvector[9])getpc#return_value#phi268) <= 128 && pc_0_0 <= 255 && -((signed __CPROVER_bitvector[9])pc_0_0) <= 0 && pc_1_0 <= 255 && -((signed __CPROVER_bitvector[9])pc_1_0) <= 0 && pc_2_0 <= 255 && -((signed __CPROVER_bitvector[9])pc_2_0) <= 0
forward invariant: pc_0_0 <= 255 && -((signed __CPROVER_bitvector[9])pc_0_0) <= 0 && pc_1_0 <= 255 && -((signed __CPROVER_bitvector[9])pc_1_0) <= 0 && pc_2_0 <= 255 && -((signed __CPROVER_bitvector[9])pc_2_0) <= 0
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of _0_2
Function _0_2 not analyzed yet
Recursively summarizing function _0_2
Checking precondition of getLvalue
Function getLvalue not analyzed yet
Recursively summarizing function getLvalue
Analyzing function getLvalue
Computing summary
Computing termination argument for getLvalue
Function trivially terminates

Summary for function getLvalue
params: i j 
globals_in: Lvalue_0_0 Lvalue_0_1 Lvalue_1_0 Lvalue_1_1 Lvalue_2_0 Lvalue_2_1 
globals_out: Lvalue_0_0 Lvalue_0_1 Lvalue_1_0 Lvalue_1_1 Lvalue_2_0 Lvalue_2_1 getLvalue#return_value#phi581 
forward precondition: TRUE
forward transformer: Lvalue_0_0 <= 127 && -((signed __CPROVER_bitvector[9])Lvalue_0_0) <= 128 && Lvalue_0_1 <= 127 && -((signed __CPROVER_bitvector[9])Lvalue_0_1) <= 128 && Lvalue_1_0 <= 127 && -((signed __CPROVER_bitvector[9])Lvalue_1_0) <= 128 && Lvalue_1_1 <= 127 && -((signed __CPROVER_bitvector[9])Lvalue_1_1) <= 128 && Lvalue_2_0 <= 127 && -((signed __CPROVER_bitvector[9])Lvalue_2_0) <= 128 && Lvalue_2_1 <= 127 && -((signed __CPROVER_bitvector[9])Lvalue_2_1) <= 128 && getLvalue#return_value#phi581 <= 127 && -((signed __CPROVER_bitvector[9])getLvalue#return_value#phi581) <= 128
forward invariant: Lvalue_0_0 <= 127 && -((signed __CPROVER_bitvector[9])Lvalue_0_0) <= 128 && Lvalue_0_1 <= 127 && -((signed __CPROVER_bitvector[9])Lvalue_0_1) <= 128 && Lvalue_1_0 <= 127 && -((signed __CPROVER_bitvector[9])Lvalue_1_0) <= 128 && Lvalue_1_1 <= 127 && -((signed __CPROVER_bitvector[9])Lvalue_1_1) <= 128 && Lvalue_2_0 <= 127 && -((signed __CPROVER_bitvector[9])Lvalue_2_0) <= 128 && Lvalue_2_1 <= 127 && -((signed __CPROVER_bitvector[9])Lvalue_2_1) <= 128
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of getLvalue
Precondition trivially holds, replacing by summary.
Checking precondition of getI
Function getI not analyzed yet
Recursively summarizing function getI
Analyzing function getI
Computing summary
Computing termination argument for getI
Function trivially terminates

Summary for function getI
params: i j 
globals_in: I_0_0 I_1_0 I_2_0 
globals_out: I_0_0 I_1_0 I_2_0 getI#return_value#phi255 
forward precondition: TRUE
forward transformer: I_0_0 <= 127 && -((signed __CPROVER_bitvector[9])I_0_0) <= 128 && I_1_0 <= 127 && -((signed __CPROVER_bitvector[9])I_1_0) <= 128 && I_2_0 <= 127 && -((signed __CPROVER_bitvector[9])I_2_0) <= 128 && getI#return_value#phi255 <= 127 && -((signed __CPROVER_bitvector[9])getI#return_value#phi255) <= 128
forward invariant: I_0_0 <= 127 && -((signed __CPROVER_bitvector[9])I_0_0) <= 128 && I_1_0 <= 127 && -((signed __CPROVER_bitvector[9])I_1_0) <= 128 && I_2_0 <= 127 && -((signed __CPROVER_bitvector[9])I_2_0) <= 128
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of getI
Precondition trivially holds, replacing by summary.
Checking precondition of attr
Function attr not analyzed yet
Recursively summarizing function attr
Checking precondition of getHoutCnt
Function getHoutCnt not analyzed yet
Recursively summarizing function getHoutCnt
Analyzing function getHoutCnt
Computing summary
Computing termination argument for getHoutCnt
Function trivially terminates

Summary for function getHoutCnt
params: i 
globals_in: HoutCnt_0 HoutCnt_1 HoutCnt_2 
globals_out: HoutCnt_0 HoutCnt_1 HoutCnt_2 getHoutCnt#return_value#phi342 
forward precondition: TRUE
forward transformer: HoutCnt_0 <= 255 && -((signed __CPROVER_bitvector[9])HoutCnt_0) <= 0 && HoutCnt_1 <= 255 && -((signed __CPROVER_bitvector[9])HoutCnt_1) <= 0 && HoutCnt_2 <= 255 && -((signed __CPROVER_bitvector[9])HoutCnt_2) <= 0 && getHoutCnt#return_value#phi342 <= 255 && -((signed __CPROVER_bitvector[9])getHoutCnt#return_value#phi342) <= 0
forward invariant: HoutCnt_0 <= 255 && -((signed __CPROVER_bitvector[9])HoutCnt_0) <= 0 && HoutCnt_1 <= 255 && -((signed __CPROVER_bitvector[9])HoutCnt_1) <= 0 && HoutCnt_2 <= 255 && -((signed __CPROVER_bitvector[9])HoutCnt_2) <= 0
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of getHinCnt
Function getHinCnt not analyzed yet
Recursively summarizing function getHinCnt
Analyzing function getHinCnt
Computing summary
Computing termination argument for getHinCnt
Function trivially terminates

Summary for function getHinCnt
params: i 
globals_in: HinCnt_0 HinCnt_1 HinCnt_2 
globals_out: getHinCnt#return_value#phi318 HinCnt_0 HinCnt_1 HinCnt_2 
forward precondition: TRUE
forward transformer: getHinCnt#return_value#phi318 <= 127 && -((signed __CPROVER_bitvector[9])getHinCnt#return_value#phi318) <= 128 && HinCnt_0 <= 255 && -((signed __CPROVER_bitvector[9])HinCnt_0) <= 0 && HinCnt_1 <= 255 && -((signed __CPROVER_bitvector[9])HinCnt_1) <= 0 && HinCnt_2 <= 255 && -((signed __CPROVER_bitvector[9])HinCnt_2) <= 0
forward invariant: HinCnt_0 <= 255 && -((signed __CPROVER_bitvector[9])HinCnt_0) <= 0 && HinCnt_1 <= 255 && -((signed __CPROVER_bitvector[9])HinCnt_1) <= 0 && HinCnt_2 <= 255 && -((signed __CPROVER_bitvector[9])HinCnt_2) <= 0
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of now
Precondition trivially holds, replacing by summary.
Analyzing function attr
Computing summary
Computing termination argument for attr
Function terminates

Summary for function attr
params: id key value check 
globals_in: I_0_0 I_1_0 I_2_0 
globals_out: I_0_0#phi738 I_1_0#phi738 I_2_0#phi738 
forward precondition: TRUE
forward transformer: I_0_0#phi738 <= 127 && -((signed __CPROVER_bitvector[9])I_0_0#phi738) <= 128 && I_1_0#phi738 <= 127 && -((signed __CPROVER_bitvector[9])I_1_0#phi738) <= 128 && I_2_0#phi738 <= 127 && -((signed __CPROVER_bitvector[9])I_2_0#phi738) <= 128
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of setHin
Function setHin not analyzed yet
Recursively summarizing function setHin
Checking precondition of getHinCnt
Precondition trivially holds, replacing by summary.
Checking precondition of getHin
Function getHin not analyzed yet
Recursively summarizing function getHin
Analyzing function getHin
Computing summary
Computing termination argument for getHin
Function trivially terminates

Summary for function getHin
params: i j 
globals_in: Hin_0_0 Hin_0_1 Hin_1_0 Hin_1_1 Hin_2_0 Hin_2_1 
globals_out: Hin_0_0 Hin_0_1 Hin_1_0 Hin_1_1 Hin_2_0 Hin_2_1 getHin#return_value#phi292 
forward precondition: TRUE
forward transformer: getHin#return_value#phi292 <= 127 && -((signed __CPROVER_bitvector[9])getHin#return_value#phi292) <= 128
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of setHinCnt
Function setHinCnt not analyzed yet
Recursively summarizing function setHinCnt
Analyzing function setHinCnt
Computing summary
Computing termination argument for setHinCnt
Function trivially terminates

Summary for function setHinCnt
params: i value 
globals_in: HinCnt_0 HinCnt_1 HinCnt_2 
globals_out: HinCnt_0#phi329 HinCnt_1#phi329 HinCnt_2#phi329 
forward precondition: TRUE
forward transformer: HinCnt_0#phi329 <= 255 && -((signed __CPROVER_bitvector[9])HinCnt_0#phi329) <= 0 && HinCnt_1#phi329 <= 255 && -((signed __CPROVER_bitvector[9])HinCnt_1#phi329) <= 0 && HinCnt_2#phi329 <= 255 && -((signed __CPROVER_bitvector[9])HinCnt_2#phi329) <= 0
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of getHinCnt
Precondition trivially holds, replacing by summary.
Checking precondition of getHin
Precondition trivially holds, replacing by summary.
Checking precondition of setHinCnt
Precondition trivially holds, replacing by summary.
Analyzing function setHin
Computing summary
Computing termination argument for setHin
Function terminates

Summary for function setHin
params: id key 
globals_in: Hin_0_0 Hin_0_1 Hin_1_0 Hin_1_1 Hin_2_0 Hin_2_1 tupleStart_0 tupleStart_1 
globals_out: Hin_0_0#phi402 Hin_0_1#phi402 Hin_1_0#phi402 Hin_1_1#phi402 Hin_2_0#phi402 Hin_2_1#phi402 
forward precondition: TRUE
forward transformer: TRUE
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of setpc
Function setpc not analyzed yet
Recursively summarizing function setpc
Analyzing function setpc
Computing summary
Computing termination argument for setpc
Function trivially terminates

Summary for function setpc
params: i j value 
globals_in: pc_0_0 pc_1_0 pc_2_0 
globals_out: pc_0_0#phi279 pc_1_0#phi279 pc_2_0#phi279 
forward precondition: TRUE
forward transformer: pc_0_0#phi279 <= 255 && -((signed __CPROVER_bitvector[9])pc_0_0#phi279) <= 0 && pc_1_0#phi279 <= 255 && -((signed __CPROVER_bitvector[9])pc_1_0#phi279) <= 0 && pc_2_0#phi279 <= 255 && -((signed __CPROVER_bitvector[9])pc_2_0#phi279) <= 0
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Analyzing function _0_2
Computing summary
Computing termination argument for _0_2
Function terminates

Summary for function _0_2
params: tid 
globals_in: 
globals_out: 
forward precondition: TRUE
forward transformer: TRUE
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of _0_3
Function _0_3 not analyzed yet
Recursively summarizing function _0_3
Checking precondition of getLvalue
Precondition trivially holds, replacing by summary.
Checking precondition of getLvalue
Precondition trivially holds, replacing by summary.
Checking precondition of getI
Precondition trivially holds, replacing by summary.
Checking precondition of getI
Precondition trivially holds, replacing by summary.
Checking precondition of attr
Precondition trivially holds, replacing by summary.
Checking precondition of setHin
Precondition trivially holds, replacing by summary.
Checking precondition of setpc
Precondition trivially holds, replacing by summary.
Analyzing function _0_3
Computing summary
Computing termination argument for _0_3
Function terminates

Summary for function _0_3
params: tid 
globals_in: 
globals_out: 
forward precondition: TRUE
forward transformer: TRUE
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of _0_4
Function _0_4 not analyzed yet
Recursively summarizing function _0_4
Checking precondition of getLvalue
Precondition trivially holds, replacing by summary.
Checking precondition of getLvalue
Precondition trivially holds, replacing by summary.
Checking precondition of getI
Precondition trivially holds, replacing by summary.
Checking precondition of getI
Precondition trivially holds, replacing by summary.
Checking precondition of attr
Precondition trivially holds, replacing by summary.
Checking precondition of setHin
Precondition trivially holds, replacing by summary.
Checking precondition of setpc
Precondition trivially holds, replacing by summary.
Analyzing function _0_4
Computing summary
Computing termination argument for _0_4
Function terminates

Summary for function _0_4
params: tid 
globals_in: 
globals_out: 
forward precondition: TRUE
forward transformer: TRUE
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of _0_5
Function _0_5 not analyzed yet
Recursively summarizing function _0_5
Checking precondition of getLvalue
Precondition trivially holds, replacing by summary.
Checking precondition of getLvalue
Precondition trivially holds, replacing by summary.
Checking precondition of getI
Precondition trivially holds, replacing by summary.
Checking precondition of getI
Precondition trivially holds, replacing by summary.
Checking precondition of attr
Precondition trivially holds, replacing by summary.
Checking precondition of setHin
Precondition trivially holds, replacing by summary.
Checking precondition of setpc
Precondition trivially holds, replacing by summary.
Analyzing function _0_5
Computing summary
Computing termination argument for _0_5
Function terminates

Summary for function _0_5
params: tid 
globals_in: 
globals_out: 
forward precondition: TRUE
forward transformer: TRUE
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of _0_6
Function _0_6 not analyzed yet
Recursively summarizing function _0_6
Checking precondition of lstig
Function lstig not analyzed yet
Recursively summarizing function lstig
Checking precondition of getHoutCnt
Precondition trivially holds, replacing by summary.
Checking precondition of getHinCnt
Precondition trivially holds, replacing by summary.
Checking precondition of setLvalue
Function setLvalue not analyzed yet
Recursively summarizing function setLvalue
Analyzing function setLvalue
Computing summary
Computing termination argument for setLvalue
Function trivially terminates

Summary for function setLvalue
params: id key value 
globals_in: Lvalue_0_0 Lvalue_0_1 Lvalue_1_0 Lvalue_1_1 Lvalue_2_0 Lvalue_2_1 
globals_out: Lvalue_0_0#phi601 Lvalue_0_1#phi601 Lvalue_1_0#phi601 Lvalue_1_1#phi601 Lvalue_2_0#phi601 Lvalue_2_1#phi601 
forward precondition: TRUE
forward transformer: Lvalue_0_0#phi601 <= 127 && -((signed __CPROVER_bitvector[9])Lvalue_0_0#phi601) <= 128 && Lvalue_0_1#phi601 <= 127 && -((signed __CPROVER_bitvector[9])Lvalue_0_1#phi601) <= 128 && Lvalue_1_0#phi601 <= 127 && -((signed __CPROVER_bitvector[9])Lvalue_1_0#phi601) <= 128 && Lvalue_1_1#phi601 <= 127 && -((signed __CPROVER_bitvector[9])Lvalue_1_1#phi601) <= 128 && Lvalue_2_0#phi601 <= 127 && -((signed __CPROVER_bitvector[9])Lvalue_2_0#phi601) <= 128 && Lvalue_2_1#phi601 <= 127 && -((signed __CPROVER_bitvector[9])Lvalue_2_1#phi601) <= 128
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of now
Precondition trivially holds, replacing by summary.
Checking precondition of setLtstamp
Function setLtstamp not analyzed yet
Recursively summarizing function setLtstamp
Analyzing function setLtstamp
Computing summary
Computing termination argument for setLtstamp
Function trivially terminates

Summary for function setLtstamp
params: id key value 
globals_in: Ltstamp_0_0 Ltstamp_0_1 Ltstamp_1_0 Ltstamp_1_1 Ltstamp_2_0 Ltstamp_2_1 
globals_out: Ltstamp_0_0#phi634 Ltstamp_0_1#phi634 Ltstamp_1_0#phi634 Ltstamp_1_1#phi634 Ltstamp_2_0#phi634 Ltstamp_2_1#phi634 
forward precondition: TRUE
forward transformer: Ltstamp_0_0#phi634 <= 127 && -((signed __CPROVER_bitvector[9])Ltstamp_0_0#phi634) <= 128 && Ltstamp_0_1#phi634 <= 127 && -((signed __CPROVER_bitvector[9])Ltstamp_0_1#phi634) <= 128 && Ltstamp_1_0#phi634 <= 127 && -((signed __CPROVER_bitvector[9])Ltstamp_1_0#phi634) <= 128 && Ltstamp_1_1#phi634 <= 127 && -((signed __CPROVER_bitvector[9])Ltstamp_1_1#phi634) <= 128 && Ltstamp_2_0#phi634 <= 127 && -((signed __CPROVER_bitvector[9])Ltstamp_2_0#phi634) <= 128 && Ltstamp_2_1#phi634 <= 127 && -((signed __CPROVER_bitvector[9])Ltstamp_2_1#phi634) <= 128
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of now
Precondition trivially holds, replacing by summary.
Checking precondition of setLtstamp
Precondition trivially holds, replacing by summary.
Checking precondition of setHout
Function setHout not analyzed yet
Recursively summarizing function setHout
Checking precondition of getHoutCnt
Precondition trivially holds, replacing by summary.
Checking precondition of getHout
Function getHout not analyzed yet
Recursively summarizing function getHout
Analyzing function getHout
Computing summary
Computing termination argument for getHout
Function trivially terminates

Summary for function getHout
params: i j 
globals_in: Hout_0_0 Hout_0_1 Hout_1_0 Hout_1_1 Hout_2_0 Hout_2_1 
globals_out: Hout_0_0 Hout_0_1 Hout_1_0 Hout_1_1 Hout_2_0 Hout_2_1 getHout#return_value#phi305 
forward precondition: TRUE
forward transformer: getHout#return_value#phi305 <= 127 && -((signed __CPROVER_bitvector[9])getHout#return_value#phi305) <= 128
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of setHoutCnt
Function setHoutCnt not analyzed yet
Recursively summarizing function setHoutCnt
Analyzing function setHoutCnt
Computing summary
Computing termination argument for setHoutCnt
Function trivially terminates

Summary for function setHoutCnt
params: i value 
globals_in: HoutCnt_0 HoutCnt_1 HoutCnt_2 
globals_out: HoutCnt_0#phi353 HoutCnt_1#phi353 HoutCnt_2#phi353 
forward precondition: TRUE
forward transformer: HoutCnt_0#phi353 <= 255 && -((signed __CPROVER_bitvector[9])HoutCnt_0#phi353) <= 0 && HoutCnt_1#phi353 <= 255 && -((signed __CPROVER_bitvector[9])HoutCnt_1#phi353) <= 0 && HoutCnt_2#phi353 <= 255 && -((signed __CPROVER_bitvector[9])HoutCnt_2#phi353) <= 0
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of getHoutCnt
Precondition trivially holds, replacing by summary.
Checking precondition of getHout
Precondition trivially holds, replacing by summary.
Checking precondition of setHoutCnt
Precondition trivially holds, replacing by summary.
Analyzing function setHout
Computing summary
Computing termination argument for setHout
Function terminates

Summary for function setHout
params: id key 
globals_in: Hout_0_0 Hout_0_1 Hout_1_0 Hout_1_1 Hout_2_0 Hout_2_1 tupleStart_0 tupleStart_1 
globals_out: Hout_0_0#phi508 Hout_0_1#phi508 Hout_1_0#phi508 Hout_1_1#phi508 Hout_2_0#phi508 Hout_2_1#phi508 
forward precondition: TRUE
forward transformer: TRUE
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Analyzing function lstig
Computing summary
Computing termination argument for lstig
Function terminates

Summary for function lstig
params: id key value check 
globals_in: tupleStart_0 tupleStart_1 
globals_out: 
forward precondition: TRUE
forward transformer: TRUE
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of lstig
Precondition trivially holds, replacing by summary.
Checking precondition of setpc
Precondition trivially holds, replacing by summary.
Analyzing function _0_6
Computing summary
Computing termination argument for _0_6
Function terminates

Summary for function _0_6
params: tid 
globals_in: 
globals_out: 
forward precondition: TRUE
forward transformer: TRUE
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of propagate
Function propagate not analyzed yet
Recursively summarizing function propagate
Checking precondition of getHoutCnt
Precondition trivially holds, replacing by summary.
Checking precondition of getHout
Precondition trivially holds, replacing by summary.
Checking precondition of timeof
Function timeof not analyzed yet
Recursively summarizing function timeof
Checking precondition of getLtstamp
Function getLtstamp not analyzed yet
Recursively summarizing function getLtstamp
Analyzing function getLtstamp
Computing summary
Computing termination argument for getLtstamp
Function trivially terminates

Summary for function getLtstamp
params: i j 
globals_in: Ltstamp_0_0 Ltstamp_0_1 Ltstamp_1_0 Ltstamp_1_1 Ltstamp_2_0 Ltstamp_2_1 
globals_out: Ltstamp_0_0 Ltstamp_0_1 Ltstamp_1_0 Ltstamp_1_1 Ltstamp_2_0 Ltstamp_2_1 getLtstamp#return_value#phi614 
forward precondition: TRUE
forward transformer: Ltstamp_0_0 <= 127 && -((signed __CPROVER_bitvector[9])Ltstamp_0_0) <= 128 && Ltstamp_0_1 <= 127 && -((signed __CPROVER_bitvector[9])Ltstamp_0_1) <= 128 && Ltstamp_1_0 <= 127 && -((signed __CPROVER_bitvector[9])Ltstamp_1_0) <= 128 && Ltstamp_1_1 <= 127 && -((signed __CPROVER_bitvector[9])Ltstamp_1_1) <= 128 && Ltstamp_2_0 <= 127 && -((signed __CPROVER_bitvector[9])Ltstamp_2_0) <= 128 && Ltstamp_2_1 <= 127 && -((signed __CPROVER_bitvector[9])Ltstamp_2_1) <= 128 && getLtstamp#return_value#phi614 <= 255 && -((signed __CPROVER_bitvector[9])getLtstamp#return_value#phi614) <= 0
forward invariant: Ltstamp_0_0 <= 127 && -((signed __CPROVER_bitvector[9])Ltstamp_0_0) <= 128 && Ltstamp_0_1 <= 127 && -((signed __CPROVER_bitvector[9])Ltstamp_0_1) <= 128 && Ltstamp_1_0 <= 127 && -((signed __CPROVER_bitvector[9])Ltstamp_1_0) <= 128 && Ltstamp_1_1 <= 127 && -((signed __CPROVER_bitvector[9])Ltstamp_1_1) <= 128 && Ltstamp_2_0 <= 127 && -((signed __CPROVER_bitvector[9])Ltstamp_2_0) <= 128 && Ltstamp_2_1 <= 127 && -((signed __CPROVER_bitvector[9])Ltstamp_2_1) <= 128
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Analyzing function timeof
Computing summary
Computing termination argument for timeof
Function terminates

Summary for function timeof
params: id key 
globals_in: 
globals_out: timeof#return_value#639 
forward precondition: TRUE
forward transformer: timeof#return_value#639 <= 255 && -((signed __CPROVER_bitvector[9])timeof#return_value#639) <= 0
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of timeof
Precondition trivially holds, replacing by summary.
Checking precondition of link
Function link not analyzed yet
Recursively summarizing function link
Checking precondition of getI
Precondition trivially holds, replacing by summary.
Checking precondition of getI
Precondition trivially holds, replacing by summary.
Checking precondition of getI
Precondition trivially holds, replacing by summary.
Checking precondition of getI
Precondition trivially holds, replacing by summary.
Checking precondition of getI
Precondition trivially holds, replacing by summary.
Checking precondition of getI
Precondition trivially holds, replacing by summary.
Checking precondition of getI
Precondition trivially holds, replacing by summary.
Checking precondition of getI
Precondition trivially holds, replacing by summary.
Analyzing function link
Computing summary
Computing termination argument for link
Function terminates

Summary for function link
params: __LABS_link1 __LABS_link2 key 
globals_in: 
globals_out: link#return_value#705 
forward precondition: TRUE
forward transformer: TRUE
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of setHout
Precondition trivially holds, replacing by summary.
Checking precondition of clearHin
Function clearHin not analyzed yet
Recursively summarizing function clearHin
Checking precondition of getHinCnt
Precondition trivially holds, replacing by summary.
Checking precondition of getHin
Precondition trivially holds, replacing by summary.
Checking precondition of setHinCnt
Precondition trivially holds, replacing by summary.
Checking precondition of getHinCnt
Precondition trivially holds, replacing by summary.
Checking precondition of getHin
Precondition trivially holds, replacing by summary.
Checking precondition of setHinCnt
Precondition trivially holds, replacing by summary.
Analyzing function clearHin
Computing summary
Computing termination argument for clearHin
Function terminates

Summary for function clearHin
params: id key 
globals_in: Hin_0_0 Hin_0_1 Hin_1_0 Hin_1_1 Hin_2_0 Hin_2_1 tupleStart_0 tupleStart_1 
globals_out: Hin_0_0#phi455 Hin_0_1#phi455 Hin_1_0#phi455 Hin_1_1#phi455 Hin_2_0#phi455 Hin_2_1#phi455 
forward precondition: TRUE
forward transformer: TRUE
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of getTupleEnd
Function getTupleEnd not analyzed yet
Recursively summarizing function getTupleEnd
Analyzing function getTupleEnd
Computing summary
Computing termination argument for getTupleEnd
Function trivially terminates

Summary for function getTupleEnd
params: i 
globals_in: tupleEnd_0 tupleEnd_1 
globals_out: getTupleEnd#return_value#644 tupleEnd_0 tupleEnd_1 
forward precondition: TRUE
forward transformer: getTupleEnd#return_value#644 <= 255 && -((signed __CPROVER_bitvector[9])getTupleEnd#return_value#644) <= 0 && tupleEnd_0 <= 255 && -((signed __CPROVER_bitvector[9])tupleEnd_0) <= 0 && tupleEnd_1 <= 255 && -((signed __CPROVER_bitvector[9])tupleEnd_1) <= 0
forward invariant: tupleEnd_0 <= 255 && -((signed __CPROVER_bitvector[9])tupleEnd_0) <= 0 && tupleEnd_1 <= 255 && -((signed __CPROVER_bitvector[9])tupleEnd_1) <= 0
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of getLvalue
Precondition trivially holds, replacing by summary.
Checking precondition of setLvalue
Precondition trivially holds, replacing by summary.
Checking precondition of setLtstamp
Precondition trivially holds, replacing by summary.
Checking precondition of clearHout
Function clearHout not analyzed yet
Recursively summarizing function clearHout
Checking precondition of getHoutCnt
Precondition trivially holds, replacing by summary.
Checking precondition of getHout
Precondition trivially holds, replacing by summary.
Checking precondition of setHoutCnt
Precondition trivially holds, replacing by summary.
Checking precondition of getHoutCnt
Precondition trivially holds, replacing by summary.
Checking precondition of getHout
Precondition trivially holds, replacing by summary.
Checking precondition of setHoutCnt
Precondition trivially holds, replacing by summary.
Analyzing function clearHout
Computing summary
Computing termination argument for clearHout
Function terminates

Summary for function clearHout
params: id key 
globals_in: Hout_0_0 Hout_0_1 Hout_1_0 Hout_1_1 Hout_2_0 Hout_2_1 tupleStart_0 tupleStart_1 
globals_out: Hout_0_0#phi561 Hout_0_1#phi561 Hout_1_0#phi561 Hout_1_1#phi561 Hout_2_0#phi561 Hout_2_1#phi561 
forward precondition: TRUE
forward transformer: TRUE
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Analyzing function propagate
Computing summary
Computing termination argument for propagate
Synthesizing ranking function to prove termination

Summary for function propagate
params: 
globals_in: 
globals_out: 
forward precondition: TRUE
forward transformer: ($guard#967 && $guard#ls982 ==> k#lb982 <= 1) && ($guard#967 && $guard#ls982 ==> -((signed __CPROVER_bitvector[9])k#lb982) <= 0) && ($guard#967 && $guard#ls982 ==> next#lb982 <= 255) && ($guard#967 && $guard#ls982 ==> -((signed __CPROVER_bitvector[9])next#lb982) <= 0) && ($guard#944 && $guard#ls991 ==> i#lb991 <= 3) && ($guard#944 && $guard#ls991 ==> -((signed __CPROVER_bitvector[9])i#lb991) <= 0)
forward invariant: ($guard#967 && $guard#ls982 ==> k#lb982 <= 1) && ($guard#967 && $guard#ls982 ==> -((signed __CPROVER_bitvector[9])k#lb982) <= 0) && ($guard#967 && $guard#ls982 ==> next#lb982 <= 255) && ($guard#967 && $guard#ls982 ==> -((signed __CPROVER_bitvector[9])next#lb982) <= 0) && ($guard#944 && $guard#ls991 ==> i#lb991 <= 3) && ($guard#944 && $guard#ls991 ==> -((signed __CPROVER_bitvector[9])i#lb991) <= 0)
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: ($guard#967 && $guard#967 && $guard#979 && $cond#982 && $guard#979 && $cond#982 ==> (signed __CPROVER_bitvector[21])((signed __CPROVER_bitvector[20])-1 * (signed __CPROVER_bitvector[20])((signed __CPROVER_bitvector[9])k#phi967 - (signed __CPROVER_bitvector[9])k#981)) + (signed __CPROVER_bitvector[21])((signed __CPROVER_bitvector[20])0 * (signed __CPROVER_bitvector[20])((signed __CPROVER_bitvector[9])next#phi967 - (signed __CPROVER_bitvector[9])next#968)) > 0) && ($guard#944 && $guard#988 && $cond#991 ==> (signed __CPROVER_bitvector[20])-1 * (signed __CPROVER_bitvector[20])((signed __CPROVER_bitvector[9])i#phi944 - (signed __CPROVER_bitvector[9])i#990) > 0)

terminates: yes

Checking precondition of confirm
Function confirm not analyzed yet
Recursively summarizing function confirm
Checking precondition of getHinCnt
Precondition trivially holds, replacing by summary.
Checking precondition of getHin
Precondition trivially holds, replacing by summary.
Checking precondition of timeof
Precondition trivially holds, replacing by summary.
Checking precondition of timeof
Precondition trivially holds, replacing by summary.
Checking precondition of link
Precondition trivially holds, replacing by summary.
Checking precondition of setHout
Precondition trivially holds, replacing by summary.
Checking precondition of timeof
Precondition trivially holds, replacing by summary.
Checking precondition of clearHin
Precondition trivially holds, replacing by summary.
Checking precondition of getTupleEnd
Precondition trivially holds, replacing by summary.
Checking precondition of getLvalue
Precondition trivially holds, replacing by summary.
Checking precondition of setLvalue
Precondition trivially holds, replacing by summary.
Checking precondition of setLtstamp
Precondition trivially holds, replacing by summary.
Checking precondition of clearHin
Precondition trivially holds, replacing by summary.
Analyzing function confirm
Computing summary
Computing termination argument for confirm
Synthesizing ranking function to prove termination

Summary for function confirm
params: 
globals_in: 
globals_out: 
forward precondition: TRUE
forward transformer: ($guard#875 && $guard#ls890 ==> k#lb890 <= 1) && ($guard#875 && $guard#ls890 ==> -((signed __CPROVER_bitvector[9])k#lb890) <= 0) && ($guard#875 && $guard#ls890 ==> next#lb890 <= 255) && ($guard#875 && $guard#ls890 ==> -((signed __CPROVER_bitvector[9])next#lb890) <= 0) && ($guard#847 && $guard#ls900 ==> i#lb900 <= 3) && ($guard#847 && $guard#ls900 ==> -((signed __CPROVER_bitvector[9])i#lb900) <= 0)
forward invariant: ($guard#875 && $guard#ls890 ==> k#lb890 <= 1) && ($guard#875 && $guard#ls890 ==> -((signed __CPROVER_bitvector[9])k#lb890) <= 0) && ($guard#875 && $guard#ls890 ==> next#lb890 <= 255) && ($guard#875 && $guard#ls890 ==> -((signed __CPROVER_bitvector[9])next#lb890) <= 0) && ($guard#847 && $guard#ls900 ==> i#lb900 <= 3) && ($guard#847 && $guard#ls900 ==> -((signed __CPROVER_bitvector[9])i#lb900) <= 0)
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: ($guard#875 && $guard#875 && $guard#887 && $cond#890 && $guard#887 && $cond#890 ==> (signed __CPROVER_bitvector[21])((signed __CPROVER_bitvector[20])-1 * (signed __CPROVER_bitvector[20])((signed __CPROVER_bitvector[9])k#phi875 - (signed __CPROVER_bitvector[9])k#889)) + (signed __CPROVER_bitvector[21])((signed __CPROVER_bitvector[20])0 * (signed __CPROVER_bitvector[20])((signed __CPROVER_bitvector[9])next#phi875 - (signed __CPROVER_bitvector[9])next#876)) > 0) && ($guard#847 && $guard#897 && $cond#900 ==> (signed __CPROVER_bitvector[20])-1 * (signed __CPROVER_bitvector[20])((signed __CPROVER_bitvector[9])i#phi847 - (signed __CPROVER_bitvector[9])i#899) > 0)

terminates: yes

Checking precondition of getI
Precondition trivially holds, replacing by summary.
Checking precondition of getI
Precondition trivially holds, replacing by summary.
Checking precondition of __abs
Function __abs not analyzed yet
Recursively summarizing function __abs
Analyzing function __abs
Computing summary
Computing termination argument for __abs
Function trivially terminates

Summary for function __abs
params: x 
globals_in: 
globals_out: __abs#return_value#241 
forward precondition: TRUE
forward transformer: __abs#return_value#241 <= 127 && -((signed __CPROVER_bitvector[9])__abs#return_value#241) <= 128
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of getI
Precondition trivially holds, replacing by summary.
Checking precondition of getI
Precondition trivially holds, replacing by summary.
Checking precondition of __abs
Precondition trivially holds, replacing by summary.
Checking precondition of getI
Precondition trivially holds, replacing by summary.
Checking precondition of getI
Precondition trivially holds, replacing by summary.
Checking precondition of __abs
Precondition trivially holds, replacing by summary.
Checking precondition of getI
Precondition trivially holds, replacing by summary.
Checking precondition of getI
Precondition trivially holds, replacing by summary.
Checking precondition of __abs
Precondition trivially holds, replacing by summary.
Checking precondition of getI
Precondition trivially holds, replacing by summary.
Checking precondition of getI
Precondition trivially holds, replacing by summary.
Checking precondition of __abs
Precondition trivially holds, replacing by summary.
Checking precondition of getI
Precondition trivially holds, replacing by summary.
Checking precondition of getI
Precondition trivially holds, replacing by summary.
Checking precondition of __abs
Precondition trivially holds, replacing by summary.
Analyzing function main
Computing summary
Computing termination argument for main
Synthesizing ranking function to prove termination

Summary for function main
params: 
globals_in: 
globals_out: main#return_value#phi184 
forward precondition: TRUE
forward transformer: main#return_value#phi184 <= 0 && -((signed __CPROVER_bitvector[33])main#return_value#phi184) <= 0
forward invariant: ($guard#3 && $guard#ls181 ==> firstAgent#lb181 <= 2) && ($guard#3 && $guard#ls181 ==> -((signed __CPROVER_bitvector[9])firstAgent#lb181) <= 0)
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: $guard#3 && $guard#156 && $cond#181 ==> TRUE

terminates: unknown

Analyzing function __CPROVER__start
Computing summary
Computing termination argument for __CPROVER__start

Summary for function __CPROVER__start
params: 
globals_in: 
globals_out: 
forward precondition: TRUE
forward transformer: TRUE
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: unknown

** statistics: 
  number of solver instances: 3441271515
  number of solver calls: 2302478362
  number of summaries used: 136
  number of termination arguments computed: 3


** Termination: 
[main]: unknown
[__CPROVER_initialize]: yes
[__abs]: yes
[getI]: yes
[getpc]: yes
[setpc]: yes
[getHin]: yes
[getHout]: yes
[getHinCnt]: yes
[setHinCnt]: yes
[getHoutCnt]: yes
[setHoutCnt]: yes
[setHin]: yes
[clearHin]: yes
[setHout]: yes
[clearHout]: yes
[now]: yes
[getLvalue]: yes
[setLvalue]: yes
[getLtstamp]: yes
[setLtstamp]: yes
[timeof]: yes
[getTupleStart]: not computed
[getTupleEnd]: yes
[link]: yes
[attr]: yes
[lstig]: yes
[differentLstig]: not computed
[confirm]: yes
[propagate]: yes
[init]: yes
[_0_2]: yes
[_0_3]: yes
[_0_4]: yes
[_0_5]: yes
[_0_6]: yes
[__CPROVER__start]: unknown
VERIFICATION INCONCLUSIVE
Runtime: 1923 milliseconds