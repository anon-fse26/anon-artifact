2LS version 0.10.0
Parsing Benchmarks/TermCOMP/C/AProVE_numeric/svcomp_c.07/svcomp_c.07.c
Converting
Type-checking svcomp_c.07
Generating GOTO Program
Adding CPROVER library
Function Pointer Removal
Generic Property Instrumentation
Constant Propagation
Using intervals domain with binary search solver
Computing SSA of main
Simplifying
Computing SSA of __CPROVER_initialize
Simplifying
Computing SSA of test_fun
Simplifying
Computing SSA of __CPROVER__start
Simplifying

Summarizing function __CPROVER__start
Checking precondition of __CPROVER_initialize
Function __CPROVER_initialize not analyzed yet
Recursively summarizing function __CPROVER_initialize
Analyzing function __CPROVER_initialize
Computing summary
Computing termination argument for __CPROVER_initialize
Function trivially terminates

Summary for function __CPROVER_initialize
params: 
globals_in: __CPROVER_threads_exited __CPROVER_thread_key_dtors __CPROVER_thread_keys __CPROVER_malloc_is_new_array __CPROVER_alloca_object'obj __CPROVER_dead_object'obj __CPROVER_deallocated'obj __CPROVER_new_object'obj __CPROVER_alloca_object __CPROVER_dead_object __CPROVER_deallocated __CPROVER_new_object __CPROVER_rounding_mode __CPROVER_pipe_count __CPROVER_max_malloc_size __CPROVER_next_thread_id __CPROVER_next_thread_key __CPROVER_thread_id 
globals_out: __CPROVER_threads_exited#32 __CPROVER_thread_key_dtors#30 __CPROVER_thread_keys#31 __CPROVER_malloc_is_new_array#22 __CPROVER_alloca_object'obj __CPROVER_dead_object'obj __CPROVER_deallocated'obj __CPROVER_new_object'obj __CPROVER_alloca_object#19 __CPROVER_dead_object#20 __CPROVER_deallocated#21 __CPROVER_new_object#24 __CPROVER_rounding_mode#28 __CPROVER_pipe_count#27 __CPROVER_max_malloc_size#23 __CPROVER_next_thread_id#25 __CPROVER_next_thread_key#26 __CPROVER_thread_id#29 
forward precondition: TRUE
forward transformer: __CPROVER_rounding_mode#28 <= 0 && -((signed __CPROVER_bitvector[33])__CPROVER_rounding_mode#28) <= 0 && __CPROVER_pipe_count#27 <= 0u && -((signed __CPROVER_bitvector[33])__CPROVER_pipe_count#27) <= 0 && __CPROVER_max_malloc_size#23 <= 36028797018963968ul && -((signed __CPROVER_bitvector[65])__CPROVER_max_malloc_size#23) <= -36028797018963968 && __CPROVER_next_thread_id#25 <= 0ul && -((signed __CPROVER_bitvector[65])__CPROVER_next_thread_id#25) <= 0 && __CPROVER_next_thread_key#26 <= 0ul && -((signed __CPROVER_bitvector[65])__CPROVER_next_thread_key#26) <= 0 && __CPROVER_thread_id#29 <= 0ul && -((signed __CPROVER_bitvector[65])__CPROVER_thread_id#29) <= 0
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of main
Function main not analyzed yet
Recursively summarizing function main
Checking precondition of test_fun
Function test_fun not analyzed yet
Recursively summarizing function test_fun
Analyzing function test_fun
Computing summary
Computing termination argument for test_fun
Synthesizing ranking function to prove termination

Summary for function test_fun
params: i j k tmp 
globals_in: 
globals_out: test_fun#return_value#43 
forward precondition: TRUE
forward transformer: test_fun#return_value#43 <= 2147483647 && -((signed __CPROVER_bitvector[33])test_fun#return_value#43) <= 2147483648
forward invariant: ($guard#36 && $guard#ls42 ==> i#lb42 <= 2147483647) && ($guard#36 && $guard#ls42 ==> -((signed __CPROVER_bitvector[33])i#lb42) <= 2147483648) && ($guard#36 && $guard#ls42 ==> j#lb42 <= 2147483647) && ($guard#36 && $guard#ls42 ==> -((signed __CPROVER_bitvector[33])j#lb42) <= 2147483648) && ($guard#36 && $guard#ls42 ==> k#lb42 <= 2147483647) && ($guard#36 && $guard#ls42 ==> -((signed __CPROVER_bitvector[33])k#lb42) <= 2147483648) && ($guard#36 && $guard#ls42 ==> tmp#lb42 <= 2147483647) && ($guard#36 && $guard#ls42 ==> -((signed __CPROVER_bitvector[33])tmp#lb42) <= 2147483648) && ($guard#36 && $guard#ls42 ==> c#lb42 <= 2147483647) && ($guard#36 && $guard#ls42 ==> -((signed __CPROVER_bitvector[33])c#lb42) <= 2147483648)
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: $guard#36 && $guard#36 && $guard#36 && $guard#36 && $guard#36 && $guard#37 && $cond#42 && $guard#37 && $cond#42 && $guard#37 && $cond#42 && $guard#37 && $cond#42 && $guard#37 && $cond#42 ==> (signed __CPROVER_bitvector[48])((signed __CPROVER_bitvector[47])((signed __CPROVER_bitvector[46])((signed __CPROVER_bitvector[45])((signed __CPROVER_bitvector[44])-1 * (signed __CPROVER_bitvector[44])((signed __CPROVER_bitvector[33])i#phi36 - (signed __CPROVER_bitvector[33])i#38)) + (signed __CPROVER_bitvector[45])((signed __CPROVER_bitvector[44])-1 * (signed __CPROVER_bitvector[44])((signed __CPROVER_bitvector[33])j#phi36 - (signed __CPROVER_bitvector[33])j#39))) + (signed __CPROVER_bitvector[46])((signed __CPROVER_bitvector[44])0 * (signed __CPROVER_bitvector[44])((signed __CPROVER_bitvector[33])k#phi36 - (signed __CPROVER_bitvector[33])k#40))) + (signed __CPROVER_bitvector[47])((signed __CPROVER_bitvector[44])0 * (signed __CPROVER_bitvector[44])((signed __CPROVER_bitvector[33])tmp#phi36 - (signed __CPROVER_bitvector[33])tmp#37))) + (signed __CPROVER_bitvector[48])((signed __CPROVER_bitvector[44])0 * (signed __CPROVER_bitvector[44])((signed __CPROVER_bitvector[33])c#phi36 - (signed __CPROVER_bitvector[33])c#41)) > 0

terminates: yes

Analyzing function main
Computing summary
Computing termination argument for main
Function terminates

Summary for function main
params: 
globals_in: 
globals_out: main#return_value#12 
forward precondition: TRUE
forward transformer: main#return_value#12 <= 2147483647 && -((signed __CPROVER_bitvector[33])main#return_value#12) <= 2147483648
forward invariant: main#return_value#12 <= 2147483647 && -((signed __CPROVER_bitvector[33])main#return_value#12) <= 2147483648
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Analyzing function __CPROVER__start
Computing summary
Computing termination argument for __CPROVER__start
Function terminates

Summary for function __CPROVER__start
params: 
globals_in: 
globals_out: 
forward precondition: TRUE
forward transformer: TRUE
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

** statistics: 
  number of solver instances: 1149535360
  number of solver calls: 240608
  number of summaries used: 3
  number of termination arguments computed: 1


** Termination: 
[main]: yes
[__CPROVER_initialize]: yes
[test_fun]: yes
[__CPROVER__start]: yes
VERIFICATION SUCCESSFUL
Runtime: 595 milliseconds