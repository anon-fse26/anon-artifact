2LS version 0.10.0
Parsing Benchmarks/TermCOMP/C/SV-COMP_Mixed_Categories/s3_clnt_1_false-unreach-call.cil/s3_clnt_1_false-unreach-call.cil.c
Converting
Type-checking s3_clnt_1_false-unreach-call.cil
Generating GOTO Program
Adding CPROVER library
Function Pointer Removal
Generic Property Instrumentation
Constant Propagation
Using intervals domain with binary search solver
Computing SSA of main
Simplifying
Computing SSA of __CPROVER_initialize
Simplifying
Computing SSA of ssl3_connect
Simplifying
Computing SSA of __CPROVER__start
Simplifying

Summarizing function __CPROVER__start
Checking precondition of __CPROVER_initialize
Function __CPROVER_initialize not analyzed yet
Recursively summarizing function __CPROVER_initialize
Analyzing function __CPROVER_initialize
Computing summary
Computing termination argument for __CPROVER_initialize
Function trivially terminates

Summary for function __CPROVER_initialize
params: 
globals_in: __CPROVER_threads_exited __CPROVER_thread_key_dtors __CPROVER_thread_keys __CPROVER_malloc_is_new_array __CPROVER_alloca_object'obj __CPROVER_dead_object'obj __CPROVER_deallocated'obj __CPROVER_new_object'obj __CPROVER_alloca_object __CPROVER_dead_object __CPROVER_deallocated __CPROVER_new_object __CPROVER_rounding_mode __CPROVER_pipe_count __CPROVER_max_malloc_size __CPROVER_next_thread_id __CPROVER_next_thread_key __CPROVER_thread_id 
globals_out: __CPROVER_threads_exited#19 __CPROVER_thread_key_dtors#17 __CPROVER_thread_keys#18 __CPROVER_malloc_is_new_array#9 __CPROVER_alloca_object'obj __CPROVER_dead_object'obj __CPROVER_deallocated'obj __CPROVER_new_object'obj __CPROVER_alloca_object#6 __CPROVER_dead_object#7 __CPROVER_deallocated#8 __CPROVER_new_object#11 __CPROVER_rounding_mode#15 __CPROVER_pipe_count#14 __CPROVER_max_malloc_size#10 __CPROVER_next_thread_id#12 __CPROVER_next_thread_key#13 __CPROVER_thread_id#16 
forward precondition: TRUE
forward transformer: __CPROVER_rounding_mode#15 <= 0 && -((signed __CPROVER_bitvector[33])__CPROVER_rounding_mode#15) <= 0 && __CPROVER_pipe_count#14 <= 0u && -((signed __CPROVER_bitvector[33])__CPROVER_pipe_count#14) <= 0 && __CPROVER_max_malloc_size#10 <= 36028797018963968ul && -((signed __CPROVER_bitvector[65])__CPROVER_max_malloc_size#10) <= -36028797018963968 && __CPROVER_next_thread_id#12 <= 0ul && -((signed __CPROVER_bitvector[65])__CPROVER_next_thread_id#12) <= 0 && __CPROVER_next_thread_key#13 <= 0ul && -((signed __CPROVER_bitvector[65])__CPROVER_next_thread_key#13) <= 0 && __CPROVER_thread_id#16 <= 0ul && -((signed __CPROVER_bitvector[65])__CPROVER_thread_id#16) <= 0
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: yes

Checking precondition of main
Function main not analyzed yet
Recursively summarizing function main
Checking precondition of ssl3_connect
Function ssl3_connect not analyzed yet
Recursively summarizing function ssl3_connect
Analyzing function ssl3_connect
Computing summary
Computing termination argument for ssl3_connect
Synthesizing ranking function to prove termination

Summary for function ssl3_connect
params: initial_state 
globals_in: 
globals_out: ssl3_connect#return_value#472 
forward precondition: TRUE
forward transformer: ssl3_connect#return_value#472 <= 1 && -((signed __CPROVER_bitvector[33])ssl3_connect#return_value#472) <= 2147483648
forward invariant: ($guard#181 && $guard#ls469 ==> s__state#lb469 <= 2147483647) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[33])s__state#lb469) <= 2147483648) && ($guard#181 && $guard#ls469 ==> s__new_session#lb469 <= 2147483647) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[33])s__new_session#lb469) <= 2147483648) && ($guard#181 && $guard#ls469 ==> s__server#lb469 <= 2147483647) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[33])s__server#lb469) <= 2147483648) && ($guard#181 && $guard#ls469 ==> s__type#lb469 <= 2147483647) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[33])s__type#lb469) <= 2147483648) && ($guard#181 && $guard#ls469 ==> s__init_num#lb469 <= 2147483647) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[33])s__init_num#lb469) <= 2147483648) && ($guard#181 && $guard#ls469 ==> s__rwstate#lb469 <= 2147483647) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[33])s__rwstate#lb469) <= 2147483648) && ($guard#181 && $guard#ls469 ==> s__init_buf___0#lb469 <= 2147483647) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[33])s__init_buf___0#lb469) <= 2147483648) && ($guard#181 && $guard#ls469 ==> s__shutdown#lb469 <= 2147483647) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[33])s__shutdown#lb469) <= 2147483648) && ($guard#181 && $guard#ls469 ==> s__ctx__stats__sess_connect_renegotiate#lb469 <= 2147483647) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[33])s__ctx__stats__sess_connect_renegotiate#lb469) <= 2147483648) && ($guard#181 && $guard#ls469 ==> s__ctx__stats__sess_connect#lb469 <= 2147483647) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[33])s__ctx__stats__sess_connect#lb469) <= 2147483648) && ($guard#181 && $guard#ls469 ==> s__s3__change_cipher_spec#lb469 <= 2147483647) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[33])s__s3__change_cipher_spec#lb469) <= 2147483648) && ($guard#181 && $guard#ls469 ==> s__s3__flags#lb469 <= 2147483647) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[33])s__s3__flags#lb469) <= 2147483648) && ($guard#181 && $guard#ls469 ==> s__s3__delay_buf_pop_ret#lb469 <= 2147483647) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[33])s__s3__delay_buf_pop_ret#lb469) <= 2147483648) && ($guard#181 && $guard#ls469 ==> s__s3__tmp__next_state___0#lb469 <= 2147483647) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[33])s__s3__tmp__next_state___0#lb469) <= 2147483648) && ($guard#181 && $guard#ls469 ==> s__session__cipher#lb469 <= 2147483647) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[33])s__session__cipher#lb469) <= 2147483648) && ($guard#181 && $guard#ls469 ==> s__session__compress_meth#lb469 <= 2147483647) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[33])s__session__compress_meth#lb469) <= 2147483648) && ($guard#181 && $guard#ls469 ==> buf#lb469 <= 2147483647) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[33])buf#lb469) <= 2147483648) && ($guard#181 && $guard#ls469 ==> l#lb469 <= 18446744073709551615ul) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[65])l#lb469) <= 0) && ($guard#181 && $guard#ls469 ==> num1#lb469 <= 2147483647) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[33])num1#lb469) <= 2147483648) && ($guard#181 && $guard#ls469 ==> ret#lb469 <= 2147483647) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[33])ret#lb469) <= 1) && ($guard#181 && $guard#ls469 ==> new_state#lb469 <= 2147483647) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[33])new_state#lb469) <= 2147483648) && ($guard#181 && $guard#ls469 ==> state#lb469 <= 2147483647) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[33])state#lb469) <= 2147483648) && ($guard#181 && $guard#ls469 ==> skip#lb469 <= 0) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[33])skip#lb469) <= 0) && ($guard#181 && $guard#ls469 ==> blastFlag#lb469 <= 5) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[33])blastFlag#lb469) <= 0) && ($guard#181 && $guard#ls469 ==> __cil_tmp55#lb469 <= 2147483647) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[33])__cil_tmp55#lb469) <= 2147483648) && ($guard#181 && $guard#ls469 ==> __cil_tmp56#lb469 <= 9223372036854775807l) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[65])__cil_tmp56#lb469) <= 9223372036854775808) && ($guard#181 && $guard#ls469 ==> __cil_tmp57#lb469 <= 9223372036854775807l) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[65])__cil_tmp57#lb469) <= 9223372036854775808) && ($guard#181 && $guard#ls469 ==> __cil_tmp58#lb469 <= 9223372036854775807l) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[65])__cil_tmp58#lb469) <= 9223372036854775808) && ($guard#181 && $guard#ls469 ==> __cil_tmp59#lb469 <= 9223372036854775807l) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[65])__cil_tmp59#lb469) <= 9223372036854775808) && ($guard#181 && $guard#ls469 ==> __cil_tmp60#lb469 <= 9223372036854775807l) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[65])__cil_tmp60#lb469) <= 9223372036854775808) && ($guard#181 && $guard#ls469 ==> __cil_tmp61#lb469 <= 9223372036854775807l) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[65])__cil_tmp61#lb469) <= 9223372036854775808) && ($guard#181 && $guard#ls469 ==> __cil_tmp62#lb469 <= 9223372036854775807l) && ($guard#181 && $guard#ls469 ==> -((signed __CPROVER_bitvector[65])__cil_tmp62#lb469) <= 9223372036854775808)
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#181 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 && $guard#468 && $cond#469 ==> TRUE

terminates: unknown

Analyzing function main
Computing summary
Computing termination argument for main

Summary for function main
params: 
globals_in: 
globals_out: main#return_value#3 
forward precondition: TRUE
forward transformer: main#return_value#3 <= 0 && -((signed __CPROVER_bitvector[33])main#return_value#3) <= 0
forward invariant: main#return_value#3 <= 0 && -((signed __CPROVER_bitvector[33])main#return_value#3) <= 0
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: unknown

Analyzing function __CPROVER__start
Computing summary
Computing termination argument for __CPROVER__start

Summary for function __CPROVER__start
params: 
globals_in: 
globals_out: 
forward precondition: TRUE
forward transformer: TRUE
forward invariant: TRUE
backward precondition: not computed
backward postcondition: not computed
backward transformer: not computed
backward invariant: not computed
termination argument: not computed
terminates: unknown

** statistics: 
  number of solver instances: 2503333936
  number of solver calls: 242174
  number of summaries used: 3
  number of termination arguments computed: 1


** Termination: 
[main]: unknown
[__CPROVER_initialize]: yes
[ssl3_connect]: unknown
[__CPROVER__start]: unknown
VERIFICATION INCONCLUSIVE
Runtime: 350890 milliseconds