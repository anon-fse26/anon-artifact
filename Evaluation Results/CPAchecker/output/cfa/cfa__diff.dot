digraph diff {
8 [shape="doublecircle" label="N8\n25"]
9 [shape="circle" label="N9\n22"]
10 [shape="circle" label="N10\n24"]
11 [shape="circle" label="N11\n21"]
13 [shape="doublecircle" label="N13\n19"]
16 [shape="diamond" label="N16\n18"]
15 [shape="diamond" label="N15\n17"]
25 [shape="circle" label="N25\n16"]
24 [shape="circle" label="N24\n11"]
30 [shape="circle" label="N30\n10"]
26 [shape="circle" label="N26\n15"]
14 [shape="diamond" label="N14\n7"]
18 [shape="circle" label="N18\n2"]
19 [shape="circle" label="N19\n6"]
17 [shape="circle" label="N17\n0"]
0 [shape="circle" label="N0\n23"]
1 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1</td><td align="left">Function start dummy edge</td></tr><tr><td align="right">2</td><td align="left">int k = 0;</td></tr><tr><td align="right">3</td><td align="left">int i = 0;</td></tr><tr><td align="right">4</td><td align="left">int l1 = Alen;</td></tr><tr><td align="right">5</td><td align="left">int l2 = Blen;</td></tr><tr><td align="right">6</td><td align="left">int found;</td></tr><tr><td align="right">7</td><td align="left">while</td></tr></table>>]
1 -> 8[label=""]
11 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">11</td><td align="left">found = 0;</td></tr><tr><td align="right">12</td><td align="left">while</td></tr></table>>]
11 -> 13[label=""]
30 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">30</td><td align="left">i = i + 1;</td></tr><tr><td align="right">31</td><td align="left">__CPAchecker_TMP_2;</td></tr><tr><td align="right">32</td><td align="left"></td></tr></table>>]
30 -> 8[label=""]
26 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">26</td><td align="left">const int __CPAchecker_TMP_1 = k;</td></tr><tr><td align="right">27</td><td align="left">k = k + 1;</td></tr><tr><td align="right">28</td><td align="left">__CPAchecker_TMP_1;</td></tr><tr><td align="right">29</td><td align="left"></td></tr></table>>]
26 -> 24[label=""]
19 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">19</td><td align="left">const int __CPAchecker_TMP_0 = j;</td></tr><tr><td align="right">21</td><td align="left">j = j + 1;</td></tr><tr><td align="right">22</td><td align="left">__CPAchecker_TMP_0;</td></tr><tr><td align="right">23</td><td align="left"></td></tr></table>>]
19 -> 17[label=""]
18 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">18</td><td align="left">found = 1;</td></tr><tr><td align="right">20</td><td align="left"></td></tr></table>>]
18 -> 17[label=""]
8 -> 9 [label="[i < l1]" fontname="Courier New"]
8 -> 10 [label="[!(i < l1)]" fontname="Courier New"]
9 -> 11 [label="int j = 0;" fontname="Courier New"]
13 -> 16 [label="[j < l2]" fontname="Courier New"]
13 -> 15 [label="[!(j < l2)]" fontname="Courier New"]
15 -> 25 [label="[found == 0]" fontname="Courier New"]
15 -> 24 [label="[!(found == 0)]" fontname="Courier New"]
24 -> 30 [label="const int __CPAchecker_TMP_2 = i;" fontname="Courier New"]
25 -> 26 [label="D[k] = A[i];" fontname="Courier New"]
16 -> 14 [label="[found == 0]" fontname="Courier New"]
16 -> 15 [label="[!(found == 0)]" fontname="Courier New"]
14 -> 18 [label="[(A[i]) == (B[j])]" fontname="Courier New"]
14 -> 19 [label="[!((A[i]) == (B[j]))]" fontname="Courier New"]
17 -> 13 [label="" fontname="Courier New"]
10 -> 0 [label="default return" fontname="Courier New"]
}