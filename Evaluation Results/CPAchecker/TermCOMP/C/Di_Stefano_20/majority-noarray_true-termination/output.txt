WARNING: The requested image's platform (linux/amd64) does not match the detected host platform (linux/arm64/v8) and no specific platform was requested
Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with default stack size (1024k). Specify a larger value with --stack if needed.
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

CPAchecker 4.0 / terminationAnalysis (OpenJDK 64-Bit Server VM 17.0.15) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "Benchmarks/TermCOMP/C/Di_Stefano_20/majority-noarray_true-termination/majority-noarray_true-termination.c" (CPAchecker.parse, INFO)

Undefined function __VERIFIER_assume found, first called in line 190 (CheckBindingVisitor.visit, WARNING)

Using Restarting Algorithm (CoreComponentsFactory.createAlgorithm, INFO)

The following configuration options were specified but are not used:
 cpa.arg.lateMerge
 counterexample.export.exportWitness 
 (CPAchecker.printConfigurationWarnings, WARNING)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Loading analysis 1 from file /cpachecker/config/components/combinations-parallel-termination.properties ... (RestartAlgorithm.run, INFO)

Using the following resource limits: Thread CPU-time limit of 300s (Analysis /cpachecker/config/components/combinations-parallel-termination.properties:Parallel analysis 1:ResourceLimitChecker.fromConfiguration, INFO)

Using predicate analysis with MathSAT5 version 5.6.10 (9293adc746be) (May 31 2023 12:38:06, gmp 6.2.0, gcc 7.5.0, 64-bit, reentrant) and JFactory 1.21. (Analysis /cpachecker/config/components/combinations-parallel-termination.properties:Parallel analysis 1:PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (Analysis /cpachecker/config/components/combinations-parallel-termination.properties:Parallel analysis 1:PredicateCPA:PredicateCPARefiner.<init>, INFO)

Warning: Skipping one analysis because the configuration file /cpachecker/config/components/combinations-parallel-termination.properties is invalid (TerminationAlgorithm needs a TerminationCPA) (CPAs.retrieveCPAOrFail, WARNING)

Loading analysis 1 from file /cpachecker/config/components/termination-recursion.properties ... (RestartAlgorithm.run, INFO)

Mismatch of configuration options when loading from '/cpachecker/config/components/termination-recursion.properties': 'termination.config' has two values 'terminationAnalysis.properties' and 'termination-recursion.properties'. Using 'termination-recursion.properties'. (NestingAlgorithm.checkConfigs, INFO)

Using unsound approximation of ints with unbounded integers and floats with rationals for encoding program semantics. (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:FormulaManagerView.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.6.10 (9293adc746be) (May 31 2023 12:38:06, gmp 6.2.0, gcc 7.5.0, 64-bit, reentrant) and JFactory 1.21. (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:PredicateCPARefiner.<init>, INFO)

Using unsound approximation of ints with unbounded integers and floats with rationals for encoding program semantics. (Analysis /cpachecker/config/components/termination-recursion.properties:FormulaManagerView.<init>, WARNING)

Starting analysis 1 ... (RestartAlgorithm.run, INFO)

Starting termination algorithm. (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.run0, INFO)

line 265: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_10); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __VERIFIER_assume to be a pure function. (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __VERIFIER_assume, ignoring calls to it. (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 266: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_27); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 267: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_44); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 268: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_51 == -1); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 269: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_52 == 0); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 270: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_53 == -1); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 271: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_54 == -1); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 272: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_55 == 0); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 273: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_56 == 0); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 274: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_57 == 1); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 265: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_10); (Analysis /cpachecker/config/components/termination-recursion.properties:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __VERIFIER_assume to be a pure function. (Analysis /cpachecker/config/components/termination-recursion.properties:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __VERIFIER_assume, ignoring calls to it. (Analysis /cpachecker/config/components/termination-recursion.properties:ExpressionToFormulaVisitor.visit, WARNING)

line 266: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_27); (Analysis /cpachecker/config/components/termination-recursion.properties:CtoFormulaConverter.getReturnType, WARNING)

line 267: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_44); (Analysis /cpachecker/config/components/termination-recursion.properties:CtoFormulaConverter.getReturnType, WARNING)

line 268: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_51 == -1); (Analysis /cpachecker/config/components/termination-recursion.properties:CtoFormulaConverter.getReturnType, WARNING)

line 269: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_52 == 0); (Analysis /cpachecker/config/components/termination-recursion.properties:CtoFormulaConverter.getReturnType, WARNING)

line 270: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_53 == -1); (Analysis /cpachecker/config/components/termination-recursion.properties:CtoFormulaConverter.getReturnType, WARNING)

line 271: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_54 == -1); (Analysis /cpachecker/config/components/termination-recursion.properties:CtoFormulaConverter.getReturnType, WARNING)

line 272: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_55 == 0); (Analysis /cpachecker/config/components/termination-recursion.properties:CtoFormulaConverter.getReturnType, WARNING)

line 273: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_56 == 0); (Analysis /cpachecker/config/components/termination-recursion.properties:CtoFormulaConverter.getReturnType, WARNING)

line 274: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_57 == 1); (Analysis /cpachecker/config/components/termination-recursion.properties:CtoFormulaConverter.getReturnType, WARNING)

line 392: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(newagent < 3); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 394: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(firstAgent < 3); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 190: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_0 != tid); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 191: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_1 == 1); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 192: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_4); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 340: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_4); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 216: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_0 != tid); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 217: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_1 == 1); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 218: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_4); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 381: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_4); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 226: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_0 != tid); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 227: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_1 == 1); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 228: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_4); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 320: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_4); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 303: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_0 != tid); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 304: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_1 == 1); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 305: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_4); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 346: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_0 == 3); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 354: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_5); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 360: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_0 != tid); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 361: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_1 == 0); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 362: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_2 != 2); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 370: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_7); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 207: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_2); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 208: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_7); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 329: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_4); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 392: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(newagent < 3); (Analysis /cpachecker/config/components/termination-recursion.properties:CtoFormulaConverter.getReturnType, WARNING)

line 394: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(firstAgent < 3); (Analysis /cpachecker/config/components/termination-recursion.properties:CtoFormulaConverter.getReturnType, WARNING)

line 190: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_0 != tid); (Analysis /cpachecker/config/components/termination-recursion.properties:CtoFormulaConverter.getReturnType, WARNING)

line 191: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_1 == 1); (Analysis /cpachecker/config/components/termination-recursion.properties:CtoFormulaConverter.getReturnType, WARNING)

line 192: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(__CPAchecker_TMP_4); (Analysis /cpachecker/config/components/termination-recursion.properties:CtoFormulaConverter.getReturnType, WARNING)

Error path found, starting counterexample check with CPACHECKER. (Analysis /cpachecker/config/components/termination-recursion.properties:CounterexampleCheckAlgorithm.checkCounterexample, INFO)

Exception in thread "main" java.lang.AssertionError: unexpected edge added to witness (edge should not start with SINK): {sink -- {startline=395, endline=395, enterFunction=getpc} --> A150252}
	at org.sosy_lab.cpachecker.cpa.arg.witnessexport.WitnessFactory.putEdge(WitnessFactory.java:1672)
	at org.sosy_lab.cpachecker.cpa.arg.witnessexport.WitnessFactory.mergeNodes(WitnessFactory.java:1544)
	at org.sosy_lab.cpachecker.cpa.arg.witnessexport.WitnessFactory.mergeEdges(WitnessFactory.java:1152)
	at org.sosy_lab.cpachecker.cpa.arg.witnessexport.WitnessFactory.produceWitness(WitnessFactory.java:1105)
	at org.sosy_lab.cpachecker.cpa.arg.witnessexport.WitnessExporter.generateErrorWitness(WitnessExporter.java:133)
	at org.sosy_lab.cpachecker.core.algorithm.counterexamplecheck.CounterexampleCPAchecker.checkCounterexample(CounterexampleCPAchecker.java:198)
	at org.sosy_lab.cpachecker.core.algorithm.counterexamplecheck.CounterexampleCPAchecker.checkCounterexample(CounterexampleCPAchecker.java:182)
	at org.sosy_lab.cpachecker.core.algorithm.counterexamplecheck.CounterexampleCheckAlgorithm.checkErrorPaths(CounterexampleCheckAlgorithm.java:247)
	at org.sosy_lab.cpachecker.core.algorithm.counterexamplecheck.CounterexampleCheckAlgorithm.checkCounterexample(CounterexampleCheckAlgorithm.java:199)
	at org.sosy_lab.cpachecker.core.algorithm.counterexamplecheck.CounterexampleCheckAlgorithm.run(CounterexampleCheckAlgorithm.java:164)
	at org.sosy_lab.cpachecker.core.algorithm.RestartAlgorithm.run(RestartAlgorithm.java:327)
	at org.sosy_lab.cpachecker.core.CPAchecker.runAlgorithm(CPAchecker.java:489)
	at org.sosy_lab.cpachecker.core.CPAchecker.run(CPAchecker.java:357)
	at org.sosy_lab.cpachecker.cmdline.CPAMain.main(CPAMain.java:171)
Runtime: 35096 milliseconds