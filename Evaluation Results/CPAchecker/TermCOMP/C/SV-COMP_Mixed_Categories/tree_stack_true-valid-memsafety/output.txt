WARNING: The requested image's platform (linux/amd64) does not match the detected host platform (linux/arm64/v8) and no specific platform was requested
Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with default stack size (1024k). Specify a larger value with --stack if needed.
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

CPAchecker 4.0 / terminationAnalysis (OpenJDK 64-Bit Server VM 17.0.15) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "Benchmarks/TermCOMP/C/SV-COMP_Mixed_Categories/tree_stack_true-valid-memsafety/tree_stack_true-valid-memsafety.c" (CPAchecker.parse, INFO)

Undefined function __VERIFIER_nondet_int found, first called in line 631 (CheckBindingVisitor.visit, WARNING)

Using Restarting Algorithm (CoreComponentsFactory.createAlgorithm, INFO)

The following configuration options were specified but are not used:
 cpa.arg.lateMerge
 counterexample.export.exportWitness 
 (CPAchecker.printConfigurationWarnings, WARNING)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Loading analysis 1 from file /cpachecker/config/components/combinations-parallel-termination.properties ... (RestartAlgorithm.run, INFO)

Using the following resource limits: Thread CPU-time limit of 300s (Analysis /cpachecker/config/components/combinations-parallel-termination.properties:Parallel analysis 1:ResourceLimitChecker.fromConfiguration, INFO)

Using predicate analysis with MathSAT5 version 5.6.10 (9293adc746be) (May 31 2023 12:38:06, gmp 6.2.0, gcc 7.5.0, 64-bit, reentrant) and JFactory 1.21. (Analysis /cpachecker/config/components/combinations-parallel-termination.properties:Parallel analysis 1:PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (Analysis /cpachecker/config/components/combinations-parallel-termination.properties:Parallel analysis 1:PredicateCPA:PredicateCPARefiner.<init>, INFO)

Warning: Skipping one analysis because the configuration file /cpachecker/config/components/combinations-parallel-termination.properties is invalid (TerminationAlgorithm needs a TerminationCPA) (CPAs.retrieveCPAOrFail, WARNING)

Loading analysis 1 from file /cpachecker/config/components/termination-recursion.properties ... (RestartAlgorithm.run, INFO)

Mismatch of configuration options when loading from '/cpachecker/config/components/termination-recursion.properties': 'termination.config' has two values 'terminationAnalysis.properties' and 'termination-recursion.properties'. Using 'termination-recursion.properties'. (NestingAlgorithm.checkConfigs, INFO)

Using unsound approximation of ints with unbounded integers and floats with rationals for encoding program semantics. (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:FormulaManagerView.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.6.10 (9293adc746be) (May 31 2023 12:38:06, gmp 6.2.0, gcc 7.5.0, 64-bit, reentrant) and JFactory 1.21. (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:PredicateCPARefiner.<init>, INFO)

Using unsound approximation of ints with unbounded integers and floats with rationals for encoding program semantics. (Analysis /cpachecker/config/components/termination-recursion.properties:FormulaManagerView.<init>, WARNING)

Starting analysis 1 ... (RestartAlgorithm.run, INFO)

Starting termination algorithm. (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.run0, INFO)

lines 631-649: Return type of function __VERIFIER_nondet_int is void, but result is used as type int: __CPAchecker_TMP_0 = __VERIFIER_nondet_int(); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

lines 634-637: Return type of function __VERIFIER_nondet_int is void, but result is used as type int: __CPAchecker_TMP_1 = __VERIFIER_nondet_int(); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

lines 639-643: Return type of function __VERIFIER_nondet_int is void, but result is used as type int: __CPAchecker_TMP_2 = __VERIFIER_nondet_int(); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

lines 644-648: Return type of function __VERIFIER_nondet_int is void, but result is used as type int: __CPAchecker_TMP_3 = __VERIFIER_nondet_int(); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

lines 631-649: Return type of function __VERIFIER_nondet_int is void, but result is used as type int: __CPAchecker_TMP_0 = __VERIFIER_nondet_int(); (Analysis /cpachecker/config/components/termination-recursion.properties:CtoFormulaConverter.getReturnType, WARNING)

lines 639-643: Return type of function __VERIFIER_nondet_int is void, but result is used as type int: __CPAchecker_TMP_2 = __VERIFIER_nondet_int(); (Analysis /cpachecker/config/components/termination-recursion.properties:CtoFormulaConverter.getReturnType, WARNING)

lines 644-648: Return type of function __VERIFIER_nondet_int is void, but result is used as type int: __CPAchecker_TMP_3 = __VERIFIER_nondet_int(); (Analysis /cpachecker/config/components/termination-recursion.properties:CtoFormulaConverter.getReturnType, WARNING)

lines 634-637: Return type of function __VERIFIER_nondet_int is void, but result is used as type int: __CPAchecker_TMP_1 = __VERIFIER_nondet_int(); (Analysis /cpachecker/config/components/termination-recursion.properties:CtoFormulaConverter.getReturnType, WARNING)

Warning: Could not extract lasso (Loop with heads [N16]
  incoming: [line 633:	N15 -{while}-> N16]
  outgoing: [line 633:	N16 -{[(n->left) == 0]}-> N18, line 633:	N19 -{[(n->right) == 0]}-> N18]
  nodes:    [N16, N17, N19, N20, N21, N22, N23, N24, N25, N26]
). (Unknown sort in equality) (Analysis /cpachecker/config/components/termination-recursion.properties:InequalityConverter.convert, WARNING)

Could not synthesize a termination or non-termination argument. (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.proveLoopTermination, WARNING)

Warning: Could not extract lasso (Loop with heads [N49]
  incoming: [line 654:	N48 -{while}-> N49]
  outgoing: [line 654:	N49 -{[!(s != ((void *)0))]}-> N51]
  nodes:    [N49, N50, N52, N53, N54, N55, N56, N57, N58, N59, N60, N61, N62, N63, N64, N65, N66, N67, N68]
). (Unknown sort in equality) (Analysis /cpachecker/config/components/termination-recursion.properties:InequalityConverter.convert, WARNING)

Could not synthesize a termination or non-termination argument. (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.proveLoopTermination, WARNING)

Warning: Could not extract lasso (Loop with heads [N10]
  incoming: [line 631:	N9 -{while}-> N10]
  outgoing: [line 631:	N14 -{[__CPAchecker_TMP_0 == 0]}-> N12]
  nodes:    [N10, N11, N13, N14, N15, N16, N17, N18, N19, N20, N21, N22, N23, N24, N25, N26, N27, N28, N29, N30, N31, N32, N33, N34, N35, N36, N37, N38, N39, N40, N41, N42]
). (Unknown sort in equality) (Analysis /cpachecker/config/components/termination-recursion.properties:InequalityConverter.convert, WARNING)

Could not synthesize a termination or non-termination argument. (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.proveLoopTermination, WARNING)

Termination algorithm did not find a non-terminating loop. (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.run0, INFO)

Analysis 1 terminated, but result is unsound. (RestartAlgorithm.run, INFO)

No further configuration available. (RestartAlgorithm.run, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

Analysis incomplete: no errors found, but not everything could be checked. (CPAchecker.analyzeResult, WARNING)


Restart Algorithm statistics
----------------------------
Number of algorithms provided:    2
Number of algorithms used:        1
Last algorithm used:        /cpachecker/config/components/combinations-parallel-termination.properties
Total time for algorithm 1:    15.801s

PredicateCPA statistics
-----------------------
Number of abstractions:            42 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            37 (88%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (12%)
  Times precision was empty:       32 (76%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10 (24%)
  Times result was 'false':        2 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         239
  BDD entailment checks:           19
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Avg ABE block size:                                12.40 (sum: 521, count: 42, min: 0, max: 32)
Number of predicates discovered:          3
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0
Total predicates per abstraction:         17
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 1.70
Number of irrelevant predicates:          7 (41%)
Number of preds handled by boolean abs:   10 (59%)
  Total number of models for allsat:      14
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.40

Time for post operator:                                0.628s
  Time for path formula creation:                      0.617s
Time for strengthen operator:                          0.018s
Time for prec operator:                                0.108s
  Time for abstraction:                  0.089s (Max:     0.021s, Count: 42)
    Boolean abstraction:                 0.036s
    Solving time:                        0.016s (Max:     0.004s)
    Model enumeration time:              0.015s
    Time for BDD construction:           0.005s (Max:     0.003s)
Time for merge operator:                               0.029s
Time for coverage checks:                              0.000s
  Time for BDD entailment checks:                      0.000s
Total time for SMT solver (w/o itp):     0.031s

Number of path formula cache hits:   1936 (64%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.620s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                    0.15 (sum: 24, count: 158, min: 0, max: 18)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

KeyValue statistics
-------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (NonTerminationLabelAutomaton) statistics
-----------------------------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.034s
Automaton transfers with branching:                0
Automaton transfer successors:                     1.00 (sum: 2162, count: 2162, min: 1, max: 1) [1 x 2162]
Number of states with assumption transitions:      0

AutomatonAnalysis (TerminatingFunctions) statistics
---------------------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.007s
Automaton transfers with branching:                0
Automaton transfer successors:                     1.00 (sum: 2162, count: 2162, min: 1, max: 1) [1 x 2162]
Number of states with assumption transitions:      0

Termination Algorithm statistics
--------------------------------
Total time :                                           14.568s
Time for recursion analysis:                            0.000s

Number of analysed loops:                               3 (100%)
Total time for loop analysis:                          14.559s
  Avg time per loop analysis:                           4.853s
  Max time per loop analysis:                          13.551s

Number of safety analysis runs:                         6
  Avg safety analysis run per loop:                     2.00
  Max safety analysis run per loop:                     2 	 for loops [N10], [N16], [N49]
Total time for safety analysis:                         1.582s
  Avg time per safety analysis run:                     0.263s
  Max time per safety analysis run:                     0.906s

Number of analysed lassos:                              0
  Avg number of lassos per loop:                        0.00
  Max number of lassos per loop:                        0 	 for loops 
  Avg number of lassos per iteration:                   0.00
  Max number of lassos per iteration:                   0

Total time for lassos analysis:                        12.948s
  Avg time per iteration:                               4.316s
  Max time per iteration:                              12.359s
  Time for lassos construction:                        12.948s
    Avg time for lasso construction per iteration:      4.316s
    Max time for lasso construction per iteration:     12.359s
      Time for stem and loop construction:                         0.144s
        Avg time for stem and loop construction per iteration:      0.048s
        Max time for stem and loop construction per iteration:      0.069s
      Time for lassos creation:                        12.787s
        Avg time for lassos creation per iteration:      4.262s
        Max time for lassos creation per iteration:     12.276s
  Total time for non-termination analysis:              0.000s
    Avg time for non-termination analysis per lasso:    0.000s
    Max time for non-termination analysis per lasso:    0.000s
  Total time for termination analysis:                  0.000s
    Avg time for termination analysis per lasso:        0.000s
    Max time for termination analysis per lasso:        0.000s

Total number of termination arguments:                  0
  Avg termination arguments per loop:                   0.00
  Max termination arguments per loop:                   0 	 for loops 


Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Termination Algorithm statistics
--------------------------------
Total time :                                           14.568s
Time for recursion analysis:                            0.000s

Number of analysed loops:                               3 (100%)
Total time for loop analysis:                          14.559s
  Avg time per loop analysis:                           4.853s
  Max time per loop analysis:                          13.551s

Number of safety analysis runs:                         6
  Avg safety analysis run per loop:                     2.00
  Max safety analysis run per loop:                     2 	 for loops [N10], [N16], [N49]
Total time for safety analysis:                         1.582s
  Avg time per safety analysis run:                     0.263s
  Max time per safety analysis run:                     0.906s

Number of analysed lassos:                              0
  Avg number of lassos per loop:                        0.00
  Max number of lassos per loop:                        0 	 for loops 
  Avg number of lassos per iteration:                   0.00
  Max number of lassos per iteration:                   0

Total time for lassos analysis:                        12.948s
  Avg time per iteration:                               4.316s
  Max time per iteration:                              12.359s
  Time for lassos construction:                        12.948s
    Avg time for lasso construction per iteration:      4.316s
    Max time for lasso construction per iteration:     12.359s
      Time for stem and loop construction:                         0.144s
        Avg time for stem and loop construction per iteration:      0.048s
        Max time for stem and loop construction per iteration:      0.069s
      Time for lassos creation:                        12.787s
        Avg time for lassos creation per iteration:      4.262s
        Max time for lassos creation per iteration:     12.276s
  Total time for non-termination analysis:              0.000s
    Avg time for non-termination analysis per lasso:    0.000s
    Max time for non-termination analysis per lasso:    0.000s
  Total time for termination analysis:                  0.000s
    Avg time for termination analysis per lasso:        0.000s
    Max time for termination analysis per lasso:        0.000s

Total number of termination arguments:                  0
  Avg termination arguments per loop:                   0.00
  Max termination arguments per loop:                   0 	 for loops 


Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          312
  Total lines:            312
  Line coverage:          1.000
  Visited conditions:     22
  Total conditions:       22
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:                       319
Number of CFA edges (per node):                         329 (count: 319, min: 0, max: 2, avg: 1.03)
Number of relevant variables:                      8
Number of functions:                               1
Number of loops (and loop nodes):                         3 (sum: 61, min: 10, max: 32, avg: 20.33)
Size of reached set:             77
  Number of reached locations:   45 (14%)
    Avg states per location:     1
    Max states per location:     3 (at node N13)
  Number of reached functions:   1 (100%)
  Number of partitions:          45
    Avg size of partitions:      1
    Max size of partitions:      3 (with key N13)
  Number of target states:       0

Time for analysis setup:          1.328s
  Time for loading CPAs:          0.018s
  Time for loading parser:        0.210s
  Time for CFA construction:      1.052s
    Time for parsing file(s):     0.385s
    Time for AST to CFA:          0.338s
    Time for CFA sanity check:    0.033s
    Time for post-processing:     0.154s
    Time for loop structure:      0.011s
    Time for AST structure:       0.000s
    Time for CFA export:          0.591s
      Time for function pointers resolving:            0.003s
        Function calls via function pointers:             0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer calls:              0 (count: 1, min: 0, max: 0, avg: 0.00)
        Function calls with function pointer arguments:        0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer arguments:          0 (count: 1, min: 0, max: 0, avg: 0.00)
      Time for classifying variables:                  0.084s
        Time for collecting variables:                 0.053s
        Time for solving dependencies:                 0.005s
        Time for building hierarchy:                   0.000s
        Time for building classification:              0.022s
        Time for exporting data:                       0.004s
Time for Analysis:               15.806s
CPU time for analysis:           32.480s
Time for analyzing result:        0.001s
Total time for CPAchecker:       17.147s
Total CPU time for CPAchecker:   34.810s
Time for statistics:              0.163s

Time for Garbage Collector:       0.230s (in 129 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                132MB (   126 MiB) max;     71MB (    67 MiB) avg;    143MB (   136 MiB) peak
Used non-heap memory:             60MB (    57 MiB) max;     52MB (    50 MiB) avg;     63MB (    60 MiB) peak
Used in PS Old Gen pool:          46MB (    43 MiB) max;     32MB (    31 MiB) avg;     46MB (    44 MiB) peak
Allocated heap memory:           262MB (   250 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        64MB (    61 MiB) max;     56MB (    54 MiB) avg
Total process virtual memory:  14982MB ( 14288 MiB) max;  14929MB ( 14237 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
Graphical representation included in the file "./output/Report.html".
Runtime: 19660 milliseconds