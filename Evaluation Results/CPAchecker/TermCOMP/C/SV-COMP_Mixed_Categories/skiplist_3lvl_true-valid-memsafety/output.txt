WARNING: The requested image's platform (linux/amd64) does not match the detected host platform (linux/arm64/v8) and no specific platform was requested
Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with default stack size (1024k). Specify a larger value with --stack if needed.
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

CPAchecker 4.0 / terminationAnalysis (OpenJDK 64-Bit Server VM 17.0.15) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "Benchmarks/TermCOMP/C/SV-COMP_Mixed_Categories/skiplist_3lvl_true-valid-memsafety/skiplist_3lvl_true-valid-memsafety.c" (CPAchecker.parse, INFO)

Undefined function __VERIFIER_nondet_int found, first called in line 644 (CheckBindingVisitor.visit, WARNING)

Using Restarting Algorithm (CoreComponentsFactory.createAlgorithm, INFO)

The following configuration options were specified but are not used:
 cpa.arg.lateMerge
 counterexample.export.exportWitness 
 (CPAchecker.printConfigurationWarnings, WARNING)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Loading analysis 1 from file /cpachecker/config/components/combinations-parallel-termination.properties ... (RestartAlgorithm.run, INFO)

Using the following resource limits: Thread CPU-time limit of 300s (Analysis /cpachecker/config/components/combinations-parallel-termination.properties:Parallel analysis 1:ResourceLimitChecker.fromConfiguration, INFO)

Using predicate analysis with MathSAT5 version 5.6.10 (9293adc746be) (May 31 2023 12:38:06, gmp 6.2.0, gcc 7.5.0, 64-bit, reentrant) and JFactory 1.21. (Analysis /cpachecker/config/components/combinations-parallel-termination.properties:Parallel analysis 1:PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (Analysis /cpachecker/config/components/combinations-parallel-termination.properties:Parallel analysis 1:PredicateCPA:PredicateCPARefiner.<init>, INFO)

Warning: Skipping one analysis because the configuration file /cpachecker/config/components/combinations-parallel-termination.properties is invalid (TerminationAlgorithm needs a TerminationCPA) (CPAs.retrieveCPAOrFail, WARNING)

Loading analysis 1 from file /cpachecker/config/components/termination-recursion.properties ... (RestartAlgorithm.run, INFO)

Mismatch of configuration options when loading from '/cpachecker/config/components/termination-recursion.properties': 'termination.config' has two values 'terminationAnalysis.properties' and 'termination-recursion.properties'. Using 'termination-recursion.properties'. (NestingAlgorithm.checkConfigs, INFO)

Using unsound approximation of ints with unbounded integers and floats with rationals for encoding program semantics. (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:FormulaManagerView.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.6.10 (9293adc746be) (May 31 2023 12:38:06, gmp 6.2.0, gcc 7.5.0, 64-bit, reentrant) and JFactory 1.21. (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:PredicateCPARefiner.<init>, INFO)

Using unsound approximation of ints with unbounded integers and floats with rationals for encoding program semantics. (Analysis /cpachecker/config/components/termination-recursion.properties:FormulaManagerView.<init>, WARNING)

Starting analysis 1 ... (RestartAlgorithm.run, INFO)

Starting termination algorithm. (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.run0, INFO)

lines 677-678: Return type of function __VERIFIER_nondet_int is void, but result is used as type int: __CPAchecker_TMP_0 = __VERIFIER_nondet_int(); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

lines 644-645: Return type of function __VERIFIER_nondet_int is void, but result is used as type int: __CPAchecker_TMP_0 = __VERIFIER_nondet_int(); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

lines 647-648: Return type of function __VERIFIER_nondet_int is void, but result is used as type int: __CPAchecker_TMP_1 = __VERIFIER_nondet_int(); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

lines 650-651: Return type of function __VERIFIER_nondet_int is void, but result is used as type int: __CPAchecker_TMP_2 = __VERIFIER_nondet_int(); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

lines 655-662: Return type of function __VERIFIER_nondet_int is void, but result is used as type int: __CPAchecker_TMP_3 = __VERIFIER_nondet_int(); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

lines 658-661: Return type of function __VERIFIER_nondet_int is void, but result is used as type int: __CPAchecker_TMP_4 = __VERIFIER_nondet_int(); (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

lines 677-678: Return type of function __VERIFIER_nondet_int is void, but result is used as type int: __CPAchecker_TMP_0 = __VERIFIER_nondet_int(); (Analysis /cpachecker/config/components/termination-recursion.properties:CtoFormulaConverter.getReturnType, WARNING)

lines 655-662: Return type of function __VERIFIER_nondet_int is void, but result is used as type int: __CPAchecker_TMP_3 = __VERIFIER_nondet_int(); (Analysis /cpachecker/config/components/termination-recursion.properties:CtoFormulaConverter.getReturnType, WARNING)

Warning: Could not extract lasso (Loop with heads [N82]
  incoming: [line 677:	N81 -{while}-> N82]
  outgoing: [line 677:	N86 -{[__CPAchecker_TMP_0 == 0]}-> N84]
  nodes:    [N82, N83, N85, N86, N87]
). (Unknown sort in equality) (Analysis /cpachecker/config/components/termination-recursion.properties:InequalityConverter.convert, WARNING)

Could not synthesize a termination or non-termination argument. (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.proveLoopTermination, WARNING)

Warning: Could not extract lasso (Loop with heads [N70]
  incoming: [line 667:	N69 -{while}-> N70]
  outgoing: [line 667:	N70 -{[(sl->head) == 0]}-> N72]
  nodes:    [N70, N71, N73, N74, N75]
). (Unknown sort in equality) (Analysis /cpachecker/config/components/termination-recursion.properties:InequalityConverter.convert, WARNING)

Could not synthesize a termination or non-termination argument. (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.proveLoopTermination, WARNING)

lines 644-645: Return type of function __VERIFIER_nondet_int is void, but result is used as type int: __CPAchecker_TMP_0 = __VERIFIER_nondet_int(); (Analysis /cpachecker/config/components/termination-recursion.properties:CtoFormulaConverter.getReturnType, WARNING)

Warning: Could not extract lasso (Loop with heads [N28]
  incoming: [line 644:	N27 -{while}-> N28]
  outgoing: [line 644:	N33 -{[__CPAchecker_TMP_0 == 0]}-> N30, line 644:	N28 -{[!((a3->n3) != (sl->tail))]}-> N30]
  nodes:    [N28, N29, N31, N32, N33, N34]
). (Unknown sort in equality) (Analysis /cpachecker/config/components/termination-recursion.properties:InequalityConverter.convert, WARNING)

Could not synthesize a termination or non-termination argument. (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.proveLoopTermination, WARNING)

Error: Refinement failed: Interpolation failed in solver MATHSAT5 with message 'set_raised on an already-raised proof'. (RefinementFailedException.forInterpolationFailureInSolver, SEVERE)


Restart Algorithm statistics
----------------------------
Number of algorithms provided:    2
Number of algorithms used:        1
Last algorithm used:        /cpachecker/config/components/combinations-parallel-termination.properties
Total time for algorithm 1:    10.978s

PredicateCPA statistics
-----------------------
Number of abstractions:            63 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            58 (92%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (8%)
  Times precision was empty:       63 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         135
  BDD entailment checks:           26
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       24
Avg ABE block size:                                9.03 (sum: 569, count: 63, min: 0, max: 24)
Number of predicates discovered:          0

Time for post operator:                                0.521s
  Time for path formula creation:                      0.514s
Time for strengthen operator:                          0.026s
Time for prec operator:                                0.033s
  Time for abstraction:                  0.010s (Max:     0.001s, Count: 63)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                               0.019s
Time for coverage checks:                              0.003s
  Time for BDD entailment checks:                      0.002s
Total time for SMT solver (w/o itp):     0.000s

Number of path formula cache hits:   2018 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.511s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                    0.00 (sum: 0, count: 140, min: 0, max: 0)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

KeyValue statistics
-------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (NonTerminationLabelAutomaton) statistics
-----------------------------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.033s
Automaton transfers with branching:                0
Automaton transfer successors:                     1.00 (sum: 2146, count: 2146, min: 1, max: 1) [1 x 2146]
Number of states with assumption transitions:      0

AutomatonAnalysis (TerminatingFunctions) statistics
---------------------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                     1.00 (sum: 2146, count: 2146, min: 1, max: 1) [1 x 2146]
Number of states with assumption transitions:      0

Termination Algorithm statistics
--------------------------------
Total time :                                            9.803s
Time for recursion analysis:                            0.000s

Number of analysed loops:                               4 (80%)
Total time for loop analysis:                           9.798s
  Avg time per loop analysis:                           2.449s
  Max time per loop analysis:                           4.831s

Number of safety analysis runs:                         7
  Avg safety analysis run per loop:                     1.75
  Max safety analysis run per loop:                     2 	 for loops [N28], [N70], [N82]
Total time for safety analysis:                         1.739s
  Avg time per safety analysis run:                     0.248s
  Max time per safety analysis run:                     0.685s

Number of analysed lassos:                              0
  Avg number of lassos per loop:                        0.00
  Max number of lassos per loop:                        0 	 for loops 
  Avg number of lassos per iteration:                   0.00
  Max number of lassos per iteration:                   0

Total time for lassos analysis:                         8.032s
  Avg time per iteration:                               2.677s
  Max time per iteration:                               4.203s
  Time for lassos construction:                         8.032s
    Avg time for lasso construction per iteration:      2.677s
    Max time for lasso construction per iteration:      4.203s
      Time for stem and loop construction:                         0.123s
        Avg time for stem and loop construction per iteration:      0.041s
        Max time for stem and loop construction per iteration:      0.067s
      Time for lassos creation:                         7.890s
        Avg time for lassos creation per iteration:      2.630s
        Max time for lassos creation per iteration:      4.127s
  Total time for non-termination analysis:              0.000s
    Avg time for non-termination analysis per lasso:    0.000s
    Max time for non-termination analysis per lasso:    0.000s
  Total time for termination analysis:                  0.000s
    Avg time for termination analysis per lasso:        0.000s
    Max time for termination analysis per lasso:        0.000s

Total number of termination arguments:                  0
  Avg termination arguments per loop:                   0.00
  Max termination arguments per loop:                   0 	 for loops 


Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Termination Algorithm statistics
--------------------------------
Total time :                                            9.803s
Time for recursion analysis:                            0.000s

Number of analysed loops:                               4 (80%)
Total time for loop analysis:                           9.798s
  Avg time per loop analysis:                           2.449s
  Max time per loop analysis:                           4.831s

Number of safety analysis runs:                         7
  Avg safety analysis run per loop:                     1.75
  Max safety analysis run per loop:                     2 	 for loops [N28], [N70], [N82]
Total time for safety analysis:                         1.739s
  Avg time per safety analysis run:                     0.248s
  Max time per safety analysis run:                     0.685s

Number of analysed lassos:                              0
  Avg number of lassos per loop:                        0.00
  Max number of lassos per loop:                        0 	 for loops 
  Avg number of lassos per iteration:                   0.00
  Max number of lassos per iteration:                   0

Total time for lassos analysis:                         8.032s
  Avg time per iteration:                               2.677s
  Max time per iteration:                               4.203s
  Time for lassos construction:                         8.032s
    Avg time for lasso construction per iteration:      2.677s
    Max time for lasso construction per iteration:      4.203s
      Time for stem and loop construction:                         0.123s
        Avg time for stem and loop construction per iteration:      0.041s
        Max time for stem and loop construction per iteration:      0.067s
      Time for lassos creation:                         7.890s
        Avg time for lassos creation per iteration:      2.630s
        Max time for lassos creation per iteration:      4.127s
  Total time for non-termination analysis:              0.000s
    Avg time for non-termination analysis per lasso:    0.000s
    Max time for non-termination analysis per lasso:    0.000s
  Total time for termination analysis:                  0.000s
    Avg time for termination analysis per lasso:        0.000s
    Max time for termination analysis per lasso:        0.000s

Total number of termination arguments:                  0
  Avg termination arguments per loop:                   0.00
  Max termination arguments per loop:                   0 	 for loops 


Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.600
  Visited lines:          284
  Total lines:            308
  Line coverage:          0.922
  Visited conditions:     10
  Total conditions:       20
  Condition coverage:     0.500

CPAchecker general statistics
-----------------------------
Number of program locations:                       343
Number of CFA edges (per node):                         351 (count: 343, min: 0, max: 2, avg: 1.02)
Number of relevant variables:                      16
Number of functions:                               5
Number of loops (and loop nodes):                         5 (sum: 28, min: 5, max: 6, avg: 5.60)
Size of reached set:             37
  Number of reached locations:   30 (9%)
    Avg states per location:     1
    Max states per location:     3 (at node N39)
  Number of reached functions:   3 (60%)
  Number of partitions:          30
    Avg size of partitions:      1
    Max size of partitions:      3 (with key N39)
  Number of target states:       1
  Size of final wait list:       5

Time for analysis setup:          1.362s
  Time for loading CPAs:          0.012s
  Time for loading parser:        0.221s
  Time for CFA construction:      1.089s
    Time for parsing file(s):     0.390s
    Time for AST to CFA:          0.343s
    Time for CFA sanity check:    0.040s
    Time for post-processing:     0.173s
    Time for loop structure:      0.008s
    Time for AST structure:       0.000s
    Time for CFA export:          0.582s
      Time for function pointers resolving:            0.003s
        Function calls via function pointers:             0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer calls:              0 (count: 1, min: 0, max: 0, avg: 0.00)
        Function calls with function pointer arguments:        0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer arguments:          0 (count: 1, min: 0, max: 0, avg: 0.00)
      Time for classifying variables:                  0.093s
        Time for collecting variables:                 0.056s
        Time for solving dependencies:                 0.005s
        Time for building hierarchy:                   0.000s
        Time for building classification:              0.028s
        Time for exporting data:                       0.004s
Time for Analysis:               10.981s
CPU time for analysis:           29.670s
Total time for CPAchecker:       12.353s
Total CPU time for CPAchecker:   32.000s
Time for statistics:              0.165s

Time for Garbage Collector:       0.172s (in 55 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                118MB (   112 MiB) max;     62MB (    59 MiB) avg;    134MB (   128 MiB) peak
Used non-heap memory:             61MB (    58 MiB) max;     50MB (    48 MiB) avg;     63MB (    61 MiB) peak
Used in PS Old Gen pool:          42MB (    40 MiB) max;     28MB (    27 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           261MB (   249 MiB) max;    249MB (   237 MiB) avg
Allocated non-heap memory:        65MB (    62 MiB) max;     54MB (    52 MiB) avg
Total process virtual memory:  14980MB ( 14286 MiB) max;  14914MB ( 14223 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
Graphical representation included in the file "./output/Counterexample.7.html".
Runtime: 14869 milliseconds