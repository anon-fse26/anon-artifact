WARNING: The requested image's platform (linux/amd64) does not match the detected host platform (linux/arm64/v8) and no specific platform was requested
Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with default stack size (1024k). Specify a larger value with --stack if needed.
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

CPAchecker 4.0 / terminationAnalysis (OpenJDK 64-Bit Server VM 17.0.15) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "Benchmarks/TermCOMP/C/SV-COMP_Mixed_Categories/elevator_spec1_product01_true-unreach-call.cil/elevator_spec1_product01_true-unreach-call.cil.c" (CPAchecker.parse, INFO)

Elevator.c, line 1144: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

Elevator.c, line 1295: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

Elevator.c, line 1326: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

Elevator.c, line 1392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

Elevator.c, line 1423: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

Elevator.c, line 1497: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

Elevator.c, line 1599: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

Elevator.c, line 1630: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

Elevator.c, line 1829: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

Elevator.c, line 1895: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

Elevator.c, line 1988: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

Elevator.c, line 2028: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

Elevator.c, line 2363: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

Test.c, line 1629: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

Floor.c, line 1183: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

Floor.c, line 1507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

Floor.c, line 1730: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

libacc.c, line 879: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

libacc.c, line 912: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

Person.c, line 1036: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

Person.c, line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

Person.c, line 1210: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

featureselect.c, line 72: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

featureselect.c, line 139: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

libacc.c, line 65: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.getTargets, WARNING)

Using Restarting Algorithm (CoreComponentsFactory.createAlgorithm, INFO)

The following configuration options were specified but are not used:
 cpa.arg.lateMerge
 counterexample.export.exportWitness 
 (CPAchecker.printConfigurationWarnings, WARNING)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Loading analysis 1 from file /cpachecker/config/components/combinations-parallel-termination.properties ... (RestartAlgorithm.run, INFO)

Using the following resource limits: Thread CPU-time limit of 300s (Analysis /cpachecker/config/components/combinations-parallel-termination.properties:Parallel analysis 1:ResourceLimitChecker.fromConfiguration, INFO)

Using predicate analysis with MathSAT5 version 5.6.10 (9293adc746be) (May 31 2023 12:38:06, gmp 6.2.0, gcc 7.5.0, 64-bit, reentrant) and JFactory 1.21. (Analysis /cpachecker/config/components/combinations-parallel-termination.properties:Parallel analysis 1:PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (Analysis /cpachecker/config/components/combinations-parallel-termination.properties:Parallel analysis 1:PredicateCPA:PredicateCPARefiner.<init>, INFO)

Warning: Skipping one analysis because the configuration file /cpachecker/config/components/combinations-parallel-termination.properties is invalid (TerminationAlgorithm needs a TerminationCPA) (CPAs.retrieveCPAOrFail, WARNING)

Loading analysis 1 from file /cpachecker/config/components/termination-recursion.properties ... (RestartAlgorithm.run, INFO)

Mismatch of configuration options when loading from '/cpachecker/config/components/termination-recursion.properties': 'termination.config' has two values 'terminationAnalysis.properties' and 'termination-recursion.properties'. Using 'termination-recursion.properties'. (NestingAlgorithm.checkConfigs, INFO)

Using unsound approximation of ints with unbounded integers and floats with rationals for encoding program semantics. (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:FormulaManagerView.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.6.10 (9293adc746be) (May 31 2023 12:38:06, gmp 6.2.0, gcc 7.5.0, 64-bit, reentrant) and JFactory 1.21. (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:PredicateCPARefiner.<init>, INFO)

Using unsound approximation of ints with unbounded integers and floats with rationals for encoding program semantics. (Analysis /cpachecker/config/components/termination-recursion.properties:FormulaManagerView.<init>, WARNING)

Starting analysis 1 ... (RestartAlgorithm.run, INFO)

Starting termination algorithm. (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.run0, INFO)

Termination algorithm did not find a non-terminating loop. (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.run0, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)


Restart Algorithm statistics
----------------------------
Number of algorithms provided:    2
Number of algorithms used:        1
Last algorithm used:        /cpachecker/config/components/combinations-parallel-termination.properties
Total time for algorithm 1:    31.456s

PredicateCPA statistics
-----------------------
Number of abstractions:            54 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            44 (81%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (19%)
  Times precision was empty:       25 (46%)
  Times precision was {false}:     8 (15%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      21 (39%)
  Times result was 'false':        6 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         95517
  BDD entailment checks:           83
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       836
Avg ABE block size:                                607.70 (sum: 32816, count: 54, min: 0, max: 836)
Number of predicates discovered:          18
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0
Total predicates per abstraction:         386
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 13.31
Number of irrelevant predicates:          30 (8%)
Number of preds handled by boolean abs:   356 (92%)
  Total number of models for allsat:      1533
  Max number of models for allsat:        219
  Avg number of models for allsat:        73.00

Time for post operator:                                2.627s
  Time for path formula creation:                      2.576s
Time for strengthen operator:                          0.176s
Time for prec operator:                               11.487s
  Time for abstraction:                 11.381s (Max:     1.542s, Count: 54)
    Boolean abstraction:                10.909s
    Solving time:                        1.058s (Max:     0.065s)
    Model enumeration time:              9.940s
    Time for BDD construction:           0.083s (Max:     0.005s)
Time for merge operator:                               0.752s
Time for coverage checks:                              0.019s
  Time for BDD entailment checks:                      0.013s
Total time for SMT solver (w/o itp):    10.998s

Number of path formula cache hits:   136966 (55%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.426s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               12700
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                    1.41 (sum: 1163, count: 823, min: 0, max: 155)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

KeyValue statistics
-------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (NonTerminationLabelAutomaton) statistics
-----------------------------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.190s
Automaton transfers with branching:                0
Automaton transfer successors:                     1.00 (sum: 223617, count: 223692, min: 0, max: 1) [0 x 75, 1 x 223617]
Number of states with assumption transitions:      0

AutomatonAnalysis (TerminatingFunctions) statistics
---------------------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.090s
Automaton transfers with branching:                0
Automaton transfer successors:                     1.00 (sum: 223617, count: 223617, min: 1, max: 1) [1 x 223617]
Number of states with assumption transitions:      0

Termination Algorithm statistics
--------------------------------
Total time :                                           30.020s
Time for recursion analysis:                            0.000s

Number of analysed loops:                               9 (100%)
Total time for loop analysis:                          30.009s
  Avg time per loop analysis:                           3.334s
  Max time per loop analysis:                          27.642s

Number of safety analysis runs:                        10
  Avg safety analysis run per loop:                     1.11
  Max safety analysis run per loop:                     2 	 for loops [N1254]
Total time for safety analysis:                        22.595s
  Avg time per safety analysis run:                     2.259s
  Max time per safety analysis run:                    18.433s

Number of analysed lassos:                              1
  Avg number of lassos per loop:                        0.11
  Max number of lassos per loop:                        1 	 for loops [N1254]
  Avg number of lassos per iteration:                   1.00
  Max number of lassos per iteration:                   1

Total time for lassos analysis:                         7.305s
  Avg time per iteration:                               7.305s
  Max time per iteration:                               7.305s
  Time for lassos construction:                         3.282s
    Avg time for lasso construction per iteration:      3.282s
    Max time for lasso construction per iteration:      3.282s
      Time for stem and loop construction:                         0.159s
        Avg time for stem and loop construction per iteration:      0.159s
        Max time for stem and loop construction per iteration:      0.159s
      Time for lassos creation:                         3.121s
        Avg time for lassos creation per iteration:      3.121s
        Max time for lassos creation per iteration:      3.121s
  Total time for non-termination analysis:              0.947s
    Avg time for non-termination analysis per lasso:    0.947s
    Max time for non-termination analysis per lasso:    0.947s
  Total time for termination analysis:                  3.076s
    Avg time for termination analysis per lasso:        3.076s
    Max time for termination analysis per lasso:        3.076s

Total number of termination arguments:                  1
  Avg termination arguments per loop:                   0.11
  Max termination arguments per loop:                   1 	 for loops [N1254]

  affine:                                               1

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Termination Algorithm statistics
--------------------------------
Total time :                                           30.020s
Time for recursion analysis:                            0.000s

Number of analysed loops:                               9 (100%)
Total time for loop analysis:                          30.009s
  Avg time per loop analysis:                           3.334s
  Max time per loop analysis:                          27.642s

Number of safety analysis runs:                        10
  Avg safety analysis run per loop:                     1.11
  Max safety analysis run per loop:                     2 	 for loops [N1254]
Total time for safety analysis:                        22.595s
  Avg time per safety analysis run:                     2.259s
  Max time per safety analysis run:                    18.433s

Number of analysed lassos:                              1
  Avg number of lassos per loop:                        0.11
  Max number of lassos per loop:                        1 	 for loops [N1254]
  Avg number of lassos per iteration:                   1.00
  Max number of lassos per iteration:                   1

Total time for lassos analysis:                         7.305s
  Avg time per iteration:                               7.305s
  Max time per iteration:                               7.305s
  Time for lassos construction:                         3.282s
    Avg time for lasso construction per iteration:      3.282s
    Max time for lasso construction per iteration:      3.282s
      Time for stem and loop construction:                         0.159s
        Avg time for stem and loop construction per iteration:      0.159s
        Max time for stem and loop construction per iteration:      0.159s
      Time for lassos creation:                         3.121s
        Avg time for lassos creation per iteration:      3.121s
        Max time for lassos creation per iteration:      3.121s
  Total time for non-termination analysis:              0.947s
    Avg time for non-termination analysis per lasso:    0.947s
    Max time for non-termination analysis per lasso:    0.947s
  Total time for termination analysis:                  3.076s
    Avg time for termination analysis per lasso:        3.076s
    Max time for termination analysis per lasso:        3.076s

Total number of termination arguments:                  1
  Avg termination arguments per loop:                   0.11
  Max termination arguments per loop:                   1 	 for loops [N1254]

  affine:                                               1

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.580
  Visited lines:          701
  Total lines:            1129
  Line coverage:          0.621
  Visited conditions:     580
  Total conditions:       748
  Condition coverage:     0.775

CPAchecker general statistics
-----------------------------
Number of program locations:                       2197
Number of CFA edges (per node):                        2666 (count: 2197, min: 0, max: 21, avg: 1.21)
Number of relevant variables:                      309
Number of functions:                               69
Number of loops (and loop nodes):                         9 (sum: 175, min: 11, max: 37, avg: 19.44)
Size of reached set:             6992
  Number of reached locations:   1101 (50%)
    Avg states per location:     6
    Max states per location:     47 (at node N1432)
  Number of reached functions:   40 (58%)
  Number of partitions:          1101
    Avg size of partitions:      6
    Max size of partitions:      47 (with key N1432)
  Number of target states:       0

Time for analysis setup:          2.194s
  Time for loading CPAs:          0.019s
  Time for loading parser:        0.210s
  Time for CFA construction:      1.915s
    Time for parsing file(s):     0.470s
    Time for AST to CFA:          0.685s
    Time for CFA sanity check:    0.115s
    Time for post-processing:     0.448s
    Time for loop structure:      0.034s
    Time for AST structure:       0.000s
    Time for CFA export:          0.851s
      Time for function pointers resolving:            0.010s
        Function calls via function pointers:             1 (count: 1, min: 1, max: 1, avg: 1.00)
        Instrumented function pointer calls:              0 (count: 1, min: 0, max: 0, avg: 0.00)
        Function calls with function pointer arguments:        0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer arguments:          0 (count: 1, min: 0, max: 0, avg: 0.00)
      Time for classifying variables:                  0.271s
        Time for collecting variables:                 0.183s
        Time for solving dependencies:                 0.008s
        Time for building hierarchy:                   0.000s
        Time for building classification:              0.061s
        Time for exporting data:                       0.019s
Time for Analysis:               31.460s
CPU time for analysis:           52.750s
Time for analyzing result:        0.004s
Total time for CPAchecker:       33.669s
Total CPU time for CPAchecker:   56.830s
Time for statistics:              0.247s

Time for Garbage Collector:       0.389s (in 112 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                228MB (   217 MiB) max;    118MB (   113 MiB) avg;    245MB (   234 MiB) peak
Used non-heap memory:             66MB (    63 MiB) max;     59MB (    57 MiB) avg;     68MB (    65 MiB) peak
Used in PS Old Gen pool:         149MB (   142 MiB) max;     81MB (    77 MiB) avg;    150MB (   143 MiB) peak
Allocated heap memory:           262MB (   250 MiB) max;    256MB (   244 MiB) avg
Allocated non-heap memory:        69MB (    66 MiB) max;     63MB (    60 MiB) avg
Total process virtual memory:  15516MB ( 14798 MiB) max;  15252MB ( 14545 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
Graphical representation included in the file "./output/Report.html".
Runtime: 36648 milliseconds