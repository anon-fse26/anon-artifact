WARNING: The requested image's platform (linux/amd64) does not match the detected host platform (linux/arm64/v8) and no specific platform was requested
Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with default stack size (1024k). Specify a larger value with --stack if needed.
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

CPAchecker 4.0 / terminationAnalysis (OpenJDK 64-Bit Server VM 17.0.15) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "Benchmarks/FSE/loop/Undefined_Behavior_2_T/Undefined_Behavior_2_T.c" (CPAchecker.parse, INFO)

Using Restarting Algorithm (CoreComponentsFactory.createAlgorithm, INFO)

The following configuration options were specified but are not used:
 cpa.arg.lateMerge
 counterexample.export.exportWitness 
 (CPAchecker.printConfigurationWarnings, WARNING)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Loading analysis 1 from file /cpachecker/config/components/combinations-parallel-termination.properties ... (RestartAlgorithm.run, INFO)

Using the following resource limits: Thread CPU-time limit of 300s (Analysis /cpachecker/config/components/combinations-parallel-termination.properties:Parallel analysis 1:ResourceLimitChecker.fromConfiguration, INFO)

Using predicate analysis with MathSAT5 version 5.6.10 (9293adc746be) (May 31 2023 12:38:06, gmp 6.2.0, gcc 7.5.0, 64-bit, reentrant) and JFactory 1.21. (Analysis /cpachecker/config/components/combinations-parallel-termination.properties:Parallel analysis 1:PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (Analysis /cpachecker/config/components/combinations-parallel-termination.properties:Parallel analysis 1:PredicateCPA:PredicateCPARefiner.<init>, INFO)

Warning: Skipping one analysis because the configuration file /cpachecker/config/components/combinations-parallel-termination.properties is invalid (TerminationAlgorithm needs a TerminationCPA) (CPAs.retrieveCPAOrFail, WARNING)

Loading analysis 1 from file /cpachecker/config/components/termination-recursion.properties ... (RestartAlgorithm.run, INFO)

Mismatch of configuration options when loading from '/cpachecker/config/components/termination-recursion.properties': 'termination.config' has two values 'terminationAnalysis.properties' and 'termination-recursion.properties'. Using 'termination-recursion.properties'. (NestingAlgorithm.checkConfigs, INFO)

Using unsound approximation of ints with unbounded integers and floats with rationals for encoding program semantics. (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:FormulaManagerView.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.6.10 (9293adc746be) (May 31 2023 12:38:06, gmp 6.2.0, gcc 7.5.0, 64-bit, reentrant) and JFactory 1.21. (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:PredicateCPARefiner.<init>, INFO)

Using unsound approximation of ints with unbounded integers and floats with rationals for encoding program semantics. (Analysis /cpachecker/config/components/termination-recursion.properties:FormulaManagerView.<init>, WARNING)

Starting analysis 1 ... (RestartAlgorithm.run, INFO)

Starting termination algorithm. (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.run0, INFO)

Repeated ranking relation (let ((.cse7 (* (- 8589934595) |ffs::i__TERMINATION_PRIMED|)) (.cse8 (+ 0 0)) (.cse6 (* (- 8589934595) |ffs::i|))) (let ((.cse1 (+ .cse8 .cse6)) (.cse2 (+ .cse8 .cse7))) (or (let ((.cse0 (+ .cse2 (* 17179869189 |ffs::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse0 0) (< (+ .cse1 (* 17179869189 |ffs::__CPAchecker_TMP_0|)) .cse0))) (let ((.cse3 (+ .cse2 (* 12884901891 |ffs::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse3 0) (< (+ .cse1 (* 12884901891 |ffs::__CPAchecker_TMP_0|)) .cse3))) (let ((.cse5 (+ 0 8589934594))) (let ((.cse4 (+ (+ .cse5 .cse7) (* 8589934595 |ffs::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse4 0) (< (+ (+ .cse5 .cse6) (* 8589934595 |ffs::__CPAchecker_TMP_0|)) .cse4))))))) for Loop with heads [N4]
  incoming: [line 13:	N3 -{while}-> N4]
  outgoing: [line 13:	N4 -{[!((w % 2) == 0)]}-> N6]
  nodes:    [N4, N5, N7, N8, N9, N10]
 (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.proveLoopTermination, WARNING)

Repeated ranking relation (let ((.cse7 (* (- 8589934595) |ffs::i__TERMINATION_PRIMED|)) (.cse8 (+ 0 0)) (.cse6 (* (- 8589934595) |ffs::i|))) (let ((.cse1 (+ .cse8 .cse6)) (.cse2 (+ .cse8 .cse7))) (or (let ((.cse0 (+ .cse2 (* 17179869191 |ffs::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse0 0) (< (+ .cse1 (* 17179869191 |ffs::__CPAchecker_TMP_0|)) .cse0))) (let ((.cse3 (+ .cse2 (* 17179869189 |ffs::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse3 0) (< (+ .cse1 (* 17179869189 |ffs::__CPAchecker_TMP_0|)) .cse3))) (let ((.cse5 (+ 0 8589934594))) (let ((.cse4 (+ (+ .cse5 .cse7) (* 8589934595 |ffs::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse4 0) (< (+ (+ .cse5 .cse6) (* 8589934595 |ffs::__CPAchecker_TMP_0|)) .cse4))))))) for Loop with heads [N4]
  incoming: [line 13:	N3 -{while}-> N4]
  outgoing: [line 13:	N4 -{[!((w % 2) == 0)]}-> N6]
  nodes:    [N4, N5, N7, N8, N9, N10]
 (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.proveLoopTermination, WARNING)

Repeated ranking relation (let ((.cse2 (* (- 8589934595) |ffs::i|)) (.cse3 (* (- 8589934595) |ffs::i__TERMINATION_PRIMED|))) (or (let ((.cse1 (+ 0 0))) (let ((.cse0 (+ (+ .cse1 .cse3) (* 12884901891 |ffs::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse0 0) (< (+ (+ .cse1 .cse2) (* 12884901891 |ffs::__CPAchecker_TMP_0|)) .cse0)))) (let ((.cse5 (+ 0 8589934594))) (let ((.cse4 (+ (+ .cse5 .cse3) (* 8589934595 |ffs::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse4 0) (< (+ (+ .cse5 .cse2) (* 8589934595 |ffs::__CPAchecker_TMP_0|)) .cse4)))))) for Loop with heads [N4]
  incoming: [line 13:	N3 -{while}-> N4]
  outgoing: [line 13:	N4 -{[!((w % 2) == 0)]}-> N6]
  nodes:    [N4, N5, N7, N8, N9, N10]
 (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.proveLoopTermination, WARNING)

Repeated ranking relation (let ((.cse2 (* (- 8589934595) |ffs::i|)) (.cse3 (* (- 8589934595) |ffs::i__TERMINATION_PRIMED|))) (or (let ((.cse1 (+ 0 0))) (let ((.cse0 (+ (+ .cse1 .cse3) (* 12884901891 |ffs::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse0 0) (< (+ (+ .cse1 .cse2) (* 12884901891 |ffs::__CPAchecker_TMP_0|)) .cse0)))) (let ((.cse5 (+ 0 8589934594))) (let ((.cse4 (+ (+ .cse5 .cse3) (* 8589934595 |ffs::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse4 0) (< (+ (+ .cse5 .cse2) (* 8589934595 |ffs::__CPAchecker_TMP_0|)) .cse4)))))) for Loop with heads [N4]
  incoming: [line 13:	N3 -{while}-> N4]
  outgoing: [line 13:	N4 -{[!((w % 2) == 0)]}-> N6]
  nodes:    [N4, N5, N7, N8, N9, N10]
 (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.proveLoopTermination, WARNING)

Repeated ranking relation (let ((.cse4 (+ 0 0))) (let ((.cse1 (+ .cse4 (* (- 8589934595) |ffs::i|))) (.cse2 (+ .cse4 (* (- 8589934595) |ffs::i__TERMINATION_PRIMED|)))) (or (let ((.cse0 (+ .cse2 (* 17179869189 |ffs::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse0 0) (< (+ .cse1 (* 17179869189 |ffs::__CPAchecker_TMP_0|)) .cse0))) (let ((.cse3 (+ .cse2 (* 12884901891 |ffs::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse3 0) (< (+ .cse1 (* 12884901891 |ffs::__CPAchecker_TMP_0|)) .cse3)))))) for Loop with heads [N4]
  incoming: [line 13:	N3 -{while}-> N4]
  outgoing: [line 13:	N4 -{[!((w % 2) == 0)]}-> N6]
  nodes:    [N4, N5, N7, N8, N9, N10]
 (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.proveLoopTermination, WARNING)

Repeated ranking relation (let ((.cse4 (+ 0 0))) (let ((.cse1 (+ .cse4 (* (- 8589934595) |ffs::i|))) (.cse2 (+ .cse4 (* (- 8589934595) |ffs::i__TERMINATION_PRIMED|)))) (or (let ((.cse0 (+ .cse2 (* 12884901891 |ffs::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse0 0) (< (+ .cse1 (* 12884901891 |ffs::__CPAchecker_TMP_0|)) .cse0))) (let ((.cse3 (+ .cse2 (* 17179869189 |ffs::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse3 0) (< (+ .cse1 (* 17179869189 |ffs::__CPAchecker_TMP_0|)) .cse3)))))) for Loop with heads [N4]
  incoming: [line 13:	N3 -{while}-> N4]
  outgoing: [line 13:	N4 -{[!((w % 2) == 0)]}-> N6]
  nodes:    [N4, N5, N7, N8, N9, N10]
 (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.proveLoopTermination, WARNING)

Repeated ranking relation (let ((.cse2 (* (- 8589934595) |ffs::i|)) (.cse3 (* (- 8589934595) |ffs::i__TERMINATION_PRIMED|))) (or (let ((.cse1 (+ 0 8589934594))) (let ((.cse0 (+ (+ .cse1 .cse3) (* 8589934595 |ffs::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse0 0) (< (+ (+ .cse1 .cse2) (* 8589934595 |ffs::__CPAchecker_TMP_0|)) .cse0)))) (let ((.cse5 (+ 0 0))) (let ((.cse4 (+ (+ .cse5 .cse3) (* 17179869189 |ffs::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse4 0) (< (+ (+ .cse5 .cse2) (* 17179869189 |ffs::__CPAchecker_TMP_0|)) .cse4)))))) for Loop with heads [N4]
  incoming: [line 13:	N3 -{while}-> N4]
  outgoing: [line 13:	N4 -{[!((w % 2) == 0)]}-> N6]
  nodes:    [N4, N5, N7, N8, N9, N10]
 (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.proveLoopTermination, WARNING)

Repeated ranking relation (or (let ((.cse1 (+ 0 0))) (let ((.cse0 (+ (+ .cse1 (* (- 8589934595) |ffs::i__TERMINATION_PRIMED|)) (* 17179869189 |ffs::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse0 0) (< (+ (+ .cse1 (* (- 8589934595) |ffs::i|)) (* 17179869189 |ffs::__CPAchecker_TMP_0|)) .cse0)))) (let ((.cse3 (+ 0 8589934594))) (let ((.cse2 (+ (+ .cse3 (* (- 4294967299) |ffs::i__TERMINATION_PRIMED|)) (* 4294967299 |ffs::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse2 0) (< (+ (+ .cse3 (* (- 4294967299) |ffs::i|)) (* 4294967299 |ffs::__CPAchecker_TMP_0|)) .cse2))))) for Loop with heads [N4]
  incoming: [line 13:	N3 -{while}-> N4]
  outgoing: [line 13:	N4 -{[!((w % 2) == 0)]}-> N6]
  nodes:    [N4, N5, N7, N8, N9, N10]
 (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.proveLoopTermination, WARNING)

Repeated ranking relation (let ((.cse1 (+ 0 0))) (let ((.cse0 (+ (+ .cse1 (* (- 8589934595) |ffs::i__TERMINATION_PRIMED|)) (* 12884901891 |ffs::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse0 0) (< (+ (+ .cse1 (* (- 8589934595) |ffs::i|)) (* 12884901891 |ffs::__CPAchecker_TMP_0|)) .cse0)))) for Loop with heads [N4]
  incoming: [line 13:	N3 -{while}-> N4]
  outgoing: [line 13:	N4 -{[!((w % 2) == 0)]}-> N6]
  nodes:    [N4, N5, N7, N8, N9, N10]
 (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.proveLoopTermination, WARNING)

Repeated ranking relation (let ((.cse4 (+ 0 0))) (let ((.cse1 (+ .cse4 (* (- 8589934595) |ffs::i|))) (.cse2 (+ .cse4 (* (- 8589934595) |ffs::i__TERMINATION_PRIMED|)))) (or (let ((.cse0 (+ .cse2 (* 12884901891 |ffs::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse0 0) (< (+ .cse1 (* 12884901891 |ffs::__CPAchecker_TMP_0|)) .cse0))) (let ((.cse3 (+ .cse2 (* 17179869189 |ffs::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse3 0) (< (+ .cse1 (* 17179869189 |ffs::__CPAchecker_TMP_0|)) .cse3)))))) for Loop with heads [N4]
  incoming: [line 13:	N3 -{while}-> N4]
  outgoing: [line 13:	N4 -{[!((w % 2) == 0)]}-> N6]
  nodes:    [N4, N5, N7, N8, N9, N10]
 (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.proveLoopTermination, WARNING)

Error path found, starting counterexample check with CPACHECKER. (Analysis /cpachecker/config/components/termination-recursion.properties:CounterexampleCheckAlgorithm.checkCounterexample, INFO)

Cannot map specification TRUE to property type. Will ignore it (would only be problematic if this were the termination property). (Analysis /cpachecker/config/components/termination-recursion.properties:CounterexampleCheck:AutomatonGraphmlParser.getSpecAsProperties, WARNING)

Source A2017 of transition [edge: null] is a violation state. No outgoing edges expected. (Analysis /cpachecker/config/components/termination-recursion.properties:CounterexampleCheck:AutomatonGraphmlParser.collectEdgeData, WARNING)

Using predicate analysis with MathSAT5 version 5.6.10 (9293adc746be) (May 31 2023 12:38:06, gmp 6.2.0, gcc 7.5.0, 64-bit, reentrant). (Analysis /cpachecker/config/components/termination-recursion.properties:CounterexampleCheck:PredicateCPA:PredicateCPA.<init>, INFO)

Warning: Analysis interrupted (The JVM is shutting down, probably because Ctrl+C was pressed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The JVM is shutting down, probably because Ctrl+C was pressed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)


Restart Algorithm statistics
----------------------------
Number of algorithms provided:    2
Number of algorithms used:        1
Last algorithm used:        /cpachecker/config/components/combinations-parallel-termination.properties
Total time for algorithm 1:  1197.623s

PredicateCPA statistics
-----------------------
Number of abstractions:            123 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            65 (53%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         58 (47%)
  Times precision was empty:       123 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         4798
  BDD entailment checks:           2
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       11
Avg ABE block size:                                5.91 (sum: 727, count: 123, min: 0, max: 11)
Number of predicates discovered:          0

Time for post operator:                                1.173s
  Time for path formula creation:                      1.159s
Time for strengthen operator:                          0.238s
Time for prec operator:                                0.092s
  Time for abstraction:                  0.014s (Max:     0.001s, Count: 123)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                               0.028s
Time for coverage checks:                              0.013s
  Time for BDD entailment checks:                      0.008s
Total time for SMT solver (w/o itp):     0.000s

Number of path formula cache hits:   1905 (40%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.235s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                    0.00 (sum: 0, count: 156, min: 0, max: 0)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

KeyValue statistics
-------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (NonTerminationLabelAutomaton) statistics
-----------------------------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.083s
Automaton transfers with branching:                0
Automaton transfer successors:                     1.00 (sum: 3397, count: 3397, min: 1, max: 1) [1 x 3397]
Number of states with assumption transitions:      0

AutomatonAnalysis (TerminatingFunctions) statistics
---------------------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                     1.00 (sum: 3397, count: 3397, min: 1, max: 1) [1 x 3397]
Number of states with assumption transitions:      0

Termination Algorithm statistics
--------------------------------
Total time :                                          193.882s
Time for recursion analysis:                            0.000s

Number of analysed loops:                               2 (100%)
Total time for loop analysis:                         193.878s
  Avg time per loop analysis:                          96.939s
  Max time per loop analysis:                         193.452s

Number of safety analysis runs:                        58
  Avg safety analysis run per loop:                    29.00
  Max safety analysis run per loop:                    57 	 for loops [N4]
Total time for safety analysis:                         3.912s
  Avg time per safety analysis run:                     0.067s
  Max time per safety analysis run:                     0.305s

Number of analysed lassos:                            173
  Avg number of lassos per loop:                       86.50
  Max number of lassos per loop:                      171 	 for loops [N4]
  Avg number of lassos per iteration:                   2.98
  Max number of lassos per iteration:                   3

Total time for lassos analysis:                       189.772s
  Avg time per iteration:                               3.271s
  Max time per iteration:                               6.745s
  Time for lassos construction:                        45.733s
    Avg time for lasso construction per iteration:      0.788s
    Max time for lasso construction per iteration:      3.307s
      Time for stem and loop construction:                         0.230s
        Avg time for stem and loop construction per iteration:      0.003s
        Max time for stem and loop construction per iteration:      0.022s
      Time for lassos creation:                        45.496s
        Avg time for lassos creation per iteration:      0.784s
        Max time for lassos creation per iteration:      3.284s
  Total time for non-termination analysis:             30.341s
    Avg time for non-termination analysis per lasso:    0.176s
    Max time for non-termination analysis per lasso:    0.337s
  Total time for termination analysis:                113.674s
    Avg time for termination analysis per lasso:        0.664s
    Max time for termination analysis per lasso:        0.969s

Total number of termination arguments:                171
  Avg termination arguments per loop:                  85.50
  Max termination arguments per loop:                 171 	 for loops [N4]

  affine:                                             171

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:      1002.773s

Termination Algorithm statistics
--------------------------------
Total time :                                          193.882s
Time for recursion analysis:                            0.000s

Number of analysed loops:                               2 (100%)
Total time for loop analysis:                         193.878s
  Avg time per loop analysis:                          96.939s
  Max time per loop analysis:                         193.452s

Number of safety analysis runs:                        58
  Avg safety analysis run per loop:                    29.00
  Max safety analysis run per loop:                    57 	 for loops [N4]
Total time for safety analysis:                         3.912s
  Avg time per safety analysis run:                     0.067s
  Max time per safety analysis run:                     0.305s

Number of analysed lassos:                            173
  Avg number of lassos per loop:                       86.50
  Max number of lassos per loop:                      171 	 for loops [N4]
  Avg number of lassos per iteration:                   2.98
  Max number of lassos per iteration:                   3

Total time for lassos analysis:                       189.772s
  Avg time per iteration:                               3.271s
  Max time per iteration:                               6.745s
  Time for lassos construction:                        45.733s
    Avg time for lasso construction per iteration:      0.788s
    Max time for lasso construction per iteration:      3.307s
      Time for stem and loop construction:                         0.230s
        Avg time for stem and loop construction per iteration:      0.003s
        Max time for stem and loop construction per iteration:      0.022s
      Time for lassos creation:                        45.496s
        Avg time for lassos creation per iteration:      0.784s
        Max time for lassos creation per iteration:      3.284s
  Total time for non-termination analysis:             30.341s
    Avg time for non-termination analysis per lasso:    0.176s
    Max time for non-termination analysis per lasso:    0.337s
  Total time for termination analysis:                113.674s
    Avg time for termination analysis per lasso:        0.664s
    Max time for termination analysis per lasso:        0.969s

Total number of termination arguments:                171
  Avg termination arguments per loop:                  85.50
  Max termination arguments per loop:                 171 	 for loops [N4]

  affine:                                             171

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:      1002.773s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          12
  Total lines:            12
  Line coverage:          1.000
  Visited conditions:     6
  Total conditions:       6
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:                       30
Number of CFA edges (per node):                          32 (count: 30, min: 0, max: 2, avg: 1.07)
Number of relevant variables:                      5
Number of functions:                               2
Number of loops (and loop nodes):                         2 (sum: 15, min: 6, max: 9, avg: 7.50)
Size of reached set:             38
  Number of reached locations:   21 (70%)
    Avg states per location:     1
    Max states per location:     3 (at node N18)
  Number of reached functions:   2 (100%)
  Number of partitions:          21
    Avg size of partitions:      1
    Max size of partitions:      3 (with key N18)
  Number of target states:       1
  Size of final wait list:       2

Time for analysis setup:          0.934s
  Time for loading CPAs:          0.012s
  Time for loading parser:        0.210s
  Time for CFA construction:      0.670s
    Time for parsing file(s):     0.249s
    Time for AST to CFA:          0.160s
    Time for CFA sanity check:    0.018s
    Time for post-processing:     0.118s
    Time for loop structure:      0.005s
    Time for AST structure:       0.000s
    Time for CFA export:          0.420s
      Time for function pointers resolving:            0.003s
        Function calls via function pointers:             0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer calls:              0 (count: 1, min: 0, max: 0, avg: 0.00)
        Function calls with function pointer arguments:        0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer arguments:          0 (count: 1, min: 0, max: 0, avg: 0.00)
      Time for classifying variables:                  0.072s
        Time for collecting variables:                 0.049s
        Time for solving dependencies:                 0.002s
        Time for building hierarchy:                   0.000s
        Time for building classification:              0.019s
        Time for exporting data:                       0.002s
Time for Analysis:             1197.623s
CPU time for analysis:         1145.040s
Total time for CPAchecker:     1198.568s
Total CPU time for CPAchecker: 1146.630s
Time for statistics:              0.231s

Time for Garbage Collector:       4.702s (in 2272 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                418MB (   399 MiB) max;    330MB (   314 MiB) avg;    580MB (   553 MiB) peak
Used non-heap memory:             72MB (    69 MiB) max;     69MB (    66 MiB) avg;     73MB (    70 MiB) peak
Used in PS Old Gen pool:         381MB (   363 MiB) max;    303MB (   289 MiB) avg;    381MB (   363 MiB) peak
Allocated heap memory:           581MB (   554 MiB) max;    423MB (   403 MiB) avg
Allocated non-heap memory:        74MB (    71 MiB) max;     72MB (    69 MiB) avg
Total process virtual memory:  17223MB ( 16425 MiB) max;  17058MB ( 16268 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
Graphical representation included in the file "./output/Counterexample.117.html".
Runtime: 1201084 milliseconds