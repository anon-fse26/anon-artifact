WARNING: The requested image's platform (linux/amd64) does not match the detected host platform (linux/arm64/v8) and no specific platform was requested
Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with default stack size (1024k). Specify a larger value with --stack if needed.
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

CPAchecker 4.0 / terminationAnalysis (OpenJDK 64-Bit Server VM 17.0.15) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "Benchmarks/FSE/loop/Missing_Initialization_1_T/Missing_Initialization_1_T.c" (CPAchecker.parse, INFO)

Using Restarting Algorithm (CoreComponentsFactory.createAlgorithm, INFO)

The following configuration options were specified but are not used:
 cpa.arg.lateMerge
 counterexample.export.exportWitness 
 (CPAchecker.printConfigurationWarnings, WARNING)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Loading analysis 1 from file /cpachecker/config/components/combinations-parallel-termination.properties ... (RestartAlgorithm.run, INFO)

Using the following resource limits: Thread CPU-time limit of 300s (Analysis /cpachecker/config/components/combinations-parallel-termination.properties:Parallel analysis 1:ResourceLimitChecker.fromConfiguration, INFO)

Using predicate analysis with MathSAT5 version 5.6.10 (9293adc746be) (May 31 2023 12:38:06, gmp 6.2.0, gcc 7.5.0, 64-bit, reentrant) and JFactory 1.21. (Analysis /cpachecker/config/components/combinations-parallel-termination.properties:Parallel analysis 1:PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (Analysis /cpachecker/config/components/combinations-parallel-termination.properties:Parallel analysis 1:PredicateCPA:PredicateCPARefiner.<init>, INFO)

Warning: Skipping one analysis because the configuration file /cpachecker/config/components/combinations-parallel-termination.properties is invalid (TerminationAlgorithm needs a TerminationCPA) (CPAs.retrieveCPAOrFail, WARNING)

Loading analysis 1 from file /cpachecker/config/components/termination-recursion.properties ... (RestartAlgorithm.run, INFO)

Mismatch of configuration options when loading from '/cpachecker/config/components/termination-recursion.properties': 'termination.config' has two values 'terminationAnalysis.properties' and 'termination-recursion.properties'. Using 'termination-recursion.properties'. (NestingAlgorithm.checkConfigs, INFO)

Using unsound approximation of ints with unbounded integers and floats with rationals for encoding program semantics. (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:FormulaManagerView.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.6.10 (9293adc746be) (May 31 2023 12:38:06, gmp 6.2.0, gcc 7.5.0, 64-bit, reentrant) and JFactory 1.21. (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (Analysis /cpachecker/config/components/termination-recursion.properties:PredicateCPA:PredicateCPARefiner.<init>, INFO)

Using unsound approximation of ints with unbounded integers and floats with rationals for encoding program semantics. (Analysis /cpachecker/config/components/termination-recursion.properties:FormulaManagerView.<init>, WARNING)

Starting analysis 1 ... (RestartAlgorithm.run, INFO)

Starting termination algorithm. (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.run0, INFO)

Repeated ranking relation (or (let ((.cse1 (+ 0 6442450964))) (let ((.cse0 (+ (+ .cse1 (* (- 6442450965) |main::pkt__TERMINATION_PRIMED|)) (* 6442450965 |main::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse0 0) (< (+ (+ .cse1 (* (- 6442450965) |main::pkt|)) (* 6442450965 |main::__CPAchecker_TMP_0|)) .cse0)))) (let ((.cse3 (+ 0 6442450963))) (let ((.cse2 (+ (+ .cse3 (* (- 4294967306) |main::pkt__TERMINATION_PRIMED|)) (* 4294967306 |main::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse2 0) (< (+ (+ .cse3 (* (- 4294967306) |main::pkt|)) (* 4294967306 |main::__CPAchecker_TMP_0|)) .cse2))))) for Loop with heads [N10]
  incoming: [line 16:	N9 -{while}-> N10]
  outgoing: [line 16:	N10 -{[!(res == 0)]}-> N12, line 20:	N16 -{[res == 0]}-> N18]
  nodes:    [N10, N11, N13, N14, N15, N16, N17]
 (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.proveLoopTermination, WARNING)

Repeated ranking relation (or (let ((.cse1 (+ 0 6442450964))) (let ((.cse0 (+ (+ .cse1 (* (- 6442450965) |main::pkt__TERMINATION_PRIMED|)) (* 6442450965 |main::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse0 0) (< (+ (+ .cse1 (* (- 6442450965) |main::pkt|)) (* 6442450965 |main::__CPAchecker_TMP_0|)) .cse0)))) (let ((.cse3 (+ 0 6442450963))) (let ((.cse2 (+ (+ .cse3 (* (- 6442450964) |main::pkt__TERMINATION_PRIMED|)) (* 6442450964 |main::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse2 0) (< (+ (+ .cse3 (* (- 6442450964) |main::pkt|)) (* 6442450964 |main::__CPAchecker_TMP_0|)) .cse2))))) for Loop with heads [N10]
  incoming: [line 16:	N9 -{while}-> N10]
  outgoing: [line 16:	N10 -{[!(res == 0)]}-> N12, line 20:	N16 -{[res == 0]}-> N18]
  nodes:    [N10, N11, N13, N14, N15, N16, N17]
 (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.proveLoopTermination, WARNING)

Repeated ranking relation (or (let ((.cse1 (+ 0 6442450964))) (let ((.cse0 (+ (+ .cse1 (* (- 6442450965) |main::pkt__TERMINATION_PRIMED|)) (* 6442450965 |main::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse0 0) (< (+ (+ .cse1 (* (- 6442450965) |main::pkt|)) (* 6442450965 |main::__CPAchecker_TMP_0|)) .cse0)))) (let ((.cse3 (+ 0 6442450963))) (let ((.cse2 (+ (+ .cse3 (* (- 4294967306) |main::pkt__TERMINATION_PRIMED|)) (* 4294967306 |main::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse2 0) (< (+ (+ .cse3 (* (- 4294967306) |main::pkt|)) (* 4294967306 |main::__CPAchecker_TMP_0|)) .cse2))))) for Loop with heads [N10]
  incoming: [line 16:	N9 -{while}-> N10]
  outgoing: [line 16:	N10 -{[!(res == 0)]}-> N12, line 20:	N16 -{[res == 0]}-> N18]
  nodes:    [N10, N11, N13, N14, N15, N16, N17]
 (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.proveLoopTermination, WARNING)

Repeated ranking relation (or (let ((.cse1 (+ 0 6442450964))) (let ((.cse0 (+ (+ .cse1 (* (- 6442450965) |main::pkt__TERMINATION_PRIMED|)) (* 6442450965 |main::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse0 0) (< (+ (+ .cse1 (* (- 6442450965) |main::pkt|)) (* 6442450965 |main::__CPAchecker_TMP_0|)) .cse0)))) (let ((.cse3 (+ 0 6442450963))) (let ((.cse2 (+ (+ .cse3 (* (- 6442450964) |main::pkt__TERMINATION_PRIMED|)) (* 6442450964 |main::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse2 0) (< (+ (+ .cse3 (* (- 6442450964) |main::pkt|)) (* 6442450964 |main::__CPAchecker_TMP_0|)) .cse2))))) for Loop with heads [N10]
  incoming: [line 16:	N9 -{while}-> N10]
  outgoing: [line 16:	N10 -{[!(res == 0)]}-> N12, line 20:	N16 -{[res == 0]}-> N18]
  nodes:    [N10, N11, N13, N14, N15, N16, N17]
 (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.proveLoopTermination, WARNING)

Repeated ranking relation (or (let ((.cse1 (+ 0 6442450964))) (let ((.cse0 (+ (+ .cse1 (* (- 6442450965) |main::pkt__TERMINATION_PRIMED|)) (* 6442450965 |main::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse0 0) (< (+ (+ .cse1 (* (- 6442450965) |main::pkt|)) (* 6442450965 |main::__CPAchecker_TMP_0|)) .cse0)))) (let ((.cse3 (+ 0 6442450963))) (let ((.cse2 (+ (+ .cse3 (* (- 6442450964) |main::pkt__TERMINATION_PRIMED|)) (* 6442450964 |main::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse2 0) (< (+ (+ .cse3 (* (- 6442450964) |main::pkt|)) (* 6442450964 |main::__CPAchecker_TMP_0|)) .cse2))))) for Loop with heads [N10]
  incoming: [line 16:	N9 -{while}-> N10]
  outgoing: [line 16:	N10 -{[!(res == 0)]}-> N12, line 20:	N16 -{[res == 0]}-> N18]
  nodes:    [N10, N11, N13, N14, N15, N16, N17]
 (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.proveLoopTermination, WARNING)

Repeated ranking relation (or (let ((.cse1 (+ 0 6442450964))) (let ((.cse0 (+ (+ .cse1 (* (- 6442450965) |main::pkt__TERMINATION_PRIMED|)) (* 6442450965 |main::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse0 0) (< (+ (+ .cse1 (* (- 6442450965) |main::pkt|)) (* 6442450965 |main::__CPAchecker_TMP_0|)) .cse0)))) (let ((.cse3 (+ 0 6442450963))) (let ((.cse2 (+ (+ .cse3 (* (- 6442450964) |main::pkt__TERMINATION_PRIMED|)) (* 6442450964 |main::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse2 0) (< (+ (+ .cse3 (* (- 6442450964) |main::pkt|)) (* 6442450964 |main::__CPAchecker_TMP_0|)) .cse2))))) for Loop with heads [N10]
  incoming: [line 16:	N9 -{while}-> N10]
  outgoing: [line 16:	N10 -{[!(res == 0)]}-> N12, line 20:	N16 -{[res == 0]}-> N18]
  nodes:    [N10, N11, N13, N14, N15, N16, N17]
 (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.proveLoopTermination, WARNING)

Repeated ranking relation (or (let ((.cse1 (+ 0 6442450964))) (let ((.cse0 (+ (+ .cse1 (* (- 6442450965) |main::pkt__TERMINATION_PRIMED|)) (* 6442450965 |main::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse0 0) (< (+ (+ .cse1 (* (- 6442450965) |main::pkt|)) (* 6442450965 |main::__CPAchecker_TMP_0|)) .cse0)))) (let ((.cse3 (+ 0 6442450963))) (let ((.cse2 (+ (+ .cse3 (* (- 6442450964) |main::pkt__TERMINATION_PRIMED|)) (* 6442450964 |main::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse2 0) (< (+ (+ .cse3 (* (- 6442450964) |main::pkt|)) (* 6442450964 |main::__CPAchecker_TMP_0|)) .cse2))))) for Loop with heads [N10]
  incoming: [line 16:	N9 -{while}-> N10]
  outgoing: [line 16:	N10 -{[!(res == 0)]}-> N12, line 20:	N16 -{[res == 0]}-> N18]
  nodes:    [N10, N11, N13, N14, N15, N16, N17]
 (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.proveLoopTermination, WARNING)

Repeated ranking relation (or (let ((.cse1 (+ 0 6442450964))) (let ((.cse0 (+ (+ .cse1 (* (- 4294967307) |main::pkt__TERMINATION_PRIMED|)) (* 4294967307 |main::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse0 0) (< (+ (+ .cse1 (* (- 4294967307) |main::pkt|)) (* 4294967307 |main::__CPAchecker_TMP_0|)) .cse0)))) (let ((.cse3 (+ 0 6442450963))) (let ((.cse2 (+ (+ .cse3 (* (- 6442450964) |main::pkt__TERMINATION_PRIMED|)) (* 6442450964 |main::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse2 0) (< (+ (+ .cse3 (* (- 6442450964) |main::pkt|)) (* 6442450964 |main::__CPAchecker_TMP_0|)) .cse2))))) for Loop with heads [N10]
  incoming: [line 16:	N9 -{while}-> N10]
  outgoing: [line 16:	N10 -{[!(res == 0)]}-> N12, line 20:	N16 -{[res == 0]}-> N18]
  nodes:    [N10, N11, N13, N14, N15, N16, N17]
 (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.proveLoopTermination, WARNING)

Repeated ranking relation (or (let ((.cse1 (+ 0 1431655772))) (let ((.cse0 (+ (+ .cse1 (* (- 2147483655) |main::pkt__TERMINATION_PRIMED|)) (* 2147483655 |main::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse0 0) (< (+ (+ .cse1 (* (- 2147483655) |main::pkt|)) (* 2147483655 |main::__CPAchecker_TMP_0|)) .cse0)))) (let ((.cse3 (+ 0 6442450963))) (let ((.cse2 (+ (+ .cse3 (* (- 4294967306) |main::pkt__TERMINATION_PRIMED|)) (* 4294967306 |main::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse2 0) (< (+ (+ .cse3 (* (- 4294967306) |main::pkt|)) (* 4294967306 |main::__CPAchecker_TMP_0|)) .cse2))))) for Loop with heads [N10]
  incoming: [line 16:	N9 -{while}-> N10]
  outgoing: [line 16:	N10 -{[!(res == 0)]}-> N12, line 20:	N16 -{[res == 0]}-> N18]
  nodes:    [N10, N11, N13, N14, N15, N16, N17]
 (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.proveLoopTermination, WARNING)

Repeated ranking relation (or (let ((.cse1 (+ 0 6442450964))) (let ((.cse0 (+ (+ .cse1 (* (- 6442450965) |main::pkt__TERMINATION_PRIMED|)) (* 6442450965 |main::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse0 0) (< (+ (+ .cse1 (* (- 6442450965) |main::pkt|)) (* 6442450965 |main::__CPAchecker_TMP_0|)) .cse0)))) (let ((.cse3 (+ 0 6442450963))) (let ((.cse2 (+ (+ .cse3 (* (- 6442450964) |main::pkt__TERMINATION_PRIMED|)) (* 6442450964 |main::__CPAchecker_TMP_0__TERMINATION_PRIMED|)))) (and (>= .cse2 0) (< (+ (+ .cse3 (* (- 6442450964) |main::pkt|)) (* 6442450964 |main::__CPAchecker_TMP_0|)) .cse2))))) for Loop with heads [N10]
  incoming: [line 16:	N9 -{while}-> N10]
  outgoing: [line 16:	N10 -{[!(res == 0)]}-> N12, line 20:	N16 -{[res == 0]}-> N18]
  nodes:    [N10, N11, N13, N14, N15, N16, N17]
 (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.proveLoopTermination, WARNING)

Termination algorithm did not find a non-terminating loop. (Analysis /cpachecker/config/components/termination-recursion.properties:TerminationAlgorithm.run0, INFO)

Analysis 1 terminated, but result is unsound. (RestartAlgorithm.run, INFO)

No further configuration available. (RestartAlgorithm.run, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

Analysis incomplete: no errors found, but not everything could be checked. (CPAchecker.analyzeResult, WARNING)


Restart Algorithm statistics
----------------------------
Number of algorithms provided:    2
Number of algorithms used:        1
Last algorithm used:        /cpachecker/config/components/combinations-parallel-termination.properties
Total time for algorithm 1:    51.189s

PredicateCPA statistics
-----------------------
[MP /cpachecker/lib/native/x86_64-linux/z3 -smt2 -in SMTLIB2_COMPLIANT=true (315)] Timeout while monitored process is still running, waiting 1000 ms for graceful end (Analysis /cpachecker/config/components/termination-recursion.properties:MonitoredProcess:LassoRankerLogger.warn, INFO)

Number of abstractions:            187 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            126 (67%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         61 (33%)
  Times precision was empty:       144 (77%)
  Times precision was {false}:     4 (2%)
  Times result was cached:         15 (8%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      24 (13%)
  Times result was 'false':        9 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         3243
  BDD entailment checks:           42
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       12
Avg ABE block size:                                6.13 (sum: 1147, count: 187, min: 0, max: 12)
Number of predicates discovered:          5
Number of abstraction locations:          3
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         123
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 4.39
Number of irrelevant predicates:          26 (21%)
Number of preds handled by boolean abs:   69 (56%)
  Total number of models for allsat:      40
  Max number of models for allsat:        5
  Avg number of models for allsat:        1.67

Time for post operator:                                0.965s
  Time for path formula creation:                      0.955s
Time for strengthen operator:                          0.156s
Time for prec operator:                                0.129s
  Time for abstraction:                  0.078s (Max:     0.011s, Count: 187)
    Boolean abstraction:                 0.023s
    Solving time:                        0.005s (Max:     0.002s)
    Model enumeration time:              0.012s
    Time for BDD construction:           0.003s (Max:     0.001s)
Time for merge operator:                               0.041s
Time for coverage checks:                              0.010s
  Time for BDD entailment checks:                      0.007s
Total time for SMT solver (w/o itp):     0.017s

Number of path formula cache hits:   1798 (36%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.009s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               263
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                    0.00 (sum: 0, count: 440, min: 0, max: 0)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

KeyValue statistics
-------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (NonTerminationLabelAutomaton) statistics
-----------------------------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.074s
Automaton transfers with branching:                0
Automaton transfer successors:                     1.00 (sum: 3806, count: 3806, min: 1, max: 1) [1 x 3806]
Number of states with assumption transitions:      0

AutomatonAnalysis (TerminatingFunctions) statistics
---------------------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.010s
Automaton transfers with branching:                0
Automaton transfer successors:                     1.00 (sum: 3806, count: 3806, min: 1, max: 1) [1 x 3806]
Number of states with assumption transitions:      0

Termination Algorithm statistics
--------------------------------
Total time :                                           50.203s
Time for recursion analysis:                            0.000s

Number of analysed loops:                               2 (100%)
Total time for loop analysis:                          50.193s
  Avg time per loop analysis:                          25.096s
  Max time per loop analysis:                          49.211s

Number of safety analysis runs:                        54
  Avg safety analysis run per loop:                    27.00
  Max safety analysis run per loop:                    52 	 for loops [N10]
Total time for safety analysis:                         3.188s
  Avg time per safety analysis run:                     0.059s
  Max time per safety analysis run:                     0.278s

Number of analysed lassos:                            105
  Avg number of lassos per loop:                       52.50
  Max number of lassos per loop:                      104 	 for loops [N10]
  Avg number of lassos per iteration:                   1.98
  Max number of lassos per iteration:                   2

Total time for lassos analysis:                        46.853s
  Avg time per iteration:                               0.884s
  Max time per iteration:                               1.513s
  Time for lassos construction:                         1.678s
    Avg time for lasso construction per iteration:      0.031s
    Max time for lasso construction per iteration:      0.201s
      Time for stem and loop construction:                         0.226s
        Avg time for stem and loop construction per iteration:      0.004s
        Max time for stem and loop construction per iteration:      0.023s
      Time for lassos creation:                         1.444s
        Avg time for lassos creation per iteration:      0.027s
        Max time for lassos creation per iteration:      0.186s
  Total time for non-termination analysis:             12.888s
    Avg time for non-termination analysis per lasso:    0.122s
    Max time for non-termination analysis per lasso:    0.205s
  Total time for termination analysis:                 32.274s
    Avg time for termination analysis per lasso:        0.307s
    Max time for termination analysis per lasso:        0.531s

Total number of termination arguments:                105
  Avg termination arguments per loop:                  52.50
  Max termination arguments per loop:                 104 	 for loops [N10]

  affine:                                             105

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Termination Algorithm statistics
--------------------------------
Total time :                                           50.203s
Time for recursion analysis:                            0.000s

Number of analysed loops:                               2 (100%)
Total time for loop analysis:                          50.193s
  Avg time per loop analysis:                          25.096s
  Max time per loop analysis:                          49.211s

Number of safety analysis runs:                        54
  Avg safety analysis run per loop:                    27.00
  Max safety analysis run per loop:                    52 	 for loops [N10]
Total time for safety analysis:                         3.188s
  Avg time per safety analysis run:                     0.059s
  Max time per safety analysis run:                     0.278s

Number of analysed lassos:                            105
  Avg number of lassos per loop:                       52.50
  Max number of lassos per loop:                      104 	 for loops [N10]
  Avg number of lassos per iteration:                   1.98
  Max number of lassos per iteration:                   2

Total time for lassos analysis:                        46.853s
  Avg time per iteration:                               0.884s
  Max time per iteration:                               1.513s
  Time for lassos construction:                         1.678s
    Avg time for lasso construction per iteration:      0.031s
    Max time for lasso construction per iteration:      0.201s
      Time for stem and loop construction:                         0.226s
        Avg time for stem and loop construction per iteration:      0.004s
        Max time for stem and loop construction per iteration:      0.023s
      Time for lassos creation:                         1.444s
        Avg time for lassos creation per iteration:      0.027s
        Max time for lassos creation per iteration:      0.186s
  Total time for non-termination analysis:             12.888s
    Avg time for non-termination analysis per lasso:    0.122s
    Max time for non-termination analysis per lasso:    0.205s
  Total time for termination analysis:                 32.274s
    Avg time for termination analysis per lasso:        0.307s
    Max time for termination analysis per lasso:        0.531s

Total number of termination arguments:                105
  Avg termination arguments per loop:                  52.50
  Max termination arguments per loop:                 104 	 for loops [N10]

  affine:                                             105

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          10
  Total lines:            10
  Line coverage:          1.000
  Visited conditions:     6
  Total conditions:       6
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:                       22
Number of CFA edges (per node):                          24 (count: 22, min: 0, max: 2, avg: 1.09)
Number of relevant variables:                      2
Number of functions:                               1
Number of loops (and loop nodes):                         2 (sum: 19, min: 7, max: 12, avg: 9.50)
Size of reached set:             43
  Number of reached locations:   14 (64%)
    Avg states per location:     3
    Max states per location:     5 (at node N10)
  Number of reached functions:   1 (100%)
  Number of partitions:          14
    Avg size of partitions:      3
    Max size of partitions:      5 (with key N10)
  Number of target states:       0

Time for analysis setup:          0.942s
  Time for loading CPAs:          0.015s
  Time for loading parser:        0.210s
  Time for CFA construction:      0.664s
    Time for parsing file(s):     0.253s
    Time for AST to CFA:          0.155s
    Time for CFA sanity check:    0.016s
    Time for post-processing:     0.113s
    Time for loop structure:      0.006s
    Time for AST structure:       0.000s
    Time for CFA export:          0.443s
      Time for function pointers resolving:            0.003s
        Function calls via function pointers:             0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer calls:              0 (count: 1, min: 0, max: 0, avg: 0.00)
        Function calls with function pointer arguments:        0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer arguments:          0 (count: 1, min: 0, max: 0, avg: 0.00)
      Time for classifying variables:                  0.068s
        Time for collecting variables:                 0.044s
        Time for solving dependencies:                 0.002s
        Time for building hierarchy:                   0.000s
        Time for building classification:              0.019s
        Time for exporting data:                       0.003s
Time for Analysis:               51.191s
CPU time for analysis:           30.020s
Time for analyzing result:        0.001s
Total time for CPAchecker:       52.145s
Total CPU time for CPAchecker:   31.610s
Time for statistics:              0.173s

Time for Garbage Collector:       0.277s (in 34 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                111MB (   106 MiB) max;     74MB (    71 MiB) avg;    130MB (   124 MiB) peak
Used non-heap memory:             63MB (    60 MiB) max;     56MB (    54 MiB) avg;     64MB (    61 MiB) peak
Used in PS Old Gen pool:          48MB (    46 MiB) max;     38MB (    36 MiB) avg;     51MB (    48 MiB) peak
Allocated heap memory:           254MB (   242 MiB) max;    248MB (   237 MiB) avg
Allocated non-heap memory:        65MB (    62 MiB) max;     58MB (    56 MiB) avg
Total process virtual memory:  16813MB ( 16034 MiB) max;  16603MB ( 15834 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
Graphical representation included in the file "./output/Report.html".

CPAchecker has finished but some threads are still running:
 - Thread[MonitoredProcess 315 StreamBuffer stdErr,5,main] at java.base@17.0.15/java.io.FileInputStream.readBytes(Native Method)
- Thread[MonitoredProcess 315 StreamBuffer stdIn,5,main] at java.base@17.0.15/java.io.FileInputStream.readBytes(Native Method)
- Thread[TimeoutWatcher for 315,5,main] at java.base@17.0.15/java.lang.Object.wait(Native Method)
- Thread[MonitoredProcess 315 /cpachecker/lib/native/x86_64-linux/z3 -smt2 -in SMTLIB2_COMPLIANT=true,5,main] at java.base@17.0.15/java.lang.Object.wait(Native Method)
 (CPAMain.main, WARNING)

Runtime: 55095 milliseconds