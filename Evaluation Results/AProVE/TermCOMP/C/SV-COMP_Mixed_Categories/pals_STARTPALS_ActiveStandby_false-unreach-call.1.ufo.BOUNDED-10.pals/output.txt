/liveness_analysis/Benchmarks/TermCOMP/C/SV-COMP_Mixed_Categories/pals_STARTPALS_ActiveStandby_false-unreach-call.1.ufo.BOUNDED-10.pals/pals_STARTPALS_ActiveStandby_false-unreach-call.1.ufo.BOUNDED-10.pals.c:320:22: warning: self-comparison always evaluates to false [-Wtautological-compare]
    s1s1_new = nomsg != nomsg && s1s1_new == nomsg ? nomsg : s1s1_new;
                     ^
/liveness_analysis/Benchmarks/TermCOMP/C/SV-COMP_Mixed_Categories/pals_STARTPALS_ActiveStandby_false-unreach-call.1.ufo.BOUNDED-10.pals/pals_STARTPALS_ActiveStandby_false-unreach-call.1.ufo.BOUNDED-10.pals.c:321:22: warning: self-comparison always evaluates to false [-Wtautological-compare]
    s1s2_new = nomsg != nomsg && s1s2_new == nomsg ? nomsg : s1s2_new;
                     ^
/liveness_analysis/Benchmarks/TermCOMP/C/SV-COMP_Mixed_Categories/pals_STARTPALS_ActiveStandby_false-unreach-call.1.ufo.BOUNDED-10.pals/pals_STARTPALS_ActiveStandby_false-unreach-call.1.ufo.BOUNDED-10.pals.c:322:21: warning: self-comparison always eval
uates to false [-Wtautological-compare]
    s1p_new = nomsg != nomsg && s1p_new == nomsg ? nomsg : s1p_new;
                    ^
/liveness_analysis/Benchmarks/TermCOMP/C/SV-COMP_Mixed_Categories/pals_STARTPALS_ActiveStandby_false-unreach-call.1.ufo.BOUNDED-10.pals/pals_STARTPALS_ActiveStandby_false-unreach-call.1.ufo.BOUNDED-10.pals.c:377:22: warning: self-comparison always evaluates to false [-Wtautological-compare]
    s2s1_new = nomsg != nomsg && s2s1_new == nomsg ? nomsg : s2s1_new;
                     ^
/liveness_analysis/Benchmarks/TermCOMP/C/SV-COMP_Mixed_Categories/pals_STARTPALS_ActiveStandby_false-unreach-call.1.ufo.BOUNDED-10.pals/pals_STARTPALS_ActiveStandby_false-unreach-call.1.ufo.BOUNDED-10.pals.c:378:22: warning: self-comparison always evaluates to false [-Wtautological-compare]
    s2s2_new = nomsg != nomsg && s2s2_new == nomsg ? nomsg : s2s2_new;
                     ^
/liveness_analysis/Benchmarks/TermCOMP/C/SV-COMP_Mixed_Categories/pals_STARTPALS_ActiveStandby_false-unreach-call.1.ufo.BO
UNDED-10.pals/pals_STARTPALS_ActiveStandby_false-unreach-call.1.ufo.BOUNDED-10.pals.c:379:21: warning: self-comparison always evaluates to false [-Wtautological-compare]
    s2p_new = nomsg != nomsg && s2p_new == nomsg ? nomsg : s2p_new;
                    ^
6 warnings generated.

line 1848:5 extraneous input 'metadata' expecting EXCLAMATION
line 1848:25 no viable alternative at input '!'
Instruction count:1218
deleted entry node of __VERIFIER_assume
deleted entry node of read_side1_failed_history
deleted entry node of __VERIFIER_assume
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of Console_task_each_pals_period
deleted entry node of Side1_activestandby_task_each_pals_period
deleted entry node of Side2_activestandby_task_each_pals_period
deleted entry node of Pendulum_prism_task_each_pals_period
deleted entry node of read_active_side_history
deleted entry node of check
deleted entry node of assert
deleted entry node of __VERIFIER_assume
deleted entry node of __VERIFIER_assume
deleted entry node of read_manual_selection_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side2_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side2_failed_history
deleted entry node of read_side2_failed_history
deleted entry node of read_side2_failed_history
deleted entry node of read_active_side_history
deleted entry node of read_active_side_history
deleted entry node of read_manual_selection_history
deleted entry node of read_manual_selection_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of __VERIFIER_assume
deleted entry node of read_side1_failed_history
deleted entry node of __VERIFIER_assume
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of Console_task_each_pals_period
deleted entry node of Side1_activestandby_task_each_pals_period
deleted entry node of Side2_activestandby_task_each_pals_period
deleted entry node of Pendulum_prism_task_each_pals_period
deleted entry node of read_active_side_history
deleted entry node of check
deleted entry node of assert
deleted entry node of __VERIFIER_assume
deleted entry node of __VERIFIER_assume
deleted entry node of read_manual_selection_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side2_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side2_failed_history
deleted entry node of read_side2_failed_history
deleted entry node of read_side2_failed_history
deleted entry node of read_active_side_history
deleted entry node of read_active_side_history
deleted entry node of read_manual_selection_history
deleted entry node of read_manual_selection_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of __VERIFIER_assume
deleted entry node of read_side1_failed_history
deleted entry node of __VERIFIER_assume
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of Console_task_each_pals_period
deleted entry node of Side1_activestandby_task_each_pals_period
deleted entry node of Side2_activestandby_task_each_pals_period
deleted entry node of Pendulum_prism_task_each_pals_period
deleted entry node of read_active_side_history
deleted entry node of check
deleted entry node of assert
deleted entry node of __VERIFIER_assume
deleted entry node of __VERIFIER_assume
deleted entry node of read_manual_selection_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side2_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side2_failed_history
deleted entry node of read_side2_failed_history
deleted entry node of read_side2_failed_history
deleted entry node of read_active_side_history
deleted entry node of read_active_side_history
deleted entry node of read_manual_selection_history
deleted entry node of read_manual_selection_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of __VERIFIER_assume
deleted entry node of read_side1_failed_history
deleted entry node of __VERIFIER_assume
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of Console_task_each_pals_period
deleted entry node of Side1_activestandby_task_each_pals_period
deleted entry node of Side2_activestandby_task_each_pals_period
deleted entry node of Pendulum_prism_task_each_pals_period
deleted entry node of read_active_side_history
deleted entry node of check
deleted entry node of assert
deleted entry node of __VERIFIER_assume
deleted entry node of __VERIFIER_assume
deleted entry node of read_manual_selection_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side2_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side2_failed_history
deleted entry node of read_side2_failed_history
deleted entry node of read_side2_failed_history
deleted entry node of read_active_side_history
deleted entry node of read_active_side_history
deleted entry node of read_manual_selection_history
deleted entry node of read_manual_selection_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of __VERIFIER_assume
deleted entry node of read_side1_failed_history
deleted entry node of __VERIFIER_assume
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of Console_task_each_pals_period
deleted entry node of Side1_activestandby_task_each_pals_period
deleted entry node of Side2_activestandby_task_each_pals_period
deleted entry node of Pendulum_prism_task_each_pals_period
deleted entry node of read_active_side_history
deleted entry node of check
deleted entry node of assert
deleted entry node of __VERIFIER_assume
deleted entry node of __VERIFIER_assume
deleted entry node of read_manual_selection_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side2_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side2_failed_history
deleted entry node of read_side2_failed_history
deleted entry node of read_side2_failed_history
deleted entry node of read_active_side_history
deleted entry node of read_active_side_history
deleted entry node of read_manual_selection_history
deleted entry node of read_manual_selection_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of __VERIFIER_assume
deleted entry node of read_side1_failed_history
deleted entry node of __VERIFIER_assume
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
deleted entry node of read_side1_failed_history
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.023s
Aborted 1755961028Exec. 12, LLVMSCCToIntTRS with some error. Reason: java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR.
Aborted 1755961028Exec. 10, LLVMSCCToIntTRS with some error. Reason: java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR.
            aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
            aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils.toTerm(LLVMRelationUtils.java:28)
            aprove.InputModules.Programs.llvm.segraph.edges.LLVMEdgeInformation.toTerm(LLVMEdgeInformation.java:90)
            aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$3.getCondition(LLVMInvariants.java:76)
            aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$5.getCondition(LLVMInvariants.java:109)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.inferRuleFromEdge(LLVMGraphProcessor.java:95)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.translateGraphToRuleSet(LLVMGraphProcessor.java:252)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.transformGraphToIRS(LLVMGraphToIntTRSProcessor.java:148)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.process(LLVMGraphToIntTRSProcessor.java:105)
            aprove.InputModules.Programs.llvm.processors.LLVMSCCToIntTRSProcessor.process(LLVMSCCToIntTRSProcessor.java:51)
            aprove.Strategies.ExecutableStrategies.Executor.execute(Executor.java:326)
            aprove.Strategies.ExecutableStrategies.Executor$Runner.wrappedRun(Executor.java:377)
            aprove.Strategies.Abortions.PooledJob.run(PooledJob.java:99)
            aprove.Strategies.Util.PrioritizableThreadPool$Worker.run(PrioritizableThreadPool.java:274)
            java.base/java.lang.Thread.run(Thread.java:840)
            aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils.toTerm(LLVMRelationUtils.java:28)
java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR
	at aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
	at aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
	at aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils.toTerm(LLVMRelationUtils.java:28)
	at aprove.InputModules.Programs.llvm.segraph.edges.LLVMEdgeInformation.toTerm(LLVMEdgeInformation.java:90)
	at aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$3.getCondition(LLVMInvariants.java:76)
	at aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$5.getCondition(LLVMInvariants.java:109)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.inferRuleFromEdge(LLVMGraphProcessor.java:95)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.translateGraphToRuleSet(LLVMGraphProcessor.java:252)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.transformGraphToIRS(LLVMGraphToIntTRSProcessor.java:148)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.process(LLVMGraphToIntTRSProcessor.java:105)
	at aprove.InputModules.Programs.llvm.processors.LLVMSCCToIntTRSProcessor.process(LLVMSCCToIntTRSProcessor.java:51)
	at aprove.Strategies.ExecutableStrategies.Executor.execute(Executor.java:326)
	at aprove.Strategies.ExecutableStrategies.Executor$Runner.wrappedRun(Executor.java:377)
	at aprove.Strategies.Abortions.PooledJob.run(PooledJob.java:99)
	at aprove.Strategies.Util.PrioritizableThreadPool$Worker.run(PrioritizableThreadPool.java:274)
	at java.base/java.lang.Thread.run(Thread.java:840)
            aprove.InputModules.Programs.llvm.segraph.edges.LLVMEdgeInformation.toTerm(LLVMEdgeInformation.java:90)
            aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$3.getCondition(LLVMInvariants.java:76)
            aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$5.getCondition(LLVMInvariants.java:109)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.inferRuleFromEdge(LLVMGraphProcessor.java:95)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.translateGraphToRuleSet(LLVMGraphProcessor.java:252)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.transformGraphToIRS(LLVMGraphToIntTRSProcessor.java:148)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.process(LLVMGraphToIntTRSProcessor.java:105)
            aprove.InputModules.Programs.llvm.processors.LLVMSCCToIntTRSProcessor.process(LLVMSCCToIntTRSProcessor.java:51)
            aprove.Strategies.ExecutableStrategies.Executor.execute(Executor.java:326)
            aprove.Strategies.ExecutableStrategies.Executor$Runner.wrappedRun(Executor.java:377)
            aprove.Strategies.Abortions.PooledJob.run(PooledJob.java:99)
            aprove.Strategies.Util.PrioritizableThreadPool$Worker.run(PrioritizableThreadPool.java:274)
            java.base/java.lang.Thread.run(Thread.java:840)
java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR
	at aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
	at aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
	at aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils.toTerm(LLVMRelationUtils.java:28)
	at aprove.InputModules.Programs.llvm.segraph.edges.LLVMEdgeInformation.toTerm(LLVMEdgeInformation.java:90)
	at aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$3.getCondition(LLVMInvariants.java:76)
	at aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$5.getCondition(LLVMInvariants.java:109)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.inferRuleFromEdge(LLVMGraphProcessor.java:95)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.translateGraphToRuleSet(LLVMGraphProcessor.java:252)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.transformGraphToIRS(LLVMGraphToIntTRSProcessor.java:148)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.process(LLVMGraphToIntTRSProcessor.java:105)
	at aprove.InputModules.Programs.llvm.processors.LLVMSCCToIntTRSProcessor.process(LLVMSCCToIntTRSProcessor.java:51)
	at aprove.Strategies.ExecutableStrategies.Executor.execute(Executor.java:326)
	at aprove.Strategies.ExecutableStrategies.Executor$Runner.wrappedRun(Executor.java:377)
	at aprove.Strategies.Abortions.PooledJob.run(PooledJob.java:99)
	at aprove.Strategies.Util.PrioritizableThreadPool$Worker.run(PrioritizableThreadPool.java:274)
	at java.base/java.lang.Thread.run(Thread.java:840)
Aborted 1755961029Exec. 13, LLVMSCCToIntTRS with some error. Reason: java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR.
            aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
            aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils.toTerm(LLVMRelationUtils.java:28)
            aprove.InputModules.Programs.llvm.segraph.edges.LLVMEdgeInformation.toTerm(LLVMEdgeInformation.java:90)
            aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$3.getCondition(LLVMInvariants.java:76)
            aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$4.getCondition(LLVMInvariants.java:93)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.inferRuleFromEdge(LLVMGraphProcessor.java:95)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.translateGraphToRuleSet(LLVMGraphProcessor.java:252)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.transformGraphToIRS(LLVMGraphToIntTRSProcessor.java:148)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.process(LLVMGraphToIntTRSProcessor.java:105)
            aprove.InputModules.Programs.llvm.processors.LLVMSCCToIntTRSProcessor.process(LLVMSCCToIntTRSProcessor.java:51)
            aprove.Strategies.ExecutableStrategies.Executor.execute(Executor.java:326)
            aprove.Strategies.ExecutableStrategies.Executor$Runner.wrappedRun(Executor.java:377)
            aprove.Strategies.Abortions.PooledJob.run(PooledJob.java:99)
            aprove.Strategies.Util.PrioritizableThreadPool$Worker.run(PrioritizableThreadPool.java:274)
            java.base/java.lang.Thread.run(Thread.java:840)
java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR
	at aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
	at aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
	at aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils.toTerm(LLVMRelationUtils.java:28)
	at aprove.InputModules.Programs.llvm.segraph.edges.LLVMEdgeInformation.toTerm(LLVMEdgeInformation.java:90)
	at aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$3.getCondition(LLVMInvariants.java:76)
	at aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$4.getCondition(LLVMInvariants.java:93)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.inferRuleFromEdge(LLVMGraphProcessor.java:95)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.translateGraphToRuleSet(LLVMGraphProcessor.java:252)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.transformGraphToIRS(LLVMGraphToIntTRSProcessor.java:148)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.process(LLVMGraphToIntTRSProcessor.java:105)
	at aprove.InputModules.Programs.llvm.processors.LLVMSCCToIntTRSProcessor.process(LLVMSCCToIntTRSProcessor.java:51)
	at aprove.Strategies.ExecutableStrategies.Executor.execute(Executor.java:326)
	at aprove.Strategies.ExecutableStrategies.Executor$Runner.wrappedRun(Executor.java:377)
	at aprove.Strategies.Abortions.PooledJob.run(PooledJob.java:99)
	at aprove.Strategies.Util.PrioritizableThreadPool$Worker.run(PrioritizableThreadPool.java:274)
	at java.base/java.lang.Thread.run(Thread.java:840)
Aborted 1755961029Exec. 14, LLVMSCCToIntTRS with some error. Reason: java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR.
            aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
            aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils.toTerm(LLVMRelationUtils.java:28)
            aprove.InputModules.Programs.llvm.segraph.edges.LLVMEdgeInformation.toTerm(LLVMEdgeInformation.java:90)
            aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$3.getCondition(LLVMInvariants.java:76)
            aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$4.getCondition(LLVMInvariants.java:93)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.inferRuleFromEdge(LLVMGraphProcessor.java:95)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.translateGraphToRuleSet(LLVMGraphProcessor.java:252)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.transformGraphToIRS(LLVMGraphToIntTRSProcessor.java:148)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.process(LLVMGraphToIntTRSProcessor.java:105)
            aprove.InputModules.Programs.llvm.processors.LLVMSCCToIntTRSProcessor.process(LLVMSCCToIntTRSProcessor.java:51)
            aprove.Strategies.ExecutableStrategies.Executor.execute(Executor.java:326)
            aprove.Strategies.ExecutableStrategies.Executor$Runner.wrappedRun(Executor.java:377)
            aprove.Strategies.Abortions.PooledJob.run(PooledJob.java:99)
            aprove.Strategies.Util.PrioritizableThreadPool$Worker.run(PrioritizableThreadPool.java:274)
            java.base/java.lang.Thread.run(Thread.java:840)
java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR
	at aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
	at aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
	at aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils.toTerm(LLVMRelationUtils.java:28)
	at aprove.InputModules.Programs.llvm.segraph.edges.LLVMEdgeInformation.toTerm(LLVMEdgeInformation.java:90)
	at aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$3.getCondition(LLVMInvariants.java:76)
	at aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$4.getCondition(LLVMInvariants.java:93)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.inferRuleFromEdge(LLVMGraphProcessor.java:95)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.translateGraphToRuleSet(LLVMGraphProcessor.java:252)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.transformGraphToIRS(LLVMGraphToIntTRSProcessor.java:148)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.process(LLVMGraphToIntTRSProcessor.java:105)
	at aprove.InputModules.Programs.llvm.processors.LLVMSCCToIntTRSProcessor.process(LLVMSCCToIntTRSProcessor.java:51)
	at aprove.Strategies.ExecutableStrategies.Executor.execute(Executor.java:326)
	at aprove.Strategies.ExecutableStrategies.Executor$Runner.wrappedRun(Executor.java:377)
	at aprove.Strategies.Abortions.PooledJob.run(PooledJob.java:99)
	at aprove.Strategies.Util.PrioritizableThreadPool$Worker.run(PrioritizableThreadPool.java:274)
	at java.base/java.lang.Thread.run(Thread.java:840)
Aborted 1755961028Exec. 6, LLVMSEGraphToIntTRS with some error. Reason: java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR.
            aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
            aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils.toTerm(LLVMRelationUtils.java:28)
            aprove.InputModules.Programs.llvm.segraph.edges.LLVMEdgeInformation.toTerm(LLVMEdgeInformation.java:90)
            aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$3.getCondition(LLVMInvariants.java:76)
            aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$5.getCondition(LLVMInvariants.java:109)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.inferRuleFromEdge(LLVMGraphProcessor.java:95)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.translateGraphToRuleSet(LLVMGraphProcessor.java:252)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.transformGraphToIRS(LLVMGraphToIntTRSProcessor.java:148)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.process(LLVMGraphToIntTRSProcessor.java:105)
            aprove.InputModules.Programs.llvm.processors.LLVMSEGraphToIntTRSProcessor.process(LLVMSEGraphToIntTRSProcessor.java:43)
            aprove.Strategies.ExecutableStrategies.Executor.execute(Executor.java:326)
            aprove.Strategies.ExecutableStrategies.Executor$Runner.wrappedRun(Executor.java:377)
            aprove.Strategies.Abortions.PooledJob.run(PooledJob.java:99)
            aprove.Strategies.Util.PrioritizableThreadPool$Worker.run(PrioritizableThreadPool.java:274)
            java.base/java.lang.Thread.run(Thread.java:840)
java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR
	at aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
	at aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
	at aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils.toTerm(LLVMRelationUtils.java:28)
	at aprove.InputModules.Programs.llvm.segraph.edges.LLVMEdgeInformation.toTerm(LLVMEdgeInformation.java:90)
	at aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$3.getCondition(LLVMInvariants.java:76)
	at aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$5.getCondition(LLVMInvariants.java:109)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.inferRuleFromEdge(LLVMGraphProcessor.java:95)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.translateGraphToRuleSet(LLVMGraphProcessor.java:252)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.transformGraphToIRS(LLVMGraphToIntTRSProcessor.java:148)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.process(LLVMGraphToIntTRSProcessor.java:105)
	at aprove.InputModules.Programs.llvm.processors.LLVMSEGraphToIntTRSProcessor.process(LLVMSEGraphToIntTRSProcessor.java:43)
	at aprove.Strategies.ExecutableStrategies.Executor.execute(Executor.java:326)
	at aprove.Strategies.ExecutableStrategies.Executor$Runner.wrappedRun(Executor.java:377)
	at aprove.Strategies.Abortions.PooledJob.run(PooledJob.java:99)
	at aprove.Strategies.Util.PrioritizableThreadPool$Worker.run(PrioritizableThreadPool.java:274)
	at java.base/java.lang.Thread.run(Thread.java:840)
Aborted 1755961033Exec. 25, LLVMLassoToIntTRS with some error. Reason: java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR.
Aborted 1755961033Exec. 26, LLVMLassoToIntTRS with some error. Reason: java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR.
Aborted 1755961033Exec. 18, LLVMLassoToIntTRS with some error. Reason: java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR.
Aborted 1755961033Exec. 15, LLVMLassoToIntTRS with some error. Reason: java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR.
Aborted 1755961033Exec. 22, LLVMLassoToIntTRS with some error. Reason: java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR.
Aborted 1755961033Exec. 21, LLVMLassoToIntTRS with some error. Reason: java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR.
            aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
            aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils.toTerm(LLVMRelationUtils.java:28)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
Aborted 1755961033Exec. 27, LLVMLassoToIntTRS with some error. Reason: java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR.
Aborted 1755961033Exec. 24, LLVMLassoToIntTRS with some error. Reason: java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR.
Aborted 1755961033Exec. 16, LLVMLassoToIntTRS with some error. Reason: java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR.
Aborted 1755961033Exec. 19, LLVMLassoToIntTRS with some error. Reason: java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR.
Aborted 1755961033Exec. 28, LLVMLassoToIntTRS with some error. Reason: java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR.
Aborted 1755961033Exec. 17, LLVMLassoToIntTRS with some error. Reason: java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR.
Aborted 1755961033Exec. 23, LLVMLassoToIntTRS with some error. Reason: java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR.
            aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
Aborted 1755961033Exec. 20, LLVMLassoToIntTRS with some error. Reason: java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR.
            aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
            aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils.toTerm(LLVMRelationUtils.java:28)
            aprove.InputModules.Programs.llvm.segraph.edges.LLVMEdgeInformation.toTerm(LLVMEdgeInformation.java:90)
            aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$3.getCondition(LLVMInvariants.java:76)
            aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$5.getCondition(LLVMInvariants.java:109)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.inferRuleFromEdge(LLVMGraphProcessor.java:95)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.translateGraphToRuleSet(LLVMGraphProcessor.java:252)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.transformGraphToIRS(LLVMGraphToIntTRSProcessor.java:148)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.process(LLVMGraphToIntTRSProcessor.java:105)
            aprove.InputModules.Programs.llvm.processors.LLVMLassoToIntTRSProcessor.process(LLVMLassoToIntTRSProcessor.java:53)
            aprove.Strategies.ExecutableStrategies.Executor.execute(Executor.java:326)
            aprove.Strategies.ExecutableStrategies.Executor$Runner.wrappedRun(Executor.java:377)
            aprove.Strategies.Abortions.PooledJob.run(PooledJob.java:99)
            aprove.Strategies.Util.PrioritizableThreadPool$Worker.run(PrioritizableThreadPool.java:274)
            java.base/java.lang.Thread.run(Thread.java:840)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
            aprove.InputModules.Programs.llvm.segraph.edges.LLVMEdgeInformation.toTerm(LLVMEdgeInformation.java:90)
            aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$3.getCondition(LLVMInvariants.java:76)
            aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$5.getCondition(LLVMInvariants.java:109)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.inferRuleFromEdge(LLVMGraphProcessor.java:95)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.translateGraphToRuleSet(LLVMGraphProcessor.java:252)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.transformGraphToIRS(LLVMGraphToIntTRSProcessor.java:148)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.process(LLVMGraphToIntTRSProcessor.java:105)
            aprove.InputModules.Programs.llvm.processors.LLVMLassoToIntTRSProcessor.process(LLVMLassoToIntTRSProcessor.java:53)
            aprove.Strategies.ExecutableStrategies.Executor.execute(Executor.java:326)
            aprove.Strategies.ExecutableStrategies.Executor$Runner.wrappedRun(Executor.java:377)
            aprove.Strategies.Abortions.PooledJob.run(PooledJob.java:99)
            aprove.Strategies.Util.PrioritizableThreadPool$Worker.run(PrioritizableThreadPool.java:274)
            java.base/java.lang.Thread.run(Thread.java:840)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
            aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils.toTerm(LLVMRelationUtils.java:28)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
            aprove.InputModules.Programs.llvm.segraph.edges.LLVMEdgeInformation.toTerm(LLVMEdgeInformation.java:90)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
            aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$3.getCondition(LLVMInvariants.java:76)
            aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils.toTerm(LLVMRelationUtils.java:28)
            aprove.InputModules.Programs.llvm.segraph.edges.LLVMEdgeInformation.toTerm(LLVMEdgeInformation.java:90)
            aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$3.getCondition(LLVMInvariants.java:76)
            aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$5.getCondition(LLVMInvariants.java:109)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.inferRuleFromEdge(LLVMGraphProcessor.java:95)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.translateGraphToRuleSet(LLVMGraphProcessor.java:252)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR
	at aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
	at aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
	at aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils.toTerm(LLVMRelationUtils.java:28)
	at aprove.InputModules.Programs.llvm.segraph.edges.LLVMEdgeInformation.toTerm(LLVMEdgeInformation.java:90)
	at aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$3.getCondition(LLVMInvariants.java:76)
	at aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$5.getCondition(LLVMInvariants.java:109)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.inferRuleFromEdge(LLVMGraphProcessor.java:95)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.translateGraphToRuleSet(LLVMGraphProcessor.java:252)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.transformGraphToIRS(LLVMGraphToIntTRSProcessor.java:148)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.process(LLVMGraphToIntTRSProcessor.java:105)
	at aprove.InputModules.Programs.llvm.processors.LLVMLassoToIntTRSProcessor.process(LLVMLassoToIntTRSProcessor.java:53)
	at aprove.Strategies.ExecutableStrategies.Executor.execute(Executor.java:326)
	at aprove.Strategies.ExecutableStrategies.Executor$Runner.wrappedRun(Executor.java:377)
	at aprove.Strategies.Abortions.PooledJob.run(PooledJob.java:99)
	at aprove.Strategies.Util.PrioritizableThreadPool$Worker.run(PrioritizableThreadPool.java:274)
	at java.base/java.lang.Thread.run(Thread.java:840)
            aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$5.getCondition(LLVMInvariants.java:109)
            aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR
	at aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
	at aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
	at aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils.toTerm(LLVMRelationUtils.java:28)
	at aprove.InputModules.Programs.llvm.segraph.edges.LLVMEdgeInformation.toTerm(LLVMEdgeInformation.java:90)
	at aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$3.getCondition(LLVMInvariants.java:76)
	at aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$5.getCondition(LLVMInvariants.java:109)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.inferRuleFromEdge(LLVMGraphProcessor.java:95)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.translateGraphToRuleSet(LLVMGraphProcessor.java:252)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.transformGraphToIRS(LLVMGraphToIntTRSProcessor.java:148)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.process(LLVMGraphToIntTRSProcessor.java:105)
	at aprove.InputModules.Programs.llvm.processors.LLVMLassoToIntTRSProcessor.process(LLVMLassoToIntTRSProcessor.java:53)
	at aprove.Strategies.ExecutableStrategies.Executor.execute(Executor.java:326)
	at aprove.Strategies.ExecutableStrategies.Executor$Runner.wrappedRun(Executor.java:377)
	at aprove.Strategies.Abortions.PooledJob.run(PooledJob.java:99)
	at aprove.Strategies.Util.PrioritizableThreadPool$Worker.run(PrioritizableThreadPool.java:274)
	at java.base/java.lang.Thread.run(Thread.java:840)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
MAYBE
            aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.inferRuleFromEdge(LLVMGraphProcessor.java:95)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
            aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
            aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.transformGraphToIRS(LLVMGraphToIntTRSProcessor.java:148)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.process(LLVMGraphToIntTRSProcessor.java:105)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils.toTerm(LLVMRelationUtils.java:28)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
            aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils.toTerm(LLVMRelationUtils.java:28)
            aprove.InputModules.Programs.llvm.segraph.edges.LLVMEdgeInformation.toTerm(LLVMEdgeInformation.java:90)
            aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$3.getCondition(LLVMInvariants.java:76)
            aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$5.getCondition(LLVMInvariants.java:109)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.inferRuleFromEdge(LLVMGraphProcessor.java:95)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.translateGraphToRuleSet(LLVMGraphProcessor.java:252)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.transformGraphToIRS(LLVMGraphToIntTRSProcessor.java:148)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.process(LLVMGraphToIntTRSProcessor.java:105)
            aprove.InputModules.Programs.llvm.processors.LLVMLassoToIntTRSProcessor.process(LLVMLassoToIntTRSProcessor.java:53)
            aprove.Strategies.ExecutableStrategies.Executor.execute(Executor.java:326)
            aprove.Strategies.ExecutableStrategies.Executor$Runner.wrappedRun(Executor.java:377)
            aprove.Strategies.Abortions.PooledJob.run(PooledJob.java:99)
            aprove.Strategies.Util.PrioritizableThreadPool$Worker.run(PrioritizableThreadPool.java:274)
            aprove.InputModules.Programs.llvm.processors.LLVMLassoToIntTRSProcessor.process(LLVMLassoToIntTRSProcessor.java:53)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
            aprove.Strategies.ExecutableStrategies.Executor.execute(Executor.java:326)
            aprove.Strategies.ExecutableStrategies.Executor$Runner.wrappedRun(Executor.java:377)
            aprove.Strategies.Abortions.PooledJob.run(PooledJob.java:99)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
            aprove.Strategies.Util.PrioritizableThreadPool$Worker.run(PrioritizableThreadPool.java:274)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils.toTerm(LLVMRelationUtils.java:28)
            aprove.InputModules.Programs.llvm.segraph.edges.LLVMEdgeInformation.toTerm(LLVMEdgeInformation.java:90)
            aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$3.getCondition(LLVMInvariants.java:76)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.translateGraphToRuleSet(LLVMGraphProcessor.java:252)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
            aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$5.getCondition(LLVMInvariants.java:109)
            aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
            aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.transformGraphToIRS(LLVMGraphToIntTRSProcessor.java:148)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
            aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
            aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
            aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
            aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
            aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
            aprove.InputModules.Programs.llvm.segraph.edges.LLVMEdgeInformation.toTerm(LLVMEdgeInformation.java:90)
java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR
	at aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
	at aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
	at aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils.toTerm(LLVMRelationUtils.java:28)
	at aprove.InputModules.Programs.llvm.segraph.edges.LLVMEdgeInformation.toTerm(LLVMEdgeInformation.java:90)
	at aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$3.getCondition(LLVMInvariants.java:76)
	at aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$5.getCondition(LLVMInvariants.java:109)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.inferRuleFromEdge(LLVMGraphProcessor.java:95)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.translateGraphToRuleSet(LLVMGraphProcessor.java:252)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.transformGraphToIRS(LLVMGraphToIntTRSProcessor.java:148)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.process(LLVMGraphToIntTRSProcessor.java:105)
	at aprove.InputModules.Programs.llvm.processors.LLVMLassoToIntTRSProcessor.process(LLVMLassoToIntTRSProcessor.java:53)
	at aprove.Strategies.ExecutableStrategies.Executor.execute(Executor.java:326)
	at aprove.Strategies.ExecutableStrategies.Executor$Runner.wrappedRun(Executor.java:377)
	at aprove.Strategies.Abortions.PooledJob.run(PooledJob.java:99)
	at aprove.Strategies.Util.PrioritizableThreadPool$Worker.run(PrioritizableThreadPool.java:274)
	at java.base/java.lang.Thread.run(Thread.java:840)
java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR
	at aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
	at aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
	at aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils.toTerm(LLVMRelationUtils.java:28)
	at aprove.InputModules.Programs.llvm.segraph.edges.LLVMEdgeInformation.toTerm(LLVMEdgeInformation.java:90)
	at aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$3.getCondition(LLVMInvariants.java:76)
	at aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$5.getCondition(LLVMInvariants.java:109)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.inferRuleFromEdge(LLVMGraphProcessor.java:95)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.translateGraphToRuleSet(LLVMGraphProcessor.java:252)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.transformGraphToIRS(LLVMGraphToIntTRSProcessor.java:148)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.process(LLVMGraphToIntTRSProcessor.java:105)
	at aprove.InputModules.Programs.llvm.processors.LLVMLassoToIntTRSProcessor.process(LLVMLassoToIntTRSProcessor.java:53)
	at aprove.Strategies.ExecutableStrategies.Executor.execute(Executor.java:326)
	at aprove.Strategies.ExecutableStrategies.Executor$Runner.wrappedRun(Executor.java:377)
	at aprove.Strategies.Abortions.PooledJob.run(PooledJob.java:99)
	at aprove.Strategies.Util.PrioritizableThreadPool$Worker.run(PrioritizableThreadPool.java:274)
	at java.base/java.lang.Thread.run(Thread.java:840)
java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR
	at aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
	at aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
	at aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils.toTerm(LLVMRelationUtils.java:28)
	at aprove.InputModules.Programs.llvm.segraph.edges.LLVMEdgeInformation.toTerm(LLVMEdgeInformation.java:90)
	at aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$3.getCondition(LLVMInvariants.java:76)
	at aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$5.getCondition(LLVMInvariants.java:109)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.inferRuleFromEdge(LLVMGraphProcessor.java:95)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.translateGraphToRuleSet(LLVMGraphProcessor.java:252)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.transformGraphToIRS(LLVMGraphToIntTRSProcessor.java:148)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.process(LLVMGraphToIntTRSProcessor.java:105)
	at aprove.InputModules.Programs.llvm.processors.LLVMLassoToIntTRSProcessor.process(LLVMLassoToIntTRSProcessor.java:53)
	at aprove.Strategies.ExecutableStrategies.Executor.execute(Executor.java:326)
	at aprove.Strategies.ExecutableStrategies.Executor$Runner.wrappedRun(Executor.java:377)
	at aprove.Strategies.Abortions.PooledJob.run(PooledJob.java:99)
	at aprove.Strategies.Util.PrioritizableThreadPool$Worker.run(PrioritizableThreadPool.java:274)
	at java.base/java.lang.Thread.run(Thread.java:840)
java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR
	at aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
	at aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
	at aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils.toTerm(LLVMRelationUtils.java:28)
	at aprove.InputModules.Programs.llvm.segraph.edges.LLVMEdgeInformation.toTerm(LLVMEdgeInformation.java:90)
	at aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$3.getCondition(LLVMInvariants.java:76)
	at aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$5.getCondition(LLVMInvariants.java:109)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.inferRuleFromEdge(LLVMGraphProcessor.java:95)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.translateGraphToRuleSet(LLVMGraphProcessor.java:252)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.transformGraphToIRS(LLVMGraphToIntTRSProcessor.java:148)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.process(LLVMGraphToIntTRSProcessor.java:105)
	at aprove.InputModules.Programs.llvm.processors.LLVMLassoToIntTRSProcessor.process(LLVMLassoToIntTRSProcessor.java:53)
	at aprove.Strategies.ExecutableStrategies.Executor.execute(Executor.java:326)
	at aprove.Strategies.ExecutableStrategies.Executor$Runner.wrappedRun(Executor.java:377)
	at aprove.Strategies.Abortions.PooledJob.run(PooledJob.java:99)
	at aprove.Strategies.Util.PrioritizableThreadPool$Worker.run(PrioritizableThreadPool.java:274)
	at java.base/java.lang.Thread.run(Thread.java:840)
java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR
	at aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
	at aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
	at aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils.toTerm(LLVMRelationUtils.java:28)
	at aprove.InputModules.Programs.llvm.segraph.edges.LLVMEdgeInformation.toTerm(LLVMEdgeInformation.java:90)
	at aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$3.getCondition(LLVMInvariants.java:76)
	at aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$5.getCondition(LLVMInvariants.java:109)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.inferRuleFromEdge(LLVMGraphProcessor.java:95)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.translateGraphToRuleSet(LLVMGraphProcessor.java:252)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.transformGraphToIRS(LLVMGraphToIntTRSProcessor.java:148)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.process(LLVMGraphToIntTRSProcessor.java:105)
	at aprove.InputModules.Programs.llvm.processors.LLVMLassoToIntTRSProcessor.process(LLVMLassoToIntTRSProcessor.java:53)
	at aprove.Strategies.ExecutableStrategies.Executor.execute(Executor.java:326)
	at aprove.Strategies.ExecutableStrategies.Executor$Runner.wrappedRun(Executor.java:377)
	at aprove.Strategies.Abortions.PooledJob.run(PooledJob.java:99)
	at aprove.Strategies.Util.PrioritizableThreadPool$Worker.run(PrioritizableThreadPool.java:274)
	at java.base/java.lang.Thread.run(Thread.java:840)
java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR
	at aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
	at aprove.InputModules.Programs.llvm.internalStructures.expressions.relations.LLVMRelation.toTerm(LLVMRelation.java:258)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:37)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils$1.combine(LLVMRelationUtils.java:32)
	at aprove.Framework.Utility.GenericStructures.ObjectUtils.binaryFold(ObjectUtils.java:25)
	at aprove.InputModules.Programs.llvm.utils.LLVMRelationUtils.toTerm(LLVMRelationUtils.java:28)
	at aprove.InputModules.Programs.llvm.segraph.edges.LLVMEdgeInformation.toTerm(LLVMEdgeInformation.java:90)
	at aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$3.getCondition(LLVMInvariants.java:76)
	at aprove.InputModules.Programs.llvm.internalStructures.LLVMInvariants$5.getCondition(LLVMInvariants.java:109)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.inferRuleFromEdge(LLVMGraphProcessor.java:95)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphProcessor.translateGraphToRuleSet(LLVMGraphProcessor.java:252)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.transformGraphToIRS(LLVMGraphToIntTRSProcessor.java:148)
	at aprove.InputModules.Programs.llvm.processors.LLVMGraphToIntTRSProcessor.process(LLVMGraphToIntTRSProcessor.java:105)
	at aprove.InputModules.Programs.llvm.processors.LLVMLassoToIntTRSProcessor.process(LLVMLassoToIntTRSProcessor.java:53)
	at aprove.Strategies.ExecutableStrategies.Executor.execute(Executor.java:326)
	at aprove.Strategies.ExecutableStrategies.Executor$Runner.wrappedRun(Executor.java:377)
	at aprove.Strategies.Abortions.PooledJob.run(PooledJob.java:99)
	at aprove.Strategies.Util.PrioritizableThreadPool$Worker.run(PrioritizableThreadPool.java:274)
	at java.base/java.lang.Thread.run(Thread.java:840)
java.lang.UnsupportedOperationException: There are no viable cases left. Case optype: XOR
	at aprove.InputModules.Programs.llvm.internalStructures.expressions.LLVMOperation.toTerm(LLVMOperation.java:254)
Runtime: 36910 milliseconds