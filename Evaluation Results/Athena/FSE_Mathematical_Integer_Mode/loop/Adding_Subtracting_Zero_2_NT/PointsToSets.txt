NODE   2: <2> PSNodeType::ENTRY (points-to size: 0)
NODE   3:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   4:   %b = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %b = alloca i32, align 4 + 0
NODE   5:   %end = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %end = alloca i32, align 4 + 0
NODE   6:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   7:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   8:   store i32 %call, i32* %b, align 4 (points-to size: 0)
NODE   9:   %call1 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  10:   store i32 %call1, i32* %end, align 4 (points-to size: 0)
NODE  11:   %0 = load i32, i32* %b, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  12:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  13:   %7 = load i32, i32* %retval, align 4 (points-to size: 1)
    -> null + 0
NODE  14:   ret i32 %7 (points-to size: 0)
NODE  15:   %1 = load i32, i32* %end, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  16:   %2 = load i32, i32* %b, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  17:   %3 = load i32, i32* %end, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  18: <18> PSNodeType::CALL (points-to size: 0)
NODE  19: <19> PSNodeType::ENTRY (points-to size: 0)
NODE  20:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE  21:   %i = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %i = alloca i32, align 4 + 0
NODE  22:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  23:   store i32 %call, i32* %i, align 4 (points-to size: 0)
NODE  24:   %0 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  25:   %rem = srem i32 %0, 1000 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  26:   store i32 %rem, i32* %i, align 4 (points-to size: 0)
NODE  27:   %1 = load i32, i32* @flag, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  28:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  29:   %6 = load i32, i32* %retval, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  30:   ret i32 %6 (points-to size: 0)
NODE  31:   %2 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  32:   store i32 1, i32* @flag, align 4 (points-to size: 0)
NODE  33:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  34:   %3 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  35:   %4 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  36:   %sub = sub nsw i32 0, %4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  37:   store i32 %sub, i32* %retval, align 4 (points-to size: 0)
NODE  38:   %5 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  39:   store i32 %5, i32* %retval, align 4 (points-to size: 0)
NODE  40: ff_subtitles_next_line (points-to size: 1)
    -> ff_subtitles_next_line + 0
NODE  41: main (points-to size: 1)
    -> main + 0
NODE  42:   %call4 = call i32 @ff_subtitles_next_line() (points-to size: 0)
NODE  43:   %4 = load i32, i32* %b, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  44:   %add = add nsw i32 %4, %call4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  45:   store i32 %add, i32* %b, align 4 (points-to size: 0)
NODE  46:   %5 = load i32, i32* %b, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  47:   %6 = load i32, i32* %end, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  48:   %sub = sub nsw i32 %6, 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  49:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  50:   store i32 0, i32* %retval, align 4 (points-to size: 0)
