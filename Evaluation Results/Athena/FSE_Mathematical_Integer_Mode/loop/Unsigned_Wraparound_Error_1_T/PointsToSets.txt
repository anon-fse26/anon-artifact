NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %best = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %best = alloca i32, align 4 + 0
NODE   4:   %cur = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %cur = alloca i32, align 4 + 0
NODE   5:   %pre = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %pre = alloca i32, align 4 + 0
NODE   6:   %st_max = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %st_max = alloca i32, align 4 + 0
NODE   7:   %it_min = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %it_min = alloca i32, align 4 + 0
NODE   8:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   9:   %call = call i32 @__VERIFIER_nondet_uint() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  10:   store i32 %call, i32* %best, align 4 (points-to size: 0)
NODE  11:   %0 = load i32, i32* %best, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  12:   store i32 %0, i32* %cur, align 4 (points-to size: 0)
NODE  13:   %call1 = call i32 @__VERIFIER_nondet_uint() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  14:   store i32 %call1, i32* %st_max, align 4 (points-to size: 0)
NODE  15:   %call2 = call i32 @__VERIFIER_nondet_uint() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  16:   store i32 %call2, i32* %it_min, align 4 (points-to size: 0)
NODE  17:   %1 = load i32, i32* %st_max, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  18:   %2 = load i32, i32* %it_min, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  19:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  20:   %11 = load i32, i32* %retval, align 4 (points-to size: 1)
    -> null + 0
NODE  21:   ret i32 %11 (points-to size: 0)
NODE  22:   %3 = load i32, i32* %best, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  23:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  24:   %4 = load i32, i32* %st_max, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  25:   %5 = load i32, i32* %cur, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  26:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  27:   %6 = load i32, i32* %cur, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  28:   store i32 %6, i32* %pre, align 4 (points-to size: 0)
NODE  29:   %7 = load i32, i32* %best, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  30:   %8 = load i32, i32* %cur, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  31:   %add = add i32 %8, %7 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  32:   store i32 %add, i32* %cur, align 4 (points-to size: 0)
NODE  33:   %9 = load i32, i32* %cur, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  34:   %10 = load i32, i32* %pre, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  35: main (points-to size: 1)
    -> main + 0
