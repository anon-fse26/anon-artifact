NODE   2: <2> PSNodeType::ENTRY (points-to size: 0)
NODE   3:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   4:   %b = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %b = alloca i32, align 4 + 0
NODE   5:   %end = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %end = alloca i32, align 4 + 0
NODE   6:   %inc = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %inc = alloca i32, align 4 + 0
NODE   7:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   8:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   9:   store i32 %call, i32* %b, align 4 (points-to size: 0)
NODE  10:   %call1 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  11:   store i32 %call1, i32* %end, align 4 (points-to size: 0)
NODE  12:   %0 = load i32, i32* %b, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  13:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  14:   %9 = load i32, i32* %retval, align 4 (points-to size: 1)
    -> null + 0
NODE  15:   ret i32 %9 (points-to size: 0)
NODE  16:   %1 = load i32, i32* %end, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  17:   %2 = load i32, i32* %b, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  18:   %3 = load i32, i32* %end, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  19: <19> PSNodeType::CALL (points-to size: 0)
NODE  20: <20> PSNodeType::ENTRY (points-to size: 0)
NODE  21:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE  22:   %i = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %i = alloca i32, align 4 + 0
NODE  23:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  24:   store i32 %call, i32* %i, align 4 (points-to size: 0)
NODE  25:   %0 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  26:   %rem = srem i32 %0, 1000 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  27:   store i32 %rem, i32* %i, align 4 (points-to size: 0)
NODE  28:   %1 = load i32, i32* @flag, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  29:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  30:   %6 = load i32, i32* %retval, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  31:   ret i32 %6 (points-to size: 0)
NODE  32:   %2 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  33:   store i32 1, i32* @flag, align 4 (points-to size: 0)
NODE  34:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  35:   %3 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  36:   %4 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  37:   %sub = sub nsw i32 0, %4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  38:   store i32 %sub, i32* %retval, align 4 (points-to size: 0)
NODE  39:   %5 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  40:   store i32 %5, i32* %retval, align 4 (points-to size: 0)
NODE  41: ff_subtitles_next_line (points-to size: 1)
    -> ff_subtitles_next_line + 0
NODE  42: main (points-to size: 1)
    -> main + 0
NODE  43:   %call4 = call i32 @ff_subtitles_next_line() (points-to size: 0)
NODE  44:   store i32 %call4, i32* %inc, align 4 (points-to size: 0)
NODE  45:   %4 = load i32, i32* %inc, align 4 (points-to size: 0)
NODE  46:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  47:   %5 = load i32, i32* %inc, align 4 (points-to size: 0)
NODE  48:   %6 = load i32, i32* %b, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  49:   %add = add nsw i32 %6, %5 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  50:   store i32 %add, i32* %b, align 4 (points-to size: 0)
NODE  51:   %7 = load i32, i32* %b, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  52:   %8 = load i32, i32* %end, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  53:   %sub = sub nsw i32 %8, 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  54:   store i32 0, i32* %retval, align 4 (points-to size: 0)
