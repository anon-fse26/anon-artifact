NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %c1 = alloca i8, align 1 [size: 1, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %c1 = alloca i8, align 1 + 0
NODE   4:   %c2 = alloca i8, align 1 [size: 1, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %c2 = alloca i8, align 1 + 0
NODE   5:   %ac = alloca i8, align 1 [size: 1, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %ac = alloca i8, align 1 + 0
NODE   6:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   7:   %call = call zeroext i8 @__VERIFIER_nondet_uchar() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   8:   store i8 %call, i8* %c1, align 1 (points-to size: 0)
NODE   9:   %call1 = call signext i8 @__VERIFIER_nondet_char() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  10:   store i8 %call1, i8* %c2, align 1 (points-to size: 0)
NODE  11:   %0 = load i8, i8* %c1, align 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  12:   store i8 %0, i8* %ac, align 1 (points-to size: 0)
NODE  13:   %1 = load i8, i8* %ac, align 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  14:   %conv = zext i8 %1 to i32 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  15:   %2 = load i8, i8* %c2, align 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  16:   %conv2 = zext i8 %2 to i32 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  17:   ret i32 0 (points-to size: 1)
    -> null + 0
NODE  18:   %3 = load i8, i8* %ac, align 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  19:   %inc = add i8 %3, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  20:   store i8 %inc, i8* %ac, align 1 (points-to size: 0)
NODE  21: main (points-to size: 1)
    -> main + 0
