NODE   2: <2> PSNodeType::ENTRY (points-to size: 0)
NODE   3:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   4:   %pos = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %pos = alloca i32, align 4 + 0
NODE   5:   %size = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %size = alloca i32, align 4 + 0
NODE   6:   %errno = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %errno = alloca i32, align 4 + 0
NODE   7:   %rc = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %rc = alloca i32, align 4 + 0
NODE   8:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   9:   store i32 0, i32* %pos, align 4 (points-to size: 0)
NODE  10:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  11:   store i32 %call, i32* %size, align 4 (points-to size: 0)
NODE  12:   store i32 0, i32* @flag, align 4 (points-to size: 0)
NODE  13:   store i32 0, i32* %errno, align 4 (points-to size: 0)
NODE  14:   %0 = load i32, i32* %size, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  15:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  16:   %12 = load i32, i32* %retval, align 4 (points-to size: 1)
    -> null + 0
NODE  17:   ret i32 %12 (points-to size: 0)
NODE  18:   %1 = load i32, i32* %size, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  19:   %2 = load i32, i32* %pos, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  20:   %3 = load i32, i32* %size, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  21:   %4 = load i32, i32* %pos, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  22:   %5 = load i32, i32* %size, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  23:   %6 = load i32, i32* %pos, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  24:   %sub = sub nsw i32 %5, %6 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  25: <25> PSNodeType::CALL (points-to size: 0)
NODE  26: <26> PSNodeType::ENTRY (points-to size: 0)
NODE  27: i32 %loc (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  28: i32 %len (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  29:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE  30:   %loc.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %loc.addr = alloca i32, align 4 + 0
NODE  31:   %len.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %len.addr = alloca i32, align 4 + 0
NODE  32:   %count = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %count = alloca i32, align 4 + 0
NODE  33:   %num = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %num = alloca i32, align 4 + 0
NODE  34:   store i32 %loc, i32* %loc.addr, align 4 (points-to size: 0)
NODE  35:   store i32 %len, i32* %len.addr, align 4 (points-to size: 0)
NODE  36:   store i32 0, i32* %count, align 4 (points-to size: 0)
NODE  37:   %0 = load i32, i32* @flag, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  38:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  39:   %12 = load i32, i32* %retval, align 4 (points-to size: 3)
    -> null + 0
    -> null + Offset::UNKNOWN
    -> unknown + Offset::UNKNOWN
NODE  40:   ret i32 %12 (points-to size: 0)
NODE  41:   %1 = load i32, i32* %loc.addr, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  42:   %2 = load i32, i32* %len.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  43:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  44:   store i32 %call, i32* %num, align 4 (points-to size: 0)
NODE  45:   %3 = load i32, i32* %num, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  46:   %11 = load i32, i32* %count, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  47:   store i32 %11, i32* %retval, align 4 (points-to size: 0)
NODE  48:   store i32 -1, i32* %retval, align 4 (points-to size: 0)
NODE  49:   %4 = load i32, i32* %num, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  50:   %5 = load i32, i32* %num, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  51:   %sub = sub nsw i32 0, %5 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  52:   store i32 %sub, i32* %num, align 4 (points-to size: 0)
NODE  53:   %6 = load i32, i32* %num, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  54:   %rem = srem i32 %6, 1000 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  55:   store i32 %rem, i32* %num, align 4 (points-to size: 0)
NODE  56:   %7 = load i32, i32* %count, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  57:   %inc = add nsw i32 %7, 1 (points-to size: 1)
    -> null + Offset::UNKNOWN
NODE  58:   store i32 %inc, i32* %count, align 4 (points-to size: 0)
NODE  59:   %8 = load i32, i32* %num, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  60:   %9 = load i32, i32* %loc.addr, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  61:   %inc9 = add nsw i32 %9, 1 (points-to size: 1)
    -> null + Offset::UNKNOWN
NODE  62:   store i32 %inc9, i32* %loc.addr, align 4 (points-to size: 0)
NODE  63:   store i32 1, i32* @flag, align 4 (points-to size: 0)
NODE  64:   %10 = load i32, i32* %count, align 4 (points-to size: 1)
    -> null + Offset::UNKNOWN
NODE  65:   store i32 %10, i32* %retval, align 4 (points-to size: 0)
NODE  66: read (points-to size: 1)
    -> read + 0
NODE  67: main (points-to size: 1)
    -> main + 0
NODE  68:   %call3 = call i32 @read(i32 %4, i32 %sub) (points-to size: 0)
NODE  69:   store i32 %call3, i32* %rc, align 4 (points-to size: 0)
NODE  70:   %7 = load i32, i32* %rc, align 4 (points-to size: 0)
NODE  71:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  72:   %8 = load i32, i32* %errno, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  73:   %inc = add nsw i32 %8, 1 (points-to size: 1)
    -> null + Offset::UNKNOWN
NODE  74:   store i32 %inc, i32* %errno, align 4 (points-to size: 0)
NODE  75:   %9 = load i32, i32* %errno, align 4 (points-to size: 1)
    -> null + Offset::UNKNOWN
NODE  76:   %10 = load i32, i32* %rc, align 4 (points-to size: 0)
NODE  77:   %11 = load i32, i32* %pos, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  78:   %add = add nsw i32 %11, %10 (points-to size: 1)
    -> null + Offset::UNKNOWN
NODE  79:   store i32 %add, i32* %pos, align 4 (points-to size: 0)
NODE  80:   store i32 0, i32* %retval, align 4 (points-to size: 0)
