NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %i = alloca i64, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %i = alloca i64, align 8 + 0
NODE   4:   %max_fds = alloca i64, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %max_fds = alloca i64, align 8 + 0
NODE   5:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   6: <6> PSNodeType::CALL (points-to size: 0)
NODE   7: <7> PSNodeType::ENTRY (points-to size: 0)
NODE   8:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   9:   %i = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %i = alloca i32, align 4 + 0
NODE  10:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  11:   store i32 %call, i32* %i, align 4 (points-to size: 0)
NODE  12:   %0 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  13:   %rem = srem i32 %0, 99999 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  14:   store i32 %rem, i32* %i, align 4 (points-to size: 0)
NODE  15:   %1 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  16:   %2 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  17:   %sub = sub nsw i32 0, %2 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  18:   store i32 %sub, i32* %retval, align 4 (points-to size: 0)
NODE  19:   %4 = load i32, i32* %retval, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  20:   ret i32 %4 (points-to size: 0)
NODE  21:   %3 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  22:   store i32 %3, i32* %retval, align 4 (points-to size: 0)
NODE  23: gettablesize (points-to size: 1)
    -> gettablesize + 0
NODE  24: main (points-to size: 1)
    -> main + 0
NODE  25:   %call = call i32 @gettablesize() (points-to size: 0)
NODE  26:   %conv = sext i32 %call to i64 (points-to size: 0)
NODE  27:   store i64 %conv, i64* %max_fds, align 8 (points-to size: 0)
NODE  28:   store i64 0, i64* %i, align 8 (points-to size: 0)
NODE  29:   %0 = load i64, i64* %i, align 8 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  30:   %1 = load i64, i64* %max_fds, align 8 (points-to size: 0)
NODE  31:   ret i32 0 (points-to size: 1)
    -> null + 0
NODE  32:   %2 = load i64, i64* %i, align 8 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  33:   %inc = add nsw i64 %2, 1 (points-to size: 1)
    -> null + Offset::UNKNOWN
NODE  34:   store i64 %inc, i64* %i, align 8 (points-to size: 0)
