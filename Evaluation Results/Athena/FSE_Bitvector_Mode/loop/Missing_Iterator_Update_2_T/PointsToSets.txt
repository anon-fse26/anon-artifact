NODE   2: <2> PSNodeType::ENTRY (points-to size: 0)
NODE   3:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   4:   %rc = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %rc = alloca i32, align 4 + 0
NODE   5:   %dval_mv_size = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %dval_mv_size = alloca i32, align 4 + 0
NODE   6:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   7: <7> PSNodeType::CALL (points-to size: 0)
NODE   8: <8> PSNodeType::ENTRY (points-to size: 0)
NODE   9:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE  10:   %i = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %i = alloca i32, align 4 + 0
NODE  11:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  12:   store i32 %call, i32* %i, align 4 (points-to size: 0)
NODE  13:   %0 = load i32, i32* @flag, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  14:   %inc = add nsw i32 %0, 1 (points-to size: 1)
    -> null + Offset::UNKNOWN
NODE  15:   store i32 %inc, i32* @flag, align 4 (points-to size: 0)
NODE  16:   %1 = load i32, i32* @flag, align 4 (points-to size: 1)
    -> null + Offset::UNKNOWN
NODE  17:   store i32 1, i32* %retval, align 4 (points-to size: 0)
NODE  18:   %3 = load i32, i32* %retval, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  19:   ret i32 %3 (points-to size: 0)
NODE  20:   %2 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  21:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  22:   store i32 1, i32* %retval, align 4 (points-to size: 0)
NODE  23: mdb_cursor_get (points-to size: 1)
    -> mdb_cursor_get + 0
NODE  24: main (points-to size: 1)
    -> main + 0
NODE  25:   %call = call i32 @mdb_cursor_get() (points-to size: 0)
NODE  26:   store i32 %call, i32* %rc, align 4 (points-to size: 0)
NODE  27:   %call1 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  28:   store i32 %call1, i32* %dval_mv_size, align 4 (points-to size: 0)
NODE  29:   %0 = load i32, i32* %rc, align 4 (points-to size: 0)
NODE  30:   %1 = load i32, i32* %dval_mv_size, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  31:   ret i32 0 (points-to size: 1)
    -> null + 0
NODE  32: <32> PSNodeType::CALL (points-to size: 0)
NODE  33:   %call3 = call i32 @mdb_cursor_get() (points-to size: 0)
NODE  34:   store i32 %call3, i32* %rc, align 4 (points-to size: 0)
NODE  35: <35> PSNodeType::CALL (points-to size: 0)
NODE  36:   %call4 = call i32 @mdb_cursor_get() (points-to size: 0)
NODE  37:   store i32 %call4, i32* %rc, align 4 (points-to size: 0)
