NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %wc = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %wc = alloca i32, align 4 + 0
NODE   4:   %mask = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %mask = alloca i32, align 4 + 0
NODE   5:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   6:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   7:   store i32 %call, i32* %wc, align 4 (points-to size: 0)
NODE   8:   store i32 67108863, i32* %mask, align 4 (points-to size: 0)
NODE   9:   %0 = load i32, i32* %wc, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  10:   %shr = ashr i32 %0, 6 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  11:   %1 = load i32, i32* %mask, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  12:   %and = and i32 %shr, %1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  13:   store i32 %and, i32* %wc, align 4 (points-to size: 0)
NODE  14:   ret i32 0 (points-to size: 1)
    -> null + 0
NODE  15: main (points-to size: 1)
    -> main + 0
