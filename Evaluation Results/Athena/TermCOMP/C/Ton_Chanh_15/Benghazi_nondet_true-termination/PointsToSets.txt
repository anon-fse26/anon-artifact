NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %x = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %x = alloca i32, align 4 + 0
NODE   4:   %d1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %d1 = alloca i32, align 4 + 0
NODE   5:   %d2 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %d2 = alloca i32, align 4 + 0
NODE   6:   %d1old = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %d1old = alloca i32, align 4 + 0
NODE   7:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   8:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   9:   store i32 %call, i32* %x, align 4 (points-to size: 0)
NODE  10:   %call1 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  11:   store i32 %call1, i32* %d1, align 4 (points-to size: 0)
NODE  12:   %call2 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  13:   store i32 %call2, i32* %d2, align 4 (points-to size: 0)
NODE  14:   %0 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  15:   %1 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  16:   %2 = load i32, i32* %d1, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  17:   %sub = sub nsw i32 %1, %2 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  18:   store i32 %sub, i32* %x, align 4 (points-to size: 0)
NODE  19:   %3 = load i32, i32* %d1, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  20:   store i32 %3, i32* %d1old, align 4 (points-to size: 0)
NODE  21:   %4 = load i32, i32* %d2, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  22:   %add = add nsw i32 %4, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  23:   store i32 %add, i32* %d1, align 4 (points-to size: 0)
NODE  24:   %5 = load i32, i32* %d1old, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  25:   %add3 = add nsw i32 %5, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  26:   store i32 %add3, i32* %d2, align 4 (points-to size: 0)
NODE  27:   ret i32 0 (points-to size: 1)
    -> null + 0
NODE  28: main (points-to size: 1)
    -> main + 0
