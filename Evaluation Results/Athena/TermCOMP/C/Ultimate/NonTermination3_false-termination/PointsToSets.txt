NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %i = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %i = alloca i32, align 4 + 0
NODE   4:   %a = alloca [10 x i32], align 16 [size: 40, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %a = alloca [10 x i32], align 16 + 0
NODE   5:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   6:   %call = call i32 (...) @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   7:   store i32 %call, i32* %i, align 4 (points-to size: 0)
NODE   8:   %0 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   9:   %1 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  10:   %4 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond ], [ %cm ... (points-to size: 1)
    -> null + 0
NODE  11:   %2 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  12:   %idxprom = sext i32 %2 to i64 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  13:   %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* %a, i64 0 ... (points-to size: 1)
    ->   %a = alloca [10 x i32], align 16 + Offset::UNKNOWN
NODE  14:   %3 = load i32, i32* %arrayidx, align 4 (points-to size: 1)
    -> null + 0
NODE  15:   %call3 = call i32 (...) @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  16:   store i32 %call3, i32* %i, align 4 (points-to size: 0)
NODE  17:   %5 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  18:   %idxprom4 = sext i32 %5 to i64 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  19:   %arrayidx5 = getelementptr inbounds [10 x i32], [10 x i32]* %a, i64  ... (points-to size: 1)
    ->   %a = alloca [10 x i32], align 16 + Offset::UNKNOWN
NODE  20:   store i32 0, i32* %arrayidx5, align 4 (points-to size: 0)
NODE  21:   ret i32 0 (points-to size: 1)
    -> null + 0
NODE  22: main (points-to size: 1)
    -> main + 0
