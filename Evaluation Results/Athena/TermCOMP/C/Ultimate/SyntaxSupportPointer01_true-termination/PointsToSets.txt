NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %p = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %p = alloca i32*, align 8 + 0
NODE   4:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   5:   %call = call noalias i8* @malloc(i64 4) #2 [size: 4, heap: 1, zeroed: 0] (points-to size: 1)
    ->   %call = call noalias i8* @malloc(i64 4) #2 + 0
NODE   6:   %0 = bitcast i8* %call to i32* (points-to size: 1)
    ->   %call = call noalias i8* @malloc(i64 4) #2 + 0
NODE   7:   store i32* %0, i32** %p, align 8 (points-to size: 0)
NODE   8:   %1 = load i32*, i32** %p, align 8 (points-to size: 1)
    ->   %call = call noalias i8* @malloc(i64 4) #2 + 0
NODE   9:   %2 = load i32, i32* %1, align 4 (points-to size: 0)
NODE  10:   %3 = load i32*, i32** %p, align 8 (points-to size: 1)
    ->   %call = call noalias i8* @malloc(i64 4) #2 + 0
NODE  11:   %4 = load i32, i32* %3, align 4 (points-to size: 0)
NODE  12:   %dec = add nsw i32 %4, -1 (points-to size: 0)
NODE  13:   store i32 %dec, i32* %3, align 4 (points-to size: 0)
NODE  14:   ret i32 0 (points-to size: 1)
    -> null + 0
NODE  15: main (points-to size: 1)
    -> main + 0
