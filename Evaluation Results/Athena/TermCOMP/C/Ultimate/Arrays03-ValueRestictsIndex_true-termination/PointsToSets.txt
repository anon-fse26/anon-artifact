NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %k = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %k = alloca i32, align 4 + 0
NODE   4:   %a = alloca [1048 x i32], align 16 [size: 4192, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %a = alloca [1048 x i32], align 16 + 0
NODE   5:   %x = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %x = alloca i32, align 4 + 0
NODE   6:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   7:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   8:   store i32 %call, i32* %k, align 4 (points-to size: 0)
NODE   9:   %0 = load i32, i32* %k, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  10:   %1 = load i32, i32* %k, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  11:   ret i32 0 (points-to size: 1)
    -> null + 0
NODE  12:   %arrayidx = getelementptr inbounds [1048 x i32], [1048 x i32]* %a, i ... (points-to size: 1)
    ->   %a = alloca [1048 x i32], align 16 + 0
NODE  13:   %2 = load i32, i32* %arrayidx, align 16 (points-to size: 0)
NODE  14:   %3 = load i32, i32* %k, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  15:   %idxprom = sext i32 %3 to i64 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  16:   %arrayidx4 = getelementptr inbounds [1048 x i32], [1048 x i32]* %a,  ... (points-to size: 1)
    ->   %a = alloca [1048 x i32], align 16 + Offset::UNKNOWN
NODE  17:   %4 = load i32, i32* %arrayidx4, align 4 (points-to size: 0)
NODE  18:   %call7 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  19:   store i32 %call7, i32* %x, align 4 (points-to size: 0)
NODE  20:   %5 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  21:   %6 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  22:   %7 = load i32, i32* %k, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  23:   %sub = sub nsw i32 %6, %7 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  24:   store i32 %sub, i32* %x, align 4 (points-to size: 0)
NODE  25: main (points-to size: 1)
    -> main + 0
