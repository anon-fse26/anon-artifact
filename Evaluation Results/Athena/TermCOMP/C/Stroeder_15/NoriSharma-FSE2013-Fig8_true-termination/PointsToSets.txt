NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %c = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %c = alloca i32, align 4 + 0
NODE   4:   %u = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %u = alloca i32, align 4 + 0
NODE   5:   %v = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %v = alloca i32, align 4 + 0
NODE   6:   %w = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %w = alloca i32, align 4 + 0
NODE   7:   %x = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %x = alloca i32, align 4 + 0
NODE   8:   %y = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %y = alloca i32, align 4 + 0
NODE   9:   %z = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %z = alloca i32, align 4 + 0
NODE  10:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  11:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  12:   store i32 %call, i32* %x, align 4 (points-to size: 0)
NODE  13:   %call1 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  14:   store i32 %call1, i32* %y, align 4 (points-to size: 0)
NODE  15:   %call2 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  16:   store i32 %call2, i32* %z, align 4 (points-to size: 0)
NODE  17:   %0 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  18:   store i32 %0, i32* %u, align 4 (points-to size: 0)
NODE  19:   %1 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  20:   store i32 %1, i32* %v, align 4 (points-to size: 0)
NODE  21:   %2 = load i32, i32* %z, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  22:   store i32 %2, i32* %w, align 4 (points-to size: 0)
NODE  23:   store i32 0, i32* %c, align 4 (points-to size: 0)
NODE  24:   %3 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  25:   %4 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  26:   %5 = load i32, i32* %c, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  27:   %add = add nsw i32 %5, 1 (points-to size: 1)
    -> null + Offset::UNKNOWN
NODE  28:   store i32 %add, i32* %c, align 4 (points-to size: 0)
NODE  29:   %6 = load i32, i32* %z, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  30:   ret i32 0 (points-to size: 1)
    -> null + 0
NODE  31:   %7 = load i32, i32* %z, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  32:   %sub = sub nsw i32 %7, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  33:   store i32 %sub, i32* %z, align 4 (points-to size: 0)
NODE  34:   %8 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  35:   %9 = load i32, i32* %z, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  36:   %add4 = add nsw i32 %8, %9 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  37:   store i32 %add4, i32* %x, align 4 (points-to size: 0)
NODE  38:   %10 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  39:   %add5 = add nsw i32 %10, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  40:   store i32 %add5, i32* %y, align 4 (points-to size: 0)
NODE  41: main (points-to size: 1)
    -> main + 0
