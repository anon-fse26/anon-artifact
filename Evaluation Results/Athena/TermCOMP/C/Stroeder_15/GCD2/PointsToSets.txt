NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %x = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %x = alloca i32, align 4 + 0
NODE   4:   %y = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %y = alloca i32, align 4 + 0
NODE   5:   %tmp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp = alloca i32, align 4 + 0
NODE   6:   %xtmp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %xtmp = alloca i32, align 4 + 0
NODE   7:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   8:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   9:   store i32 %call, i32* %x, align 4 (points-to size: 0)
NODE  10:   %call1 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  11:   store i32 %call1, i32* %y, align 4 (points-to size: 0)
NODE  12:   %0 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  13:   %1 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  14:   %3 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond ], [ %cm ... (points-to size: 1)
    -> null + 0
NODE  15:   %2 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  16:   %4 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  17:   store i32 %4, i32* %tmp, align 4 (points-to size: 0)
NODE  18:   %5 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  19:   store i32 %5, i32* %xtmp, align 4 (points-to size: 0)
NODE  20:   %6 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  21:   %7 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  22:   ret i32 0 (points-to size: 1)
    -> null + 0
NODE  23:   store i32 0, i32* %y, align 4 (points-to size: 0)
NODE  24:   %12 = load i32, i32* %xtmp, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  25:   store i32 %12, i32* %y, align 4 (points-to size: 0)
NODE  26:   %13 = load i32, i32* %tmp, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  27:   store i32 %13, i32* %x, align 4 (points-to size: 0)
NODE  28:   %8 = load i32, i32* %xtmp, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  29:   %9 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  30:   %10 = load i32, i32* %xtmp, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  31:   %11 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  32:   %sub = sub nsw i32 %10, %11 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  33:   store i32 %sub, i32* %xtmp, align 4 (points-to size: 0)
NODE  34: main (points-to size: 1)
    -> main + 0
