NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %x = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %x = alloca i32, align 4 + 0
NODE   4:   %y = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %y = alloca i32, align 4 + 0
NODE   5:   %z = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %z = alloca i32, align 4 + 0
NODE   6:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   7:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   8:   store i32 %call, i32* %x, align 4 (points-to size: 0)
NODE   9:   %call1 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  10:   store i32 %call1, i32* %y, align 4 (points-to size: 0)
NODE  11:   %call2 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  12:   store i32 %call2, i32* %z, align 4 (points-to size: 0)
NODE  13:   %0 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  14:   %1 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  15:   %call3 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  16:   ret i32 0 (points-to size: 1)
    -> null + 0
NODE  17:   %2 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  18:   %add = add nsw i32 %2, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  19:   store i32 %add, i32* %x, align 4 (points-to size: 0)
NODE  20:   %3 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  21:   %4 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  22:   %add5 = add nsw i32 %3, %4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  23:   store i32 %add5, i32* %y, align 4 (points-to size: 0)
NODE  24:   %5 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  25:   %6 = load i32, i32* %z, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  26:   %sub = sub nsw i32 %5, %6 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  27:   store i32 %sub, i32* %x, align 4 (points-to size: 0)
NODE  28:   %7 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  29:   %8 = load i32, i32* %z, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  30:   %9 = load i32, i32* %z, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  31:   %mul = mul nsw i32 %8, %9 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  32:   %add6 = add nsw i32 %7, %mul (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  33:   store i32 %add6, i32* %y, align 4 (points-to size: 0)
NODE  34:   %10 = load i32, i32* %z, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  35:   %sub7 = sub nsw i32 %10, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  36:   store i32 %sub7, i32* %z, align 4 (points-to size: 0)
NODE  37: main (points-to size: 1)
    -> main + 0
