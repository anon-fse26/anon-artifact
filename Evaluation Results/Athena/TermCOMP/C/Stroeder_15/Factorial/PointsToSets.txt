NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %j = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %j = alloca i32, align 4 + 0
NODE   4:   %i = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %i = alloca i32, align 4 + 0
NODE   5:   %fac = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %fac = alloca i32, align 4 + 0
NODE   6:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   7:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   8:   store i32 %call, i32* %j, align 4 (points-to size: 0)
NODE   9:   store i32 1, i32* %i, align 4 (points-to size: 0)
NODE  10:   store i32 1, i32* %fac, align 4 (points-to size: 0)
NODE  11:   %0 = load i32, i32* %fac, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  12:   %1 = load i32, i32* %j, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  13:   %2 = load i32, i32* %fac, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  14:   %3 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  15:   %mul = mul nsw i32 %2, %3 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  16:   store i32 %mul, i32* %fac, align 4 (points-to size: 0)
NODE  17:   %4 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  18:   %add = add nsw i32 %4, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  19:   store i32 %add, i32* %i, align 4 (points-to size: 0)
NODE  20:   ret i32 0 (points-to size: 1)
    -> null + 0
NODE  21: main (points-to size: 1)
    -> main + 0
