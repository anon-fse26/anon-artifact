NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %x = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %x = alloca i32, align 4 + 0
NODE   4:   %y = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %y = alloca i32, align 4 + 0
NODE   5:   %tmp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp = alloca i32, align 4 + 0
NODE   6:   %xtmp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %xtmp = alloca i32, align 4 + 0
NODE   7:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   8:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   9:   store i32 %call, i32* %x, align 4 (points-to size: 0)
NODE  10:   %call1 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  11:   store i32 %call1, i32* %y, align 4 (points-to size: 0)
NODE  12:   %0 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  13:   %1 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  14:   %2 = phi i1 [ false, %while.cond ], [ %cmp2, %land.rhs ] (points-to size: 1)
    -> null + 0
NODE  15:   %3 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  16:   store i32 %3, i32* %tmp, align 4 (points-to size: 0)
NODE  17:   %4 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  18:   store i32 %4, i32* %xtmp, align 4 (points-to size: 0)
NODE  19:   %5 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  20:   ret i32 0 (points-to size: 1)
    -> null + 0
NODE  21:   %6 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  22:   store i32 %6, i32* %y, align 4 (points-to size: 0)
NODE  23:   %9 = load i32, i32* %xtmp, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  24:   %7 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  25:   %19 = load i32, i32* %tmp, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  26:   store i32 %19, i32* %x, align 4 (points-to size: 0)
NODE  27:   %8 = load i32, i32* %xtmp, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  28:   %sub = sub nsw i32 0, %8 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  29:   store i32 %sub, i32* %xtmp, align 4 (points-to size: 0)
NODE  30:   %10 = load i32, i32* %xtmp, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  31:   %11 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  32:   %15 = load i32, i32* %xtmp, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  33:   %12 = load i32, i32* %xtmp, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  34:   %13 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  35:   %sub12 = sub nsw i32 %12, %13 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  36:   store i32 %sub12, i32* %xtmp, align 4 (points-to size: 0)
NODE  37:   %14 = load i32, i32* %xtmp, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  38:   store i32 %14, i32* %y, align 4 (points-to size: 0)
NODE  39:   %16 = load i32, i32* %xtmp, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  40:   %17 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  41:   %sub17 = sub nsw i32 %16, %17 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  42:   store i32 %sub17, i32* %xtmp, align 4 (points-to size: 0)
NODE  43:   %18 = load i32, i32* %xtmp, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  44:   store i32 %18, i32* %y, align 4 (points-to size: 0)
NODE  45: main (points-to size: 1)
    -> main + 0
