NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %s1 = alloca i8*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %s1 = alloca i8*, align 8 + 0
NODE   4:   %s2 = alloca i8*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %s2 = alloca i8*, align 8 + 0
NODE   5:   %n = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %n = alloca i32, align 4 + 0
NODE   6:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   7:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   8:   store i32 %call, i32* %n, align 4 (points-to size: 0)
NODE   9:   %0 = load i8*, i8** %s1, align 8 (points-to size: 0)
NODE  10:   %1 = load i8*, i8** %s2, align 8 (points-to size: 0)
NODE  11:   %2 = load i32, i32* %n, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  12: <12> PSNodeType::CALL (points-to size: 0)
NODE  13: <13> PSNodeType::ENTRY (points-to size: 0)
NODE  14: i8* %s1 (points-to size: 0)
NODE  15: i8* %s2 (points-to size: 0)
NODE  16: i32 %n (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  17:   %s1.addr = alloca i8*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %s1.addr = alloca i8*, align 8 + 0
NODE  18:   %s2.addr = alloca i8*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %s2.addr = alloca i8*, align 8 + 0
NODE  19:   %n.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %n.addr = alloca i32, align 4 + 0
NODE  20:   %dst = alloca i8*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %dst = alloca i8*, align 8 + 0
NODE  21:   %src = alloca i8*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %src = alloca i8*, align 8 + 0
NODE  22:   %us = alloca i8*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %us = alloca i8*, align 8 + 0
NODE  23:   %n2 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %n2 = alloca i32, align 4 + 0
NODE  24:   store i8* %s1, i8** %s1.addr, align 8 (points-to size: 0)
NODE  25:   store i8* %s2, i8** %s2.addr, align 8 (points-to size: 0)
NODE  26:   store i32 %n, i32* %n.addr, align 4 (points-to size: 0)
NODE  27:   %0 = load i8*, i8** %s1.addr, align 8 (points-to size: 0)
NODE  28:   store i8* %0, i8** %dst, align 8 (points-to size: 0)
NODE  29:   %1 = load i8*, i8** %s2.addr, align 8 (points-to size: 0)
NODE  30:   store i8* %1, i8** %src, align 8 (points-to size: 0)
NODE  31:   %2 = load i32, i32* %n.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  32:   %3 = load i32, i32* %n.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  33:   %dec = add nsw i32 %3, -1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  34:   store i32 %dec, i32* %n.addr, align 4 (points-to size: 0)
NODE  35:   %4 = load i8*, i8** %src, align 8 (points-to size: 0)
NODE  36:   %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1 (points-to size: 0)
NODE  37:   store i8* %incdec.ptr, i8** %src, align 8 (points-to size: 0)
NODE  38:   %5 = load i8, i8* %4, align 1 (points-to size: 0)
NODE  39:   %6 = load i8*, i8** %dst, align 8 (points-to size: 0)
NODE  40:   %incdec.ptr1 = getelementptr inbounds i8, i8* %6, i32 1 (points-to size: 0)
NODE  41:   store i8* %incdec.ptr1, i8** %dst, align 8 (points-to size: 0)
NODE  42:   store i8 %5, i8* %6, align 1 (points-to size: 0)
NODE  43:   %conv = sext i8 %5 to i32 (points-to size: 0)
NODE  44:   %11 = load i8*, i8** %s1.addr, align 8 (points-to size: 0)
NODE  45:   ret i8* %11 (points-to size: 0)
NODE  46:   %7 = load i8*, i8** %dst, align 8 (points-to size: 0)
NODE  47:   store i8* %7, i8** %us, align 8 (points-to size: 0)
NODE  48:   %8 = load i32, i32* %n.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  49:   store i32 %8, i32* %n2, align 4 (points-to size: 0)
NODE  50:   %9 = load i32, i32* %n2, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  51:   %dec5 = add nsw i32 %9, -1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  52:   store i32 %dec5, i32* %n2, align 4 (points-to size: 0)
NODE  53:   %10 = load i8*, i8** %us, align 8 (points-to size: 0)
NODE  54:   %incdec.ptr9 = getelementptr inbounds i8, i8* %10, i32 1 (points-to size: 0)
NODE  55:   store i8* %incdec.ptr9, i8** %us, align 8 (points-to size: 0)
NODE  56:   store i8 0, i8* %10, align 1 (points-to size: 0)
NODE  57: cstrncpy (points-to size: 1)
    -> cstrncpy + 0
NODE  58: main (points-to size: 1)
    -> main + 0
NODE  59:   %call1 = call i8* @cstrncpy(i8* %0, i8* %1, i32 %2) (points-to size: 0)
NODE  60:   ret i32 0 (points-to size: 1)
    -> null + 0
