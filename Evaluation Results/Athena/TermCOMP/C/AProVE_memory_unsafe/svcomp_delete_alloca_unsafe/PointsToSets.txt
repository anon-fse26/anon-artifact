NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %length1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %length1 = alloca i32, align 4 + 0
NODE   4:   %x = alloca i8*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %x = alloca i8*, align 8 + 0
NODE   5:   %y = alloca i8*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %y = alloca i8*, align 8 + 0
NODE   6:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   7:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   8:   store i32 %call, i32* %length1, align 4 (points-to size: 0)
NODE   9:   %0 = load i32, i32* %length1, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  10:   store i32 1, i32* %length1, align 4 (points-to size: 0)
NODE  11:   %1 = load i32, i32* %length1, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  12:   %conv = sext i32 %1 to i64 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  13:   %mul = mul i64 %conv, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  14:   %2 = alloca i8, i64 %mul, align 16 (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
NODE  15:   store i8* %2, i8** %x, align 8 (points-to size: 0)
NODE  16:   %3 = load i8*, i8** %x, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
NODE  17:   %4 = load i8*, i8** %y, align 8 (points-to size: 0)
NODE  18:   %5 = load i8*, i8** %y, align 8 (points-to size: 0)
NODE  19:   %6 = load i8*, i8** %x, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
NODE  20:   %7 = load i32, i32* %length1, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  21:   %conv3 = sext i32 %7 to i64 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  22:   %mul4 = mul i64 %conv3, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  23:   %add.ptr = getelementptr inbounds i8, i8* %6, i64 %mul4 (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + Offset::UNKNOWN
NODE  24:   ret i32 0 (points-to size: 1)
    -> null + 0
NODE  25:   %8 = load i8*, i8** %y, align 8 (points-to size: 0)
NODE  26:   store i8 0, i8* %8, align 1 (points-to size: 0)
NODE  27:   %9 = load i8*, i8** %x, align 8 (points-to size: 2)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
    ->   %2 = alloca i8, i64 %mul, align 16 + Offset::UNKNOWN
NODE  28:   %10 = load i8, i8* %9, align 1 (points-to size: 1)
    -> null + 0
NODE  29:   %conv8 = sext i8 %10 to i32 (points-to size: 1)
    -> null + 0
NODE  30:   %11 = load i8*, i8** %x, align 8 (points-to size: 2)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
    ->   %2 = alloca i8, i64 %mul, align 16 + Offset::UNKNOWN
NODE  31:   store i8 0, i8* %11, align 1 (points-to size: 0)
NODE  32:   %12 = load i8*, i8** %x, align 8 (points-to size: 2)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
    ->   %2 = alloca i8, i64 %mul, align 16 + Offset::UNKNOWN
NODE  33:   %incdec.ptr = getelementptr inbounds i8, i8* %12, i32 1 (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + Offset::UNKNOWN
NODE  34:   store i8* %incdec.ptr, i8** %x, align 8 (points-to size: 0)
NODE  35: main (points-to size: 1)
    -> main + 0
