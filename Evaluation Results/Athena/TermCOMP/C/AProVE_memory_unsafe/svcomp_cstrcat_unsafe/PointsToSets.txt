NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %s1 = alloca i8*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %s1 = alloca i8*, align 8 + 0
NODE   4:   %s2 = alloca i8*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %s2 = alloca i8*, align 8 + 0
NODE   5:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   6:   %0 = load i8*, i8** %s1, align 8 (points-to size: 0)
NODE   7:   %1 = load i8*, i8** %s2, align 8 (points-to size: 0)
NODE   8: <8> PSNodeType::CALL (points-to size: 0)
NODE   9: <9> PSNodeType::ENTRY (points-to size: 0)
NODE  10: i8* %s1 (points-to size: 0)
NODE  11: i8* %s2 (points-to size: 0)
NODE  12:   %s1.addr = alloca i8*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %s1.addr = alloca i8*, align 8 + 0
NODE  13:   %s2.addr = alloca i8*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %s2.addr = alloca i8*, align 8 + 0
NODE  14:   %s = alloca i8*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %s = alloca i8*, align 8 + 0
NODE  15:   store i8* %s1, i8** %s1.addr, align 8 (points-to size: 0)
NODE  16:   store i8* %s2, i8** %s2.addr, align 8 (points-to size: 0)
NODE  17:   %0 = load i8*, i8** %s1.addr, align 8 (points-to size: 0)
NODE  18:   store i8* %0, i8** %s, align 8 (points-to size: 0)
NODE  19:   %1 = load i8*, i8** %s, align 8 (points-to size: 0)
NODE  20:   %2 = load i8, i8* %1, align 1 (points-to size: 0)
NODE  21:   %conv = sext i8 %2 to i32 (points-to size: 0)
NODE  22:   %3 = load i8*, i8** %s, align 8 (points-to size: 0)
NODE  23:   %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1 (points-to size: 0)
NODE  24:   store i8* %incdec.ptr, i8** %s, align 8 (points-to size: 0)
NODE  25:   %4 = load i8*, i8** %s2.addr, align 8 (points-to size: 0)
NODE  26:   %incdec.ptr3 = getelementptr inbounds i8, i8* %4, i32 1 (points-to size: 0)
NODE  27:   store i8* %incdec.ptr3, i8** %s2.addr, align 8 (points-to size: 0)
NODE  28:   %5 = load i8, i8* %4, align 1 (points-to size: 0)
NODE  29:   %6 = load i8*, i8** %s, align 8 (points-to size: 0)
NODE  30:   %incdec.ptr4 = getelementptr inbounds i8, i8* %6, i32 1 (points-to size: 0)
NODE  31:   store i8* %incdec.ptr4, i8** %s, align 8 (points-to size: 0)
NODE  32:   store i8 %5, i8* %6, align 1 (points-to size: 0)
NODE  33:   %conv5 = sext i8 %5 to i32 (points-to size: 0)
NODE  34:   %7 = load i8*, i8** %s1.addr, align 8 (points-to size: 0)
NODE  35:   ret i8* %7 (points-to size: 0)
NODE  36: cstrcat (points-to size: 1)
    -> cstrcat + 0
NODE  37: main (points-to size: 1)
    -> main + 0
NODE  38:   %call = call i8* @cstrcat(i8* %0, i8* %1) (points-to size: 0)
NODE  39:   ret i32 0 (points-to size: 1)
    -> null + 0
