NODE  23: <23> PSNodeType::ENTRY (points-to size: 0)
NODE  24:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE  25:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE  26:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  27: <27> PSNodeType::CALL (points-to size: 0)
NODE  28: <28> PSNodeType::ENTRY (points-to size: 0)
NODE  29:   store i32 0, i32* @b0_val, align 4 (points-to size: 0)
NODE  30:   store i32 2, i32* @b0_ev, align 4 (points-to size: 0)
NODE  31:   store i32 0, i32* @b0_req_up, align 4 (points-to size: 0)
NODE  32:   store i32 0, i32* @b1_val, align 4 (points-to size: 0)
NODE  33:   store i32 2, i32* @b1_ev, align 4 (points-to size: 0)
NODE  34:   store i32 0, i32* @b1_req_up, align 4 (points-to size: 0)
NODE  35:   store i32 0, i32* @d0_val, align 4 (points-to size: 0)
NODE  36:   store i32 2, i32* @d0_ev, align 4 (points-to size: 0)
NODE  37:   store i32 0, i32* @d0_req_up, align 4 (points-to size: 0)
NODE  38:   store i32 0, i32* @d1_val, align 4 (points-to size: 0)
NODE  39:   store i32 2, i32* @d1_ev, align 4 (points-to size: 0)
NODE  40:   store i32 0, i32* @d1_req_up, align 4 (points-to size: 0)
NODE  41:   store i32 0, i32* @z_val, align 4 (points-to size: 0)
NODE  42:   store i32 2, i32* @z_ev, align 4 (points-to size: 0)
NODE  43:   store i32 0, i32* @z_req_up, align 4 (points-to size: 0)
NODE  44:   store i32 1, i32* @b0_val_t, align 4 (points-to size: 0)
NODE  45:   store i32 1, i32* @b0_req_up, align 4 (points-to size: 0)
NODE  46:   store i32 1, i32* @b1_val_t, align 4 (points-to size: 0)
NODE  47:   store i32 1, i32* @b1_req_up, align 4 (points-to size: 0)
NODE  48:   store i32 1, i32* @d0_val_t, align 4 (points-to size: 0)
NODE  49:   store i32 1, i32* @d0_req_up, align 4 (points-to size: 0)
NODE  50:   store i32 1, i32* @d1_val_t, align 4 (points-to size: 0)
NODE  51:   store i32 1, i32* @d1_req_up, align 4 (points-to size: 0)
NODE  52:   store i32 0, i32* @comp_m1_i, align 4 (points-to size: 0)
NODE  53:   ret void (points-to size: 0)
NODE  54: init_model (points-to size: 1)
    -> init_model + 0
NODE  55: main (points-to size: 1)
    -> main + 0
NODE  56:   call void @init_model() (points-to size: 0)
NODE  57: <57> PSNodeType::CALL (points-to size: 0)
NODE  58: <58> PSNodeType::ENTRY (points-to size: 0)
NODE  59:   %kernel_st = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %kernel_st = alloca i32, align 4 + 0
NODE  60:   %tmp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp = alloca i32, align 4 + 0
NODE  61:   store i32 0, i32* %kernel_st, align 4 (points-to size: 0)
NODE  62: <62> PSNodeType::CALL (points-to size: 0)
NODE  63: <63> PSNodeType::ENTRY (points-to size: 0)
NODE  64:   %0 = load i32, i32* @b0_req_up, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  65: <65> PSNodeType::CALL (points-to size: 0)
NODE  66: <66> PSNodeType::ENTRY (points-to size: 0)
NODE  67:   %0 = load i32, i32* @b0_val, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  68:   %1 = load i32, i32* @b0_val_t, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  69:   %2 = load i32, i32* @b0_val_t, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  70:   store i32 %2, i32* @b0_val, align 4 (points-to size: 0)
NODE  71:   store i32 0, i32* @b0_ev, align 4 (points-to size: 0)
NODE  72:   store i32 0, i32* @b0_req_up, align 4 (points-to size: 0)
NODE  73:   ret void (points-to size: 0)
NODE  74: update_b0 (points-to size: 1)
    -> update_b0 + 0
NODE  75: update_channels (points-to size: 1)
    -> update_channels + 0
NODE  76:   call void @update_b0() (points-to size: 0)
NODE  77:   %1 = load i32, i32* @b1_req_up, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  78: <78> PSNodeType::CALL (points-to size: 0)
NODE  79: <79> PSNodeType::ENTRY (points-to size: 0)
NODE  80:   %0 = load i32, i32* @b1_val, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  81:   %1 = load i32, i32* @b1_val_t, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  82:   %2 = load i32, i32* @b1_val_t, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  83:   store i32 %2, i32* @b1_val, align 4 (points-to size: 0)
NODE  84:   store i32 0, i32* @b1_ev, align 4 (points-to size: 0)
NODE  85:   store i32 0, i32* @b1_req_up, align 4 (points-to size: 0)
NODE  86:   ret void (points-to size: 0)
NODE  87: update_b1 (points-to size: 1)
    -> update_b1 + 0
NODE  88:   call void @update_b1() (points-to size: 0)
NODE  89:   %2 = load i32, i32* @d0_req_up, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  90: <90> PSNodeType::CALL (points-to size: 0)
NODE  91: <91> PSNodeType::ENTRY (points-to size: 0)
NODE  92:   %0 = load i32, i32* @d0_val, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  93:   %1 = load i32, i32* @d0_val_t, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  94:   %2 = load i32, i32* @d0_val_t, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  95:   store i32 %2, i32* @d0_val, align 4 (points-to size: 0)
NODE  96:   store i32 0, i32* @d0_ev, align 4 (points-to size: 0)
NODE  97:   store i32 0, i32* @d0_req_up, align 4 (points-to size: 0)
NODE  98:   ret void (points-to size: 0)
NODE  99: update_d0 (points-to size: 1)
    -> update_d0 + 0
NODE 100:   call void @update_d0() (points-to size: 0)
NODE 101:   %3 = load i32, i32* @d1_req_up, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 102: <102> PSNodeType::CALL (points-to size: 0)
NODE 103: <103> PSNodeType::ENTRY (points-to size: 0)
NODE 104:   %0 = load i32, i32* @d1_val, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 105:   %1 = load i32, i32* @d1_val_t, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 106:   %2 = load i32, i32* @d1_val_t, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 107:   store i32 %2, i32* @d1_val, align 4 (points-to size: 0)
NODE 108:   store i32 0, i32* @d1_ev, align 4 (points-to size: 0)
NODE 109:   store i32 0, i32* @d1_req_up, align 4 (points-to size: 0)
NODE 110:   ret void (points-to size: 0)
NODE 111: update_d1 (points-to size: 1)
    -> update_d1 + 0
NODE 112:   call void @update_d1() (points-to size: 0)
NODE 113:   %4 = load i32, i32* @z_req_up, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 114: <114> PSNodeType::CALL (points-to size: 0)
NODE 115: <115> PSNodeType::ENTRY (points-to size: 0)
NODE 116:   %0 = load i32, i32* @z_val, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 117:   %1 = load i32, i32* @z_val_t, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 118:   %2 = load i32, i32* @z_val_t, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 119:   store i32 %2, i32* @z_val, align 4 (points-to size: 0)
NODE 120:   store i32 0, i32* @z_ev, align 4 (points-to size: 0)
NODE 121:   store i32 0, i32* @z_req_up, align 4 (points-to size: 0)
NODE 122:   ret void (points-to size: 0)
NODE 123: update_z (points-to size: 1)
    -> update_z + 0
NODE 124:   call void @update_z() (points-to size: 0)
NODE 125:   ret void (points-to size: 0)
NODE 126: start_simulation (points-to size: 1)
    -> start_simulation + 0
NODE 127:   call void @update_channels() (points-to size: 0)
NODE 128: <128> PSNodeType::CALL (points-to size: 0)
NODE 129: <129> PSNodeType::ENTRY (points-to size: 0)
NODE 130:   %0 = load i32, i32* @comp_m1_i, align 4 (points-to size: 1)
    -> null + 0
NODE 131:   store i32 0, i32* @comp_m1_st, align 4 (points-to size: 0)
NODE 132:   ret void (points-to size: 0)
NODE 133:   store i32 2, i32* @comp_m1_st, align 4 (points-to size: 0)
NODE 134: init_threads (points-to size: 1)
    -> init_threads + 0
NODE 135:   call void @init_threads() (points-to size: 0)
NODE 136: <136> PSNodeType::CALL (points-to size: 0)
NODE 137: <137> PSNodeType::ENTRY (points-to size: 0)
NODE 138:   %0 = load i32, i32* @b0_ev, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 139:   store i32 1, i32* @b0_ev, align 4 (points-to size: 0)
NODE 140:   %1 = load i32, i32* @b1_ev, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 141:   store i32 1, i32* @b1_ev, align 4 (points-to size: 0)
NODE 142:   %2 = load i32, i32* @d0_ev, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 143:   store i32 1, i32* @d0_ev, align 4 (points-to size: 0)
NODE 144:   %3 = load i32, i32* @d1_ev, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 145:   store i32 1, i32* @d1_ev, align 4 (points-to size: 0)
NODE 146:   %4 = load i32, i32* @z_ev, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 147:   store i32 1, i32* @z_ev, align 4 (points-to size: 0)
NODE 148:   ret void (points-to size: 0)
NODE 149: fire_delta_events (points-to size: 1)
    -> fire_delta_events + 0
NODE 150:   call void @fire_delta_events() (points-to size: 0)
NODE 151: <151> PSNodeType::CALL (points-to size: 0)
NODE 152: <152> PSNodeType::ENTRY (points-to size: 0)
NODE 153:   %tmp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp = alloca i32, align 4 + 0
NODE 154: <154> PSNodeType::CALL (points-to size: 0)
NODE 155: <155> PSNodeType::ENTRY (points-to size: 0)
NODE 156:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE 157:   %0 = load i32, i32* @b0_ev, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 158:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 159:   %4 = load i32, i32* %__retres1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 160:   ret i32 %4 (points-to size: 0)
NODE 161:   %1 = load i32, i32* @b1_ev, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 162:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 163:   %2 = load i32, i32* @d0_ev, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 164:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 165:   %3 = load i32, i32* @d1_ev, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 166:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 167:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE 168: is_method1_triggered (points-to size: 1)
    -> is_method1_triggered + 0
NODE 169: activate_threads (points-to size: 1)
    -> activate_threads + 0
NODE 170:   %call = call i32 @is_method1_triggered() (points-to size: 0)
NODE 171:   store i32 %call, i32* %tmp, align 4 (points-to size: 0)
NODE 172:   %0 = load i32, i32* %tmp, align 4 (points-to size: 0)
NODE 173:   store i32 0, i32* @comp_m1_st, align 4 (points-to size: 0)
NODE 174:   ret void (points-to size: 0)
NODE 175:   call void @activate_threads() (points-to size: 0)
NODE 176: <176> PSNodeType::CALL (points-to size: 0)
NODE 177: <177> PSNodeType::ENTRY (points-to size: 0)
NODE 178:   %0 = load i32, i32* @b0_ev, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 179:   store i32 2, i32* @b0_ev, align 4 (points-to size: 0)
NODE 180:   %1 = load i32, i32* @b1_ev, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 181:   store i32 2, i32* @b1_ev, align 4 (points-to size: 0)
NODE 182:   %2 = load i32, i32* @d0_ev, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 183:   store i32 2, i32* @d0_ev, align 4 (points-to size: 0)
NODE 184:   %3 = load i32, i32* @d1_ev, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 185:   store i32 2, i32* @d1_ev, align 4 (points-to size: 0)
NODE 186:   %4 = load i32, i32* @z_ev, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 187:   store i32 2, i32* @z_ev, align 4 (points-to size: 0)
NODE 188:   ret void (points-to size: 0)
NODE 189: reset_delta_events (points-to size: 1)
    -> reset_delta_events + 0
NODE 190:   call void @reset_delta_events() (points-to size: 0)
NODE 191:   store i32 1, i32* %kernel_st, align 4 (points-to size: 0)
NODE 192: <192> PSNodeType::CALL (points-to size: 0)
NODE 193: <193> PSNodeType::ENTRY (points-to size: 0)
NODE 194:   %tmp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp = alloca i32, align 4 + 0
NODE 195:   %tmp___0 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp___0 = alloca i32, align 4 + 0
NODE 196: <196> PSNodeType::CALL (points-to size: 0)
NODE 197: <197> PSNodeType::ENTRY (points-to size: 0)
NODE 198:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE 199:   %0 = load i32, i32* @comp_m1_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 200:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 201:   %1 = load i32, i32* %__retres1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 202:   ret i32 %1 (points-to size: 0)
NODE 203:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE 204: exists_runnable_thread (points-to size: 1)
    -> exists_runnable_thread + 0
NODE 205: eval (points-to size: 1)
    -> eval + 0
NODE 206:   %call = call i32 @exists_runnable_thread() (points-to size: 0)
NODE 207:   store i32 %call, i32* %tmp___0, align 4 (points-to size: 0)
NODE 208:   %0 = load i32, i32* %tmp___0, align 4 (points-to size: 0)
NODE 209:   %1 = load i32, i32* @comp_m1_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 210:   ret void (points-to size: 0)
NODE 211:   %call2 = call i32 (...) @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 212:   store i32 %call2, i32* %tmp, align 4 (points-to size: 0)
NODE 213:   %2 = load i32, i32* %tmp, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 214:   store i32 1, i32* @comp_m1_st, align 4 (points-to size: 0)
NODE 215: <215> PSNodeType::CALL (points-to size: 0)
NODE 216: <216> PSNodeType::ENTRY (points-to size: 0)
NODE 217:   %s1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %s1 = alloca i32, align 4 + 0
NODE 218:   %s2 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %s2 = alloca i32, align 4 + 0
NODE 219:   %s3 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %s3 = alloca i32, align 4 + 0
NODE 220:   %0 = load i32, i32* @b0_val, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 221:   %1 = load i32, i32* @d1_val, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 222:   %2 = load i32, i32* @d0_val, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 223:   store i32 1, i32* %s1, align 4 (points-to size: 0)
NODE 224:   store i32 0, i32* %s1, align 4 (points-to size: 0)
NODE 225:   store i32 1, i32* %s1, align 4 (points-to size: 0)
NODE 226:   %3 = load i32, i32* @b1_val, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 227:   %4 = load i32, i32* %s2, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 228:   store i32 1, i32* %s2, align 4 (points-to size: 0)
NODE 229:   store i32 0, i32* %s2, align 4 (points-to size: 0)
NODE 230:   store i32 1, i32* %s2, align 4 (points-to size: 0)
NODE 231:   store i32 0, i32* %s3, align 4 (points-to size: 0)
NODE 232:   %6 = load i32, i32* %s2, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 233:   %5 = load i32, i32* %s1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 234:   %7 = load i32, i32* %s1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 235:   %8 = load i32, i32* %s2, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 236:   store i32 0, i32* %s2, align 4 (points-to size: 0)
NODE 237:   store i32 0, i32* %s3, align 4 (points-to size: 0)
NODE 238:   store i32 1, i32* %s3, align 4 (points-to size: 0)
NODE 239:   store i32 1, i32* %s2, align 4 (points-to size: 0)
NODE 240:   store i32 0, i32* %s2, align 4 (points-to size: 0)
NODE 241:   store i32 0, i32* @z_val_t, align 4 (points-to size: 0)
NODE 242:   store i32 1, i32* @z_req_up, align 4 (points-to size: 0)
NODE 243:   store i32 2, i32* @comp_m1_st, align 4 (points-to size: 0)
NODE 244:   ret void (points-to size: 0)
NODE 245:   %9 = load i32, i32* %s3, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 246:   store i32 0, i32* @z_val_t, align 4 (points-to size: 0)
NODE 247:   store i32 1, i32* @z_val_t, align 4 (points-to size: 0)
NODE 248: method1 (points-to size: 1)
    -> method1 + 0
NODE 249:   call void @method1() (points-to size: 0)
NODE 250:   call void @eval() (points-to size: 0)
NODE 251:   store i32 2, i32* %kernel_st, align 4 (points-to size: 0)
NODE 252: <252> PSNodeType::CALL (points-to size: 0)
NODE 253:   call void @update_channels() (points-to size: 0)
NODE 254:   store i32 3, i32* %kernel_st, align 4 (points-to size: 0)
NODE 255: <255> PSNodeType::CALL (points-to size: 0)
NODE 256:   call void @fire_delta_events() (points-to size: 0)
NODE 257: <257> PSNodeType::CALL (points-to size: 0)
NODE 258:   call void @activate_threads() (points-to size: 0)
NODE 259: <259> PSNodeType::CALL (points-to size: 0)
NODE 260:   call void @reset_delta_events() (points-to size: 0)
NODE 261: <261> PSNodeType::CALL (points-to size: 0)
NODE 262: <262> PSNodeType::ENTRY (points-to size: 0)
NODE 263:   %tmp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp = alloca i32, align 4 + 0
NODE 264:   %__retres2 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres2 = alloca i32, align 4 + 0
NODE 265: <265> PSNodeType::CALL (points-to size: 0)
NODE 266: stop_simulation (points-to size: 1)
    -> stop_simulation + 0
NODE 267:   %call = call i32 @exists_runnable_thread() (points-to size: 0)
NODE 268:   store i32 %call, i32* %tmp, align 4 (points-to size: 0)
NODE 269:   %0 = load i32, i32* %tmp, align 4 (points-to size: 0)
NODE 270:   store i32 0, i32* %__retres2, align 4 (points-to size: 0)
NODE 271:   %1 = load i32, i32* %__retres2, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 272:   ret i32 %1 (points-to size: 0)
NODE 273:   store i32 1, i32* %__retres2, align 4 (points-to size: 0)
NODE 274:   %call = call i32 @stop_simulation() (points-to size: 0)
NODE 275:   store i32 %call, i32* %tmp, align 4 (points-to size: 0)
NODE 276:   %0 = load i32, i32* %tmp, align 4 (points-to size: 0)
NODE 277:   ret void (points-to size: 0)
NODE 278:   call void @start_simulation() (points-to size: 0)
NODE 279:   %0 = load i32, i32* @z_val, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 280:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE 281:   %1 = load i32, i32* %__retres1, align 4 (points-to size: 1)
    -> null + 0
NODE 282:   ret i32 %1 (points-to size: 0)
NODE 283: <283> PSNodeType::CALL (points-to size: 0)
NODE 284: <284> PSNodeType::ENTRY (points-to size: 0)
NODE 285: error (points-to size: 1)
    -> error + 0
NODE 286:   call void @error() (points-to size: 0)
