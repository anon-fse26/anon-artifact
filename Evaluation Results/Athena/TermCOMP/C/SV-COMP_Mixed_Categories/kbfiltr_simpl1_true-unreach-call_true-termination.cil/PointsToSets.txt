NODE  19: <19> PSNodeType::ENTRY (points-to size: 0)
NODE  20:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE  21:   %status = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %status = alloca i32, align 4 + 0
NODE  22:   %irp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %irp = alloca i32, align 4 + 0
NODE  23:   %pirp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %pirp = alloca i32, align 4 + 0
NODE  24:   %pirp__IoStatus__Status = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %pirp__IoStatus__Status = alloca i32, align 4 + 0
NODE  25:   %irp_choice = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %irp_choice = alloca i32, align 4 + 0
NODE  26:   %devobj = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %devobj = alloca i32, align 4 + 0
NODE  27:   %__cil_tmp8 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__cil_tmp8 = alloca i32, align 4 + 0
NODE  28:   %tmp_ndt_1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp_ndt_1 = alloca i32, align 4 + 0
NODE  29:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  30:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  31:   store i32 %call, i32* %irp, align 4 (points-to size: 0)
NODE  32:   %call1 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  33:   store i32 %call1, i32* %irp_choice, align 4 (points-to size: 0)
NODE  34:   %call2 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  35:   store i32 %call2, i32* %devobj, align 4 (points-to size: 0)
NODE  36:   store i32 0, i32* @KernelMode, align 4 (points-to size: 0)
NODE  37:   store i32 0, i32* @Executive, align 4 (points-to size: 0)
NODE  38:   store i32 0, i32* @s, align 4 (points-to size: 0)
NODE  39:   store i32 0, i32* @UNLOADED, align 4 (points-to size: 0)
NODE  40:   store i32 0, i32* @NP, align 4 (points-to size: 0)
NODE  41:   store i32 0, i32* @DC, align 4 (points-to size: 0)
NODE  42:   store i32 0, i32* @SKIP1, align 4 (points-to size: 0)
NODE  43:   store i32 0, i32* @SKIP2, align 4 (points-to size: 0)
NODE  44:   store i32 0, i32* @MPR1, align 4 (points-to size: 0)
NODE  45:   store i32 0, i32* @MPR3, align 4 (points-to size: 0)
NODE  46:   store i32 0, i32* @IPC, align 4 (points-to size: 0)
NODE  47:   store i32 0, i32* @pended, align 4 (points-to size: 0)
NODE  48:   store i32 0, i32* @compFptr, align 4 (points-to size: 0)
NODE  49:   store i32 0, i32* @compRegistered, align 4 (points-to size: 0)
NODE  50:   store i32 0, i32* @lowerDriverReturn, align 4 (points-to size: 0)
NODE  51:   store i32 0, i32* @setEventCalled, align 4 (points-to size: 0)
NODE  52:   store i32 0, i32* @customIrp, align 4 (points-to size: 0)
NODE  53:   store i32 0, i32* @myStatus, align 4 (points-to size: 0)
NODE  54:   store i32 0, i32* %status, align 4 (points-to size: 0)
NODE  55:   %0 = load i32, i32* %irp, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  56:   store i32 %0, i32* %pirp, align 4 (points-to size: 0)
NODE  57: <57> PSNodeType::CALL (points-to size: 0)
NODE  58: <58> PSNodeType::ENTRY (points-to size: 0)
NODE  59:   store i32 0, i32* @UNLOADED, align 4 (points-to size: 0)
NODE  60:   store i32 1, i32* @NP, align 4 (points-to size: 0)
NODE  61:   store i32 2, i32* @DC, align 4 (points-to size: 0)
NODE  62:   store i32 3, i32* @SKIP1, align 4 (points-to size: 0)
NODE  63:   store i32 4, i32* @SKIP2, align 4 (points-to size: 0)
NODE  64:   store i32 5, i32* @MPR1, align 4 (points-to size: 0)
NODE  65:   store i32 6, i32* @MPR3, align 4 (points-to size: 0)
NODE  66:   store i32 7, i32* @IPC, align 4 (points-to size: 0)
NODE  67:   %0 = load i32, i32* @UNLOADED, align 4 (points-to size: 1)
    -> null + 0
NODE  68:   store i32 %0, i32* @s, align 4 (points-to size: 0)
NODE  69:   store i32 0, i32* @pended, align 4 (points-to size: 0)
NODE  70:   store i32 0, i32* @compFptr, align 4 (points-to size: 0)
NODE  71:   store i32 0, i32* @compRegistered, align 4 (points-to size: 0)
NODE  72:   store i32 0, i32* @lowerDriverReturn, align 4 (points-to size: 0)
NODE  73:   store i32 0, i32* @setEventCalled, align 4 (points-to size: 0)
NODE  74:   store i32 0, i32* @customIrp, align 4 (points-to size: 0)
NODE  75:   ret void (points-to size: 0)
NODE  76: _BLAST_init (points-to size: 1)
    -> _BLAST_init + 0
NODE  77: main (points-to size: 1)
    -> main + 0
NODE  78:   call void @_BLAST_init() (points-to size: 0)
NODE  79:   %1 = load i32, i32* %status, align 4 (points-to size: 1)
    -> null + 0
NODE  80:   %2 = load i32, i32* @NP, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  81:   store i32 %2, i32* @s, align 4 (points-to size: 0)
NODE  82:   store i32 0, i32* @customIrp, align 4 (points-to size: 0)
NODE  83:   %3 = load i32, i32* @customIrp, align 4 (points-to size: 1)
    -> null + 0
NODE  84:   store i32 %3, i32* @setEventCalled, align 4 (points-to size: 0)
NODE  85:   %4 = load i32, i32* @setEventCalled, align 4 (points-to size: 1)
    -> null + 0
NODE  86:   store i32 %4, i32* @lowerDriverReturn, align 4 (points-to size: 0)
NODE  87:   %5 = load i32, i32* @lowerDriverReturn, align 4 (points-to size: 1)
    -> null + 0
NODE  88:   store i32 %5, i32* @compRegistered, align 4 (points-to size: 0)
NODE  89:   %6 = load i32, i32* @compRegistered, align 4 (points-to size: 1)
    -> null + 0
NODE  90:   store i32 %6, i32* @pended, align 4 (points-to size: 0)
NODE  91:   store i32 0, i32* %pirp__IoStatus__Status, align 4 (points-to size: 0)
NODE  92:   store i32 0, i32* @myStatus, align 4 (points-to size: 0)
NODE  93:   %7 = load i32, i32* %irp_choice, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  94:   %14 = load i32, i32* @pended, align 4 (points-to size: 1)
    -> null + 0
NODE  95:   %39 = load i32, i32* %retval, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  96:   ret i32 %39 (points-to size: 0)
NODE  97:   store i32 -1073741637, i32* %pirp__IoStatus__Status, align 4 (points-to size: 0)
NODE  98:   store i32 -1073741637, i32* @myStatus, align 4 (points-to size: 0)
NODE  99: <99> PSNodeType::CALL (points-to size: 0)
NODE 100: <100> PSNodeType::ENTRY (points-to size: 0)
NODE 101:   %0 = load i32, i32* @NP, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 102:   store i32 %0, i32* @s, align 4 (points-to size: 0)
NODE 103:   store i32 0, i32* @pended, align 4 (points-to size: 0)
NODE 104:   store i32 0, i32* @compFptr, align 4 (points-to size: 0)
NODE 105:   store i32 0, i32* @compRegistered, align 4 (points-to size: 0)
NODE 106:   store i32 0, i32* @lowerDriverReturn, align 4 (points-to size: 0)
NODE 107:   store i32 0, i32* @setEventCalled, align 4 (points-to size: 0)
NODE 108:   store i32 0, i32* @customIrp, align 4 (points-to size: 0)
NODE 109:   ret void (points-to size: 0)
NODE 110: stub_driver_init (points-to size: 1)
    -> stub_driver_init + 0
NODE 111:   call void @stub_driver_init() (points-to size: 0)
NODE 112:   %8 = load i32, i32* %status, align 4 (points-to size: 1)
    -> null + 0
NODE 113:   %15 = load i32, i32* @s, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 114:   %16 = load i32, i32* @NP, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 115:   %38 = load i32, i32* %status, align 4 (points-to size: 1)
    -> null + 0
NODE 116:   store i32 %38, i32* %retval, align 4 (points-to size: 0)
NODE 117:   %18 = load i32, i32* @pended, align 4 (points-to size: 1)
    -> null + 0
NODE 118:   store i32 1, i32* %__cil_tmp8, align 4 (points-to size: 0)
NODE 119:   %9 = load i32, i32* %__cil_tmp8, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 120:   store i32 0, i32* %__cil_tmp8, align 4 (points-to size: 0)
NODE 121:   %17 = load i32, i32* @NP, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 122:   store i32 %17, i32* @s, align 4 (points-to size: 0)
NODE 123:   %19 = load i32, i32* @s, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 124:   %20 = load i32, i32* @MPR3, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 125:   %22 = load i32, i32* @s, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 126:   %23 = load i32, i32* @UNLOADED, align 4 (points-to size: 1)
    -> null + 0
NODE 127:   %call10 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 128:   store i32 %call10, i32* %tmp_ndt_1, align 4 (points-to size: 0)
NODE 129:   %10 = load i32, i32* %tmp_ndt_1, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 130:   store i32 -1, i32* %retval, align 4 (points-to size: 0)
NODE 131:   %21 = load i32, i32* @MPR3, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 132:   store i32 %21, i32* @s, align 4 (points-to size: 0)
NODE 133:   %24 = load i32, i32* %status, align 4 (points-to size: 1)
    -> null + 0
NODE 134:   %25 = load i32, i32* @s, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 135:   %26 = load i32, i32* @SKIP2, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 136:   %12 = load i32, i32* %devobj, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 137:   %13 = load i32, i32* %pirp, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 138: <138> PSNodeType::CALL (points-to size: 0)
NODE 139: <139> PSNodeType::ENTRY (points-to size: 0)
NODE 140: i32 %DeviceObject (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 141: i32 %Irp (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 142:   %DeviceObject.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %DeviceObject.addr = alloca i32, align 4 + 0
NODE 143:   %Irp.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %Irp.addr = alloca i32, align 4 + 0
NODE 144:   %devExt = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %devExt = alloca i32, align 4 + 0
NODE 145:   %irpStack = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %irpStack = alloca i32, align 4 + 0
NODE 146:   %status = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %status = alloca i32, align 4 + 0
NODE 147:   %event = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %event = alloca i32, align 4 + 0
NODE 148:   %DeviceObject__DeviceExtension = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %DeviceObject__DeviceExtension = alloca i32, align 4 + 0
NODE 149:   %Irp__Tail__Overlay__CurrentStackLocation = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %Irp__Tail__Overlay__CurrentStackLocation = alloca i32, align 4 + 0
NODE 150:   %irpStack__MinorFunction = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %irpStack__MinorFunction = alloca i32, align 4 + 0
NODE 151:   %devExt__TopOfStack = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %devExt__TopOfStack = alloca i32, align 4 + 0
NODE 152:   %devExt__Started = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %devExt__Started = alloca i32, align 4 + 0
NODE 153:   %devExt__Removed = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %devExt__Removed = alloca i32, align 4 + 0
NODE 154:   %devExt__SurpriseRemoved = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %devExt__SurpriseRemoved = alloca i32, align 4 + 0
NODE 155:   %Irp__IoStatus__Status = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %Irp__IoStatus__Status = alloca i32, align 4 + 0
NODE 156:   %Irp__IoStatus__Information = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %Irp__IoStatus__Information = alloca i32, align 4 + 0
NODE 157:   %Irp__CurrentLocation = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %Irp__CurrentLocation = alloca i32, align 4 + 0
NODE 158:   %irpSp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %irpSp = alloca i32, align 4 + 0
NODE 159:   %nextIrpSp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %nextIrpSp = alloca i32, align 4 + 0
NODE 160:   %nextIrpSp__Control = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %nextIrpSp__Control = alloca i32, align 4 + 0
NODE 161:   %irpSp___0 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %irpSp___0 = alloca i32, align 4 + 0
NODE 162:   %irpSp__Context = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %irpSp__Context = alloca i32, align 4 + 0
NODE 163:   %irpSp__Control = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %irpSp__Control = alloca i32, align 4 + 0
NODE 164:   %__cil_tmp23 = alloca i64, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__cil_tmp23 = alloca i64, align 8 + 0
NODE 165:   store i32 %DeviceObject, i32* %DeviceObject.addr, align 4 (points-to size: 0)
NODE 166:   store i32 %Irp, i32* %Irp.addr, align 4 (points-to size: 0)
NODE 167:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 168:   store i32 %call, i32* %event, align 4 (points-to size: 0)
NODE 169:   %call1 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 170:   store i32 %call1, i32* %DeviceObject__DeviceExtension, align 4 (points-to size: 0)
NODE 171:   %call2 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 172:   store i32 %call2, i32* %Irp__Tail__Overlay__CurrentStackLocation, al ... (points-to size: 0)
NODE 173:   %call3 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 174:   store i32 %call3, i32* %irpStack__MinorFunction, align 4 (points-to size: 0)
NODE 175:   %call4 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 176:   store i32 %call4, i32* %devExt__TopOfStack, align 4 (points-to size: 0)
NODE 177:   %call5 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 178:   store i32 %call5, i32* %Irp__CurrentLocation, align 4 (points-to size: 0)
NODE 179:   store i32 0, i32* %status, align 4 (points-to size: 0)
NODE 180:   %0 = load i32, i32* %DeviceObject__DeviceExtension, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 181:   store i32 %0, i32* %devExt, align 4 (points-to size: 0)
NODE 182:   %1 = load i32, i32* %Irp__Tail__Overlay__CurrentStackLocation, align ... (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 183:   store i32 %1, i32* %irpStack, align 4 (points-to size: 0)
NODE 184:   %2 = load i32, i32* %irpStack__MinorFunction, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 185:   %3 = load i32, i32* %irpStack__MinorFunction, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 186:   %24 = load i32, i32* %Irp__Tail__Overlay__CurrentStackLocation, alig ... (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 187:   store i32 %24, i32* %irpSp, align 4 (points-to size: 0)
NODE 188:   %25 = load i32, i32* %Irp__Tail__Overlay__CurrentStackLocation, alig ... (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 189:   %sub = sub nsw i32 %25, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 190:   store i32 %sub, i32* %nextIrpSp, align 4 (points-to size: 0)
NODE 191:   store i32 0, i32* %nextIrpSp__Control, align 4 (points-to size: 0)
NODE 192:   %26 = load i32, i32* @s, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 193:   %27 = load i32, i32* @NP, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 194:   %4 = load i32, i32* %irpStack__MinorFunction, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 195: <195> PSNodeType::CALL (points-to size: 0)
NODE 196: <196> PSNodeType::ENTRY (points-to size: 0)
NODE 197: errorFn (points-to size: 1)
    -> errorFn + 0
NODE 198: KbFilter_PnP (points-to size: 1)
    -> KbFilter_PnP + 0
NODE 199:   call void @errorFn() (points-to size: 0)
NODE 200:   %29 = load i32, i32* %Irp__Tail__Overlay__CurrentStackLocation, alig ... (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 201:   %sub74 = sub nsw i32 %29, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 202:   store i32 %sub74, i32* %irpSp___0, align 4 (points-to size: 0)
NODE 203:   store i32 224, i32* %irpSp__Control, align 4 (points-to size: 0)
NODE 204:   %30 = load i32, i32* %devExt__TopOfStack, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 205:   %31 = load i32, i32* %Irp.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 206: <206> PSNodeType::CALL (points-to size: 0)
NODE 207: <207> PSNodeType::ENTRY (points-to size: 0)
NODE 208: i32 %DeviceObject (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 209: i32 %Irp (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 210:   %DeviceObject.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %DeviceObject.addr = alloca i32, align 4 + 0
NODE 211:   %Irp.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %Irp.addr = alloca i32, align 4 + 0
NODE 212:   %returnVal2 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %returnVal2 = alloca i32, align 4 + 0
NODE 213:   %compRetStatus = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %compRetStatus = alloca i32, align 4 + 0
NODE 214:   %lcontext = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %lcontext = alloca i32, align 4 + 0
NODE 215:   %__cil_tmp7 = alloca i64, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__cil_tmp7 = alloca i64, align 8 + 0
NODE 216:   %tmp_ndt_2 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp_ndt_2 = alloca i32, align 4 + 0
NODE 217:   %tmp_ndt_3 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp_ndt_3 = alloca i32, align 4 + 0
NODE 218:   store i32 %DeviceObject, i32* %DeviceObject.addr, align 4 (points-to size: 0)
NODE 219:   store i32 %Irp, i32* %Irp.addr, align 4 (points-to size: 0)
NODE 220:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 221:   store i32 %call, i32* %lcontext, align 4 (points-to size: 0)
NODE 222:   %0 = load i32, i32* @compRegistered, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 223:   %1 = load i32, i32* %DeviceObject.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 224:   %2 = load i32, i32* %Irp.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 225:   %3 = load i32, i32* %lcontext, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 226: <226> PSNodeType::CALL (points-to size: 0)
NODE 227: <227> PSNodeType::ENTRY (points-to size: 0)
NODE 228: i32 %DeviceObject (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 229: i32 %Irp (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 230: i32 %Context (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 231:   %DeviceObject.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %DeviceObject.addr = alloca i32, align 4 + 0
NODE 232:   %Irp.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %Irp.addr = alloca i32, align 4 + 0
NODE 233:   %Context.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %Context.addr = alloca i32, align 4 + 0
NODE 234:   %event = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %event = alloca i32, align 4 + 0
NODE 235:   store i32 %DeviceObject, i32* %DeviceObject.addr, align 4 (points-to size: 0)
NODE 236:   store i32 %Irp, i32* %Irp.addr, align 4 (points-to size: 0)
NODE 237:   store i32 %Context, i32* %Context.addr, align 4 (points-to size: 0)
NODE 238:   %0 = load i32, i32* %Context.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 239:   store i32 %0, i32* %event, align 4 (points-to size: 0)
NODE 240:   %1 = load i32, i32* %event, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 241: <241> PSNodeType::CALL (points-to size: 0)
NODE 242: <242> PSNodeType::ENTRY (points-to size: 0)
NODE 243: i32 %Event (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 244: i32 %Increment (points-to size: 1)
    -> null + 0
NODE 245: i32 %Wait (points-to size: 1)
    -> null + 0
NODE 246:   %Event.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %Event.addr = alloca i32, align 4 + 0
NODE 247:   %Increment.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %Increment.addr = alloca i32, align 4 + 0
NODE 248:   %Wait.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %Wait.addr = alloca i32, align 4 + 0
NODE 249:   %l = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %l = alloca i32, align 4 + 0
NODE 250:   store i32 %Event, i32* %Event.addr, align 4 (points-to size: 0)
NODE 251:   store i32 %Increment, i32* %Increment.addr, align 4 (points-to size: 0)
NODE 252:   store i32 %Wait, i32* %Wait.addr, align 4 (points-to size: 0)
NODE 253:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 254:   store i32 %call, i32* %l, align 4 (points-to size: 0)
NODE 255:   store i32 1, i32* @setEventCalled, align 4 (points-to size: 0)
NODE 256:   %0 = load i32, i32* %l, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 257:   ret i32 %0 (points-to size: 0)
NODE 258: KeSetEvent (points-to size: 1)
    -> KeSetEvent + 0
NODE 259: KbFilter_Complete (points-to size: 1)
    -> KbFilter_Complete + 0
NODE 260:   %call = call i32 @KeSetEvent(i32 %1, i32 0, i32 0) (points-to size: 0)
NODE 261:   ret i32 -1073741802 (points-to size: 0)
NODE 262: IofCallDriver (points-to size: 1)
    -> IofCallDriver + 0
NODE 263:   %call1 = call i32 @KbFilter_Complete(i32 %1, i32 %2, i32 %3) (points-to size: 0)
NODE 264:   store i32 %call1, i32* %compRetStatus, align 4 (points-to size: 0)
NODE 265: <265> PSNodeType::CALL (points-to size: 0)
NODE 266: <266> PSNodeType::ENTRY (points-to size: 0)
NODE 267:   %0 = load i32, i32* @s, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 268:   %1 = load i32, i32* @NP, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 269:   %2 = load i32, i32* @MPR1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 270:   store i32 %2, i32* @s, align 4 (points-to size: 0)
NODE 271:   ret void (points-to size: 0)
NODE 272: <272> PSNodeType::CALL (points-to size: 0)
NODE 273: stubMoreProcessingRequired (points-to size: 1)
    -> stubMoreProcessingRequired + 0
NODE 274:   call void @errorFn() (points-to size: 0)
NODE 275:   call void @stubMoreProcessingRequired() (points-to size: 0)
NODE 276:   %call2 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 277:   store i32 %call2, i32* %tmp_ndt_2, align 4 (points-to size: 0)
NODE 278:   %4 = load i32, i32* %tmp_ndt_2, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 279:   %call4 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 280:   store i32 %call4, i32* %tmp_ndt_3, align 4 (points-to size: 0)
NODE 281:   %5 = load i32, i32* %tmp_ndt_3, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 282:   store i32 0, i32* %returnVal2, align 4 (points-to size: 0)
NODE 283:   store i32 -1073741823, i32* %returnVal2, align 4 (points-to size: 0)
NODE 284:   store i32 259, i32* %returnVal2, align 4 (points-to size: 0)
NODE 285:   %7 = load i32, i32* @s, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 286:   %8 = load i32, i32* @NP, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 287:   %9 = load i32, i32* @IPC, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 288:   store i32 %9, i32* @s, align 4 (points-to size: 0)
NODE 289:   %10 = load i32, i32* %returnVal2, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 290:   store i32 %10, i32* @lowerDriverReturn, align 4 (points-to size: 0)
NODE 291:   %22 = load i32, i32* %returnVal2, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 292:   ret i32 %22 (points-to size: 0)
NODE 293:   %11 = load i32, i32* @s, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 294:   %12 = load i32, i32* @MPR1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 295:   %13 = load i32, i32* %returnVal2, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 296:   %18 = load i32, i32* @s, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 297:   %19 = load i32, i32* @SKIP1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 298:   %14 = load i32, i32* @MPR3, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 299:   store i32 %14, i32* @s, align 4 (points-to size: 0)
NODE 300:   %15 = load i32, i32* %returnVal2, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 301:   store i32 %15, i32* @lowerDriverReturn, align 4 (points-to size: 0)
NODE 302:   %16 = load i32, i32* @NP, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 303:   store i32 %16, i32* @s, align 4 (points-to size: 0)
NODE 304:   %17 = load i32, i32* %returnVal2, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 305:   store i32 %17, i32* @lowerDriverReturn, align 4 (points-to size: 0)
NODE 306:   %20 = load i32, i32* @SKIP2, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 307:   store i32 %20, i32* @s, align 4 (points-to size: 0)
NODE 308:   %21 = load i32, i32* %returnVal2, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 309:   store i32 %21, i32* @lowerDriverReturn, align 4 (points-to size: 0)
NODE 310: <310> PSNodeType::CALL (points-to size: 0)
NODE 311:   call void @errorFn() (points-to size: 0)
NODE 312:   %call75 = call i32 @IofCallDriver(i32 %30, i32 %31) (points-to size: 0)
NODE 313:   store i32 %call75, i32* %status, align 4 (points-to size: 0)
NODE 314:   %32 = load i32, i32* %status, align 4 (points-to size: 0)
NODE 315:   %conv = sext i32 %32 to i64 (points-to size: 0)
NODE 316:   store i64 %conv, i64* %__cil_tmp23, align 8 (points-to size: 0)
NODE 317:   %33 = load i64, i64* %__cil_tmp23, align 8 (points-to size: 0)
NODE 318:   %28 = load i32, i32* @compRegistered, align 4 (points-to size: 1)
    -> null + 0
NODE 319:   store i32 1, i32* %devExt__SurpriseRemoved, align 4 (points-to size: 0)
NODE 320:   %42 = load i32, i32* @s, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 321:   %43 = load i32, i32* @NP, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 322:   %5 = load i32, i32* %irpStack__MinorFunction, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 323:   %34 = load i32, i32* %event, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 324:   %35 = load i32, i32* @Executive, align 4 (points-to size: 1)
    -> null + 0
NODE 325:   %36 = load i32, i32* @KernelMode, align 4 (points-to size: 1)
    -> null + 0
NODE 326: <326> PSNodeType::CALL (points-to size: 0)
NODE 327: <327> PSNodeType::ENTRY (points-to size: 0)
NODE 328: i32 %Object (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 329: i32 %WaitReason (points-to size: 1)
    -> null + 0
NODE 330: i32 %WaitMode (points-to size: 1)
    -> null + 0
NODE 331: i32 %Alertable (points-to size: 1)
    -> null + 0
NODE 332: i32 %Timeout (points-to size: 1)
    -> null + 0
NODE 333:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE 334:   %Object.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %Object.addr = alloca i32, align 4 + 0
NODE 335:   %WaitReason.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %WaitReason.addr = alloca i32, align 4 + 0
NODE 336:   %WaitMode.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %WaitMode.addr = alloca i32, align 4 + 0
NODE 337:   %Alertable.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %Alertable.addr = alloca i32, align 4 + 0
NODE 338:   %Timeout.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %Timeout.addr = alloca i32, align 4 + 0
NODE 339:   %tmp_ndt_4 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp_ndt_4 = alloca i32, align 4 + 0
NODE 340:   store i32 %Object, i32* %Object.addr, align 4 (points-to size: 0)
NODE 341:   store i32 %WaitReason, i32* %WaitReason.addr, align 4 (points-to size: 0)
NODE 342:   store i32 %WaitMode, i32* %WaitMode.addr, align 4 (points-to size: 0)
NODE 343:   store i32 %Alertable, i32* %Alertable.addr, align 4 (points-to size: 0)
NODE 344:   store i32 %Timeout, i32* %Timeout.addr, align 4 (points-to size: 0)
NODE 345:   %0 = load i32, i32* @s, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 346:   %1 = load i32, i32* @MPR3, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 347:   %2 = load i32, i32* @setEventCalled, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 348:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 349:   store i32 %call, i32* %tmp_ndt_4, align 4 (points-to size: 0)
NODE 350:   %8 = load i32, i32* %tmp_ndt_4, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 351:   %4 = load i32, i32* @customIrp, align 4 (points-to size: 1)
    -> null + 0
NODE 352:   %3 = load i32, i32* @NP, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 353:   store i32 %3, i32* @s, align 4 (points-to size: 0)
NODE 354:   store i32 0, i32* @setEventCalled, align 4 (points-to size: 0)
NODE 355:   %10 = load i32, i32* %retval, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 356:   ret i32 %10 (points-to size: 0)
NODE 357:   %5 = load i32, i32* @NP, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 358:   store i32 %5, i32* @s, align 4 (points-to size: 0)
NODE 359:   store i32 0, i32* @customIrp, align 4 (points-to size: 0)
NODE 360:   %6 = load i32, i32* @s, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 361:   %7 = load i32, i32* @MPR3, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 362:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE 363:   store i32 -1073741823, i32* %retval, align 4 (points-to size: 0)
NODE 364: <364> PSNodeType::CALL (points-to size: 0)
NODE 365: KeWaitForSingleObject (points-to size: 1)
    -> KeWaitForSingleObject + 0
NODE 366:   call void @errorFn() (points-to size: 0)
NODE 367:   %call79 = call i32 @KeWaitForSingleObject(i32 %34, i32 %35, i32 %36, ... (points-to size: 0)
NODE 368:   %37 = load i32, i32* %status, align 4 (points-to size: 0)
NODE 369: <369> PSNodeType::CALL (points-to size: 0)
NODE 370:   call void @errorFn() (points-to size: 0)
NODE 371:   store i32 1, i32* @compRegistered, align 4 (points-to size: 0)
NODE 372:   %44 = load i32, i32* @SKIP1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 373:   store i32 %44, i32* @s, align 4 (points-to size: 0)
NODE 374:   %45 = load i32, i32* %Irp__CurrentLocation, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 375:   %inc = add nsw i32 %45, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 376:   store i32 %inc, i32* %Irp__CurrentLocation, align 4 (points-to size: 0)
NODE 377:   %46 = load i32, i32* %Irp__Tail__Overlay__CurrentStackLocation, alig ... (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 378:   %inc94 = add nsw i32 %46, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 379:   store i32 %inc94, i32* %Irp__Tail__Overlay__CurrentStackLocation, al ... (points-to size: 0)
NODE 380:   %47 = load i32, i32* %devExt__TopOfStack, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 381:   %48 = load i32, i32* %Irp.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 382: <382> PSNodeType::CALL (points-to size: 0)
NODE 383:   %call95 = call i32 @IofCallDriver(i32 %47, i32 %48) (points-to size: 0)
NODE 384:   store i32 %call95, i32* %status, align 4 (points-to size: 0)
NODE 385: <385> PSNodeType::CALL (points-to size: 0)
NODE 386:   call void @errorFn() (points-to size: 0)
NODE 387:   store i32 1, i32* %devExt__Removed, align 4 (points-to size: 0)
NODE 388:   %49 = load i32, i32* @s, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 389:   %50 = load i32, i32* @NP, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 390:   %56 = load i32, i32* @s, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 391:   %57 = load i32, i32* @NP, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 392:   %6 = load i32, i32* %irpStack__MinorFunction, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 393:   %38 = load i32, i32* @myStatus, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 394:   %39 = load i32, i32* %status, align 4 (points-to size: 0)
NODE 395:   store i32 %39, i32* %Irp__IoStatus__Status, align 4 (points-to size: 0)
NODE 396:   %40 = load i32, i32* %status, align 4 (points-to size: 0)
NODE 397:   store i32 %40, i32* @myStatus, align 4 (points-to size: 0)
NODE 398:   store i32 0, i32* %Irp__IoStatus__Information, align 4 (points-to size: 0)
NODE 399:   %41 = load i32, i32* %Irp.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 400: <400> PSNodeType::CALL (points-to size: 0)
NODE 401: <401> PSNodeType::ENTRY (points-to size: 0)
NODE 402: i32 %Irp (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 403: i32 %PriorityBoost (points-to size: 1)
    -> null + 0
NODE 404:   %Irp.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %Irp.addr = alloca i32, align 4 + 0
NODE 405:   %PriorityBoost.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %PriorityBoost.addr = alloca i32, align 4 + 0
NODE 406:   store i32 %Irp, i32* %Irp.addr, align 4 (points-to size: 0)
NODE 407:   store i32 %PriorityBoost, i32* %PriorityBoost.addr, align 4 (points-to size: 0)
NODE 408:   %0 = load i32, i32* @s, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 409:   %1 = load i32, i32* @NP, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 410:   %2 = load i32, i32* @DC, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 411:   store i32 %2, i32* @s, align 4 (points-to size: 0)
NODE 412:   ret void (points-to size: 0)
NODE 413: <413> PSNodeType::CALL (points-to size: 0)
NODE 414: IofCompleteRequest (points-to size: 1)
    -> IofCompleteRequest + 0
NODE 415:   call void @errorFn() (points-to size: 0)
NODE 416:   call void @IofCompleteRequest(i32 %41, i32 0) (points-to size: 0)
NODE 417:   %51 = load i32, i32* @SKIP1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 418:   store i32 %51, i32* @s, align 4 (points-to size: 0)
NODE 419:   %52 = load i32, i32* %Irp__CurrentLocation, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 420:   %inc101 = add nsw i32 %52, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 421:   store i32 %inc101, i32* %Irp__CurrentLocation, align 4 (points-to size: 0)
NODE 422:   %53 = load i32, i32* %Irp__Tail__Overlay__CurrentStackLocation, alig ... (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 423:   %inc102 = add nsw i32 %53, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 424:   store i32 %inc102, i32* %Irp__Tail__Overlay__CurrentStackLocation, a ... (points-to size: 0)
NODE 425:   %54 = load i32, i32* %devExt__TopOfStack, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 426:   %55 = load i32, i32* %Irp.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 427: <427> PSNodeType::CALL (points-to size: 0)
NODE 428:   %call103 = call i32 @IofCallDriver(i32 %54, i32 %55) (points-to size: 0)
NODE 429:   store i32 0, i32* %status, align 4 (points-to size: 0)
NODE 430: <430> PSNodeType::CALL (points-to size: 0)
NODE 431:   call void @errorFn() (points-to size: 0)
NODE 432:   %58 = load i32, i32* @SKIP1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 433:   store i32 %58, i32* @s, align 4 (points-to size: 0)
NODE 434:   %59 = load i32, i32* %Irp__CurrentLocation, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 435:   %inc109 = add nsw i32 %59, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 436:   store i32 %inc109, i32* %Irp__CurrentLocation, align 4 (points-to size: 0)
NODE 437:   %60 = load i32, i32* %Irp__Tail__Overlay__CurrentStackLocation, alig ... (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 438:   %inc110 = add nsw i32 %60, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 439:   store i32 %inc110, i32* %Irp__Tail__Overlay__CurrentStackLocation, a ... (points-to size: 0)
NODE 440:   %61 = load i32, i32* %devExt__TopOfStack, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 441:   %62 = load i32, i32* %Irp.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 442: <442> PSNodeType::CALL (points-to size: 0)
NODE 443:   %call111 = call i32 @IofCallDriver(i32 %61, i32 %62) (points-to size: 0)
NODE 444:   store i32 %call111, i32* %status, align 4 (points-to size: 0)
NODE 445: <445> PSNodeType::CALL (points-to size: 0)
NODE 446:   call void @errorFn() (points-to size: 0)
NODE 447:   %7 = load i32, i32* %irpStack__MinorFunction, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 448:   store i32 1, i32* %devExt__Started, align 4 (points-to size: 0)
NODE 449:   store i32 0, i32* %devExt__Removed, align 4 (points-to size: 0)
NODE 450:   store i32 0, i32* %devExt__SurpriseRemoved, align 4 (points-to size: 0)
NODE 451:   %8 = load i32, i32* %irpStack__MinorFunction, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 452:   %9 = load i32, i32* %irpStack__MinorFunction, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 453:   %10 = load i32, i32* %irpStack__MinorFunction, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 454:   %11 = load i32, i32* %irpStack__MinorFunction, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 455:   %12 = load i32, i32* %irpStack__MinorFunction, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 456:   %13 = load i32, i32* %irpStack__MinorFunction, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 457:   %14 = load i32, i32* %irpStack__MinorFunction, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 458:   %15 = load i32, i32* %irpStack__MinorFunction, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 459:   %16 = load i32, i32* %irpStack__MinorFunction, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 460:   %17 = load i32, i32* %irpStack__MinorFunction, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 461:   %18 = load i32, i32* %irpStack__MinorFunction, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 462:   %19 = load i32, i32* %irpStack__MinorFunction, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 463:   %20 = load i32, i32* %irpStack__MinorFunction, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 464:   %21 = load i32, i32* %irpStack__MinorFunction, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 465:   %22 = load i32, i32* %irpStack__MinorFunction, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 466:   %63 = load i32, i32* %status, align 4 (points-to size: 1)
    -> null + 0
NODE 467:   ret i32 %63 (points-to size: 0)
NODE 468:   %call15 = call i32 @KbFilter_PnP(i32 %12, i32 %13) (points-to size: 0)
NODE 469:   store i32 %call15, i32* %status, align 4 (points-to size: 0)
NODE 470:   store i32 -1, i32* %retval, align 4 (points-to size: 0)
NODE 471:   %27 = load i32, i32* @s, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 472:   %28 = load i32, i32* @IPC, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 473:   %31 = load i32, i32* @pended, align 4 (points-to size: 1)
    -> null + 0
NODE 474:   %29 = load i32, i32* @s, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 475:   %30 = load i32, i32* @DC, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 476:   %32 = load i32, i32* %status, align 4 (points-to size: 1)
    -> null + 0
NODE 477:   %33 = load i32, i32* @s, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 478:   %34 = load i32, i32* @DC, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 479: <479> PSNodeType::CALL (points-to size: 0)
NODE 480:   call void @errorFn() (points-to size: 0)
NODE 481:   %35 = load i32, i32* %status, align 4 (points-to size: 1)
    -> null + 0
NODE 482:   %36 = load i32, i32* %status, align 4 (points-to size: 1)
    -> null + 0
NODE 483:   %37 = load i32, i32* @lowerDriverReturn, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
