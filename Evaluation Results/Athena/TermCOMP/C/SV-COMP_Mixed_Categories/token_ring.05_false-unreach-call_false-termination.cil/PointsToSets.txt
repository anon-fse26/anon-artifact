NODE  33: <33> PSNodeType::ENTRY (points-to size: 0)
NODE  34:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE  35:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE  36:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  37: <37> PSNodeType::CALL (points-to size: 0)
NODE  38: <38> PSNodeType::ENTRY (points-to size: 0)
NODE  39:   store i32 1, i32* @m_i, align 4 (points-to size: 0)
NODE  40:   store i32 1, i32* @t1_i, align 4 (points-to size: 0)
NODE  41:   store i32 1, i32* @t2_i, align 4 (points-to size: 0)
NODE  42:   store i32 1, i32* @t3_i, align 4 (points-to size: 0)
NODE  43:   store i32 1, i32* @t4_i, align 4 (points-to size: 0)
NODE  44:   store i32 1, i32* @t5_i, align 4 (points-to size: 0)
NODE  45:   ret void (points-to size: 0)
NODE  46: init_model (points-to size: 1)
    -> init_model + 0
NODE  47: main (points-to size: 1)
    -> main + 0
NODE  48:   call void @init_model() (points-to size: 0)
NODE  49: <49> PSNodeType::CALL (points-to size: 0)
NODE  50: <50> PSNodeType::ENTRY (points-to size: 0)
NODE  51:   %kernel_st = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %kernel_st = alloca i32, align 4 + 0
NODE  52:   %tmp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp = alloca i32, align 4 + 0
NODE  53:   %tmp___0 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp___0 = alloca i32, align 4 + 0
NODE  54:   store i32 0, i32* %kernel_st, align 4 (points-to size: 0)
NODE  55: <55> PSNodeType::CALL (points-to size: 0)
NODE  56: <56> PSNodeType::ENTRY (points-to size: 0)
NODE  57:   ret void (points-to size: 0)
NODE  58: update_channels (points-to size: 1)
    -> update_channels + 0
NODE  59: start_simulation (points-to size: 1)
    -> start_simulation + 0
NODE  60:   call void @update_channels() (points-to size: 0)
NODE  61: <61> PSNodeType::CALL (points-to size: 0)
NODE  62: <62> PSNodeType::ENTRY (points-to size: 0)
NODE  63:   %0 = load i32, i32* @m_i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  64:   store i32 0, i32* @m_st, align 4 (points-to size: 0)
NODE  65:   %1 = load i32, i32* @t1_i, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  66:   store i32 2, i32* @m_st, align 4 (points-to size: 0)
NODE  67:   store i32 0, i32* @t1_st, align 4 (points-to size: 0)
NODE  68:   %2 = load i32, i32* @t2_i, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  69:   store i32 2, i32* @t1_st, align 4 (points-to size: 0)
NODE  70:   store i32 0, i32* @t2_st, align 4 (points-to size: 0)
NODE  71:   %3 = load i32, i32* @t3_i, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  72:   store i32 2, i32* @t2_st, align 4 (points-to size: 0)
NODE  73:   store i32 0, i32* @t3_st, align 4 (points-to size: 0)
NODE  74:   %4 = load i32, i32* @t4_i, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  75:   store i32 2, i32* @t3_st, align 4 (points-to size: 0)
NODE  76:   store i32 0, i32* @t4_st, align 4 (points-to size: 0)
NODE  77:   %5 = load i32, i32* @t5_i, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  78:   store i32 2, i32* @t4_st, align 4 (points-to size: 0)
NODE  79:   store i32 0, i32* @t5_st, align 4 (points-to size: 0)
NODE  80:   ret void (points-to size: 0)
NODE  81:   store i32 2, i32* @t5_st, align 4 (points-to size: 0)
NODE  82: init_threads (points-to size: 1)
    -> init_threads + 0
NODE  83:   call void @init_threads() (points-to size: 0)
NODE  84: <84> PSNodeType::CALL (points-to size: 0)
NODE  85: <85> PSNodeType::ENTRY (points-to size: 0)
NODE  86:   %0 = load i32, i32* @M_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  87:   store i32 1, i32* @M_E, align 4 (points-to size: 0)
NODE  88:   %1 = load i32, i32* @T1_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  89:   store i32 1, i32* @T1_E, align 4 (points-to size: 0)
NODE  90:   %2 = load i32, i32* @T2_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  91:   store i32 1, i32* @T2_E, align 4 (points-to size: 0)
NODE  92:   %3 = load i32, i32* @T3_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  93:   store i32 1, i32* @T3_E, align 4 (points-to size: 0)
NODE  94:   %4 = load i32, i32* @T4_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  95:   store i32 1, i32* @T4_E, align 4 (points-to size: 0)
NODE  96:   %5 = load i32, i32* @T5_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  97:   store i32 1, i32* @T5_E, align 4 (points-to size: 0)
NODE  98:   %6 = load i32, i32* @E_M, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  99:   store i32 1, i32* @E_M, align 4 (points-to size: 0)
NODE 100:   %7 = load i32, i32* @E_1, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 101:   store i32 1, i32* @E_1, align 4 (points-to size: 0)
NODE 102:   %8 = load i32, i32* @E_2, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 103:   store i32 1, i32* @E_2, align 4 (points-to size: 0)
NODE 104:   %9 = load i32, i32* @E_3, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 105:   store i32 1, i32* @E_3, align 4 (points-to size: 0)
NODE 106:   %10 = load i32, i32* @E_4, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 107:   store i32 1, i32* @E_4, align 4 (points-to size: 0)
NODE 108:   %11 = load i32, i32* @E_5, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 109:   store i32 1, i32* @E_5, align 4 (points-to size: 0)
NODE 110:   ret void (points-to size: 0)
NODE 111: fire_delta_events (points-to size: 1)
    -> fire_delta_events + 0
NODE 112:   call void @fire_delta_events() (points-to size: 0)
NODE 113: <113> PSNodeType::CALL (points-to size: 0)
NODE 114: <114> PSNodeType::ENTRY (points-to size: 0)
NODE 115:   %tmp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp = alloca i32, align 4 + 0
NODE 116:   %tmp___0 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp___0 = alloca i32, align 4 + 0
NODE 117:   %tmp___1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp___1 = alloca i32, align 4 + 0
NODE 118:   %tmp___2 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp___2 = alloca i32, align 4 + 0
NODE 119:   %tmp___3 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp___3 = alloca i32, align 4 + 0
NODE 120:   %tmp___4 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp___4 = alloca i32, align 4 + 0
NODE 121: <121> PSNodeType::CALL (points-to size: 0)
NODE 122: <122> PSNodeType::ENTRY (points-to size: 0)
NODE 123:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE 124:   %0 = load i32, i32* @m_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 125:   %1 = load i32, i32* @E_M, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 126:   %2 = load i32, i32* %__retres1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 127:   ret i32 %2 (points-to size: 0)
NODE 128:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE 129:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 130: is_master_triggered (points-to size: 1)
    -> is_master_triggered + 0
NODE 131: activate_threads (points-to size: 1)
    -> activate_threads + 0
NODE 132:   %call = call i32 @is_master_triggered() (points-to size: 0)
NODE 133:   store i32 %call, i32* %tmp, align 4 (points-to size: 0)
NODE 134:   %0 = load i32, i32* %tmp, align 4 (points-to size: 0)
NODE 135:   store i32 0, i32* @m_st, align 4 (points-to size: 0)
NODE 136: <136> PSNodeType::CALL (points-to size: 0)
NODE 137: <137> PSNodeType::ENTRY (points-to size: 0)
NODE 138:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE 139:   %0 = load i32, i32* @t1_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 140:   %1 = load i32, i32* @E_1, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 141:   %2 = load i32, i32* %__retres1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 142:   ret i32 %2 (points-to size: 0)
NODE 143:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE 144:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 145: is_transmit1_triggered (points-to size: 1)
    -> is_transmit1_triggered + 0
NODE 146:   %call1 = call i32 @is_transmit1_triggered() (points-to size: 0)
NODE 147:   store i32 %call1, i32* %tmp___0, align 4 (points-to size: 0)
NODE 148:   %1 = load i32, i32* %tmp___0, align 4 (points-to size: 0)
NODE 149:   store i32 0, i32* @t1_st, align 4 (points-to size: 0)
NODE 150: <150> PSNodeType::CALL (points-to size: 0)
NODE 151: <151> PSNodeType::ENTRY (points-to size: 0)
NODE 152:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE 153:   %0 = load i32, i32* @t2_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 154:   %1 = load i32, i32* @E_2, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 155:   %2 = load i32, i32* %__retres1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 156:   ret i32 %2 (points-to size: 0)
NODE 157:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE 158:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 159: is_transmit2_triggered (points-to size: 1)
    -> is_transmit2_triggered + 0
NODE 160:   %call6 = call i32 @is_transmit2_triggered() (points-to size: 0)
NODE 161:   store i32 %call6, i32* %tmp___1, align 4 (points-to size: 0)
NODE 162:   %2 = load i32, i32* %tmp___1, align 4 (points-to size: 0)
NODE 163:   store i32 0, i32* @t2_st, align 4 (points-to size: 0)
NODE 164: <164> PSNodeType::CALL (points-to size: 0)
NODE 165: <165> PSNodeType::ENTRY (points-to size: 0)
NODE 166:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE 167:   %0 = load i32, i32* @t3_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 168:   %1 = load i32, i32* @E_3, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 169:   %2 = load i32, i32* %__retres1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 170:   ret i32 %2 (points-to size: 0)
NODE 171:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE 172:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 173: is_transmit3_triggered (points-to size: 1)
    -> is_transmit3_triggered + 0
NODE 174:   %call11 = call i32 @is_transmit3_triggered() (points-to size: 0)
NODE 175:   store i32 %call11, i32* %tmp___2, align 4 (points-to size: 0)
NODE 176:   %3 = load i32, i32* %tmp___2, align 4 (points-to size: 0)
NODE 177:   store i32 0, i32* @t3_st, align 4 (points-to size: 0)
NODE 178: <178> PSNodeType::CALL (points-to size: 0)
NODE 179: <179> PSNodeType::ENTRY (points-to size: 0)
NODE 180:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE 181:   %0 = load i32, i32* @t4_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 182:   %1 = load i32, i32* @E_4, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 183:   %2 = load i32, i32* %__retres1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 184:   ret i32 %2 (points-to size: 0)
NODE 185:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE 186:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 187: is_transmit4_triggered (points-to size: 1)
    -> is_transmit4_triggered + 0
NODE 188:   %call16 = call i32 @is_transmit4_triggered() (points-to size: 0)
NODE 189:   store i32 %call16, i32* %tmp___3, align 4 (points-to size: 0)
NODE 190:   %4 = load i32, i32* %tmp___3, align 4 (points-to size: 0)
NODE 191:   store i32 0, i32* @t4_st, align 4 (points-to size: 0)
NODE 192: <192> PSNodeType::CALL (points-to size: 0)
NODE 193: <193> PSNodeType::ENTRY (points-to size: 0)
NODE 194:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE 195:   %0 = load i32, i32* @t5_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 196:   %1 = load i32, i32* @E_5, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 197:   %2 = load i32, i32* %__retres1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 198:   ret i32 %2 (points-to size: 0)
NODE 199:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE 200:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 201: is_transmit5_triggered (points-to size: 1)
    -> is_transmit5_triggered + 0
NODE 202:   %call21 = call i32 @is_transmit5_triggered() (points-to size: 0)
NODE 203:   store i32 %call21, i32* %tmp___4, align 4 (points-to size: 0)
NODE 204:   %5 = load i32, i32* %tmp___4, align 4 (points-to size: 0)
NODE 205:   store i32 0, i32* @t5_st, align 4 (points-to size: 0)
NODE 206:   ret void (points-to size: 0)
NODE 207:   call void @activate_threads() (points-to size: 0)
NODE 208: <208> PSNodeType::CALL (points-to size: 0)
NODE 209: <209> PSNodeType::ENTRY (points-to size: 0)
NODE 210:   %0 = load i32, i32* @M_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 211:   store i32 2, i32* @M_E, align 4 (points-to size: 0)
NODE 212:   %1 = load i32, i32* @T1_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 213:   store i32 2, i32* @T1_E, align 4 (points-to size: 0)
NODE 214:   %2 = load i32, i32* @T2_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 215:   store i32 2, i32* @T2_E, align 4 (points-to size: 0)
NODE 216:   %3 = load i32, i32* @T3_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 217:   store i32 2, i32* @T3_E, align 4 (points-to size: 0)
NODE 218:   %4 = load i32, i32* @T4_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 219:   store i32 2, i32* @T4_E, align 4 (points-to size: 0)
NODE 220:   %5 = load i32, i32* @T5_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 221:   store i32 2, i32* @T5_E, align 4 (points-to size: 0)
NODE 222:   %6 = load i32, i32* @E_M, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 223:   store i32 2, i32* @E_M, align 4 (points-to size: 0)
NODE 224:   %7 = load i32, i32* @E_1, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 225:   store i32 2, i32* @E_1, align 4 (points-to size: 0)
NODE 226:   %8 = load i32, i32* @E_2, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 227:   store i32 2, i32* @E_2, align 4 (points-to size: 0)
NODE 228:   %9 = load i32, i32* @E_3, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 229:   store i32 2, i32* @E_3, align 4 (points-to size: 0)
NODE 230:   %10 = load i32, i32* @E_4, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 231:   store i32 2, i32* @E_4, align 4 (points-to size: 0)
NODE 232:   %11 = load i32, i32* @E_5, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 233:   store i32 2, i32* @E_5, align 4 (points-to size: 0)
NODE 234:   ret void (points-to size: 0)
NODE 235: reset_delta_events (points-to size: 1)
    -> reset_delta_events + 0
NODE 236:   call void @reset_delta_events() (points-to size: 0)
NODE 237:   store i32 1, i32* %kernel_st, align 4 (points-to size: 0)
NODE 238: <238> PSNodeType::CALL (points-to size: 0)
NODE 239: <239> PSNodeType::ENTRY (points-to size: 0)
NODE 240:   %tmp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp = alloca i32, align 4 + 0
NODE 241:   %tmp_ndt_1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp_ndt_1 = alloca i32, align 4 + 0
NODE 242:   %tmp_ndt_2 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp_ndt_2 = alloca i32, align 4 + 0
NODE 243:   %tmp_ndt_3 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp_ndt_3 = alloca i32, align 4 + 0
NODE 244:   %tmp_ndt_4 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp_ndt_4 = alloca i32, align 4 + 0
NODE 245:   %tmp_ndt_5 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp_ndt_5 = alloca i32, align 4 + 0
NODE 246:   %tmp_ndt_6 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp_ndt_6 = alloca i32, align 4 + 0
NODE 247: <247> PSNodeType::CALL (points-to size: 0)
NODE 248: <248> PSNodeType::ENTRY (points-to size: 0)
NODE 249:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE 250:   %0 = load i32, i32* @m_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 251:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 252:   %6 = load i32, i32* %__retres1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 253:   ret i32 %6 (points-to size: 0)
NODE 254:   %1 = load i32, i32* @t1_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 255:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 256:   %2 = load i32, i32* @t2_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 257:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 258:   %3 = load i32, i32* @t3_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 259:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 260:   %4 = load i32, i32* @t4_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 261:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 262:   %5 = load i32, i32* @t5_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 263:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 264:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE 265: exists_runnable_thread (points-to size: 1)
    -> exists_runnable_thread + 0
NODE 266: eval (points-to size: 1)
    -> eval + 0
NODE 267:   %call = call i32 @exists_runnable_thread() (points-to size: 0)
NODE 268:   store i32 %call, i32* %tmp, align 4 (points-to size: 0)
NODE 269:   %0 = load i32, i32* %tmp, align 4 (points-to size: 0)
NODE 270:   %1 = load i32, i32* @m_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 271:   ret void (points-to size: 0)
NODE 272:   %call2 = call i32 (...) @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 273:   store i32 %call2, i32* %tmp_ndt_1, align 4 (points-to size: 0)
NODE 274:   %2 = load i32, i32* %tmp_ndt_1, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 275:   %3 = load i32, i32* @t1_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 276:   store i32 1, i32* @m_st, align 4 (points-to size: 0)
NODE 277: <277> PSNodeType::CALL (points-to size: 0)
NODE 278: <278> PSNodeType::ENTRY (points-to size: 0)
NODE 279:   %tmp_var = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp_var = alloca i32, align 4 + 0
NODE 280:   %0 = load i32, i32* @m_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 281:   %1 = load i32, i32* @m_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 282:   %call = call i32 (...) @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 283:   store i32 %call, i32* @token, align 4 (points-to size: 0)
NODE 284:   %2 = load i32, i32* @token, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 285:   store i32 %2, i32* @local, align 4 (points-to size: 0)
NODE 286:   store i32 1, i32* @E_1, align 4 (points-to size: 0)
NODE 287: <287> PSNodeType::CALL (points-to size: 0)
NODE 288: <288> PSNodeType::ENTRY (points-to size: 0)
NODE 289: <289> PSNodeType::CALL (points-to size: 0)
NODE 290: immediate_notify (points-to size: 1)
    -> immediate_notify + 0
NODE 291:   call void @activate_threads() (points-to size: 0)
NODE 292:   ret void (points-to size: 0)
NODE 293: master (points-to size: 1)
    -> master + 0
NODE 294:   call void @immediate_notify() (points-to size: 0)
NODE 295:   store i32 2, i32* @E_1, align 4 (points-to size: 0)
NODE 296:   store i32 1, i32* @m_pc, align 4 (points-to size: 0)
NODE 297:   store i32 2, i32* @m_st, align 4 (points-to size: 0)
NODE 298:   ret void (points-to size: 0)
NODE 299:   %3 = load i32, i32* @token, align 4 (points-to size: 3)
    -> null + 0
    -> null + Offset::UNKNOWN
    -> unknown + Offset::UNKNOWN
NODE 300:   %4 = load i32, i32* @local, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 301:   %add = add nsw i32 %4, 5 (points-to size: 2)
    -> null + Offset::UNKNOWN
    -> unknown + Offset::UNKNOWN
NODE 302: <302> PSNodeType::CALL (points-to size: 0)
NODE 303: <303> PSNodeType::ENTRY (points-to size: 0)
NODE 304: error (points-to size: 1)
    -> error + 0
NODE 305:   call void @error() (points-to size: 0)
NODE 306:   %5 = load i32, i32* %tmp_var, align 4 (points-to size: 0)
NODE 307:   %6 = load i32, i32* %tmp_var, align 4 (points-to size: 0)
NODE 308:   %7 = load i32, i32* %tmp_var, align 4 (points-to size: 0)
NODE 309:   %8 = load i32, i32* %tmp_var, align 4 (points-to size: 0)
NODE 310:   %9 = load i32, i32* %tmp_var, align 4 (points-to size: 0)
NODE 311: <311> PSNodeType::CALL (points-to size: 0)
NODE 312:   call void @error() (points-to size: 0)
NODE 313:   call void @master() (points-to size: 0)
NODE 314:   %call11 = call i32 (...) @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 315:   store i32 %call11, i32* %tmp_ndt_2, align 4 (points-to size: 0)
NODE 316:   %4 = load i32, i32* %tmp_ndt_2, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 317:   %5 = load i32, i32* @t2_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 318:   store i32 1, i32* @t1_st, align 4 (points-to size: 0)
NODE 319: <319> PSNodeType::CALL (points-to size: 0)
NODE 320: <320> PSNodeType::ENTRY (points-to size: 0)
NODE 321:   %0 = load i32, i32* @t1_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 322:   %1 = load i32, i32* @t1_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 323:   store i32 1, i32* @t1_pc, align 4 (points-to size: 0)
NODE 324:   store i32 2, i32* @t1_st, align 4 (points-to size: 0)
NODE 325:   ret void (points-to size: 0)
NODE 326:   %2 = load i32, i32* @token, align 4 (points-to size: 3)
    -> null + 0
    -> null + Offset::UNKNOWN
    -> unknown + Offset::UNKNOWN
NODE 327:   %add = add nsw i32 %2, 1 (points-to size: 2)
    -> null + Offset::UNKNOWN
    -> unknown + Offset::UNKNOWN
NODE 328:   store i32 %add, i32* @token, align 4 (points-to size: 0)
NODE 329:   store i32 1, i32* @E_2, align 4 (points-to size: 0)
NODE 330: <330> PSNodeType::CALL (points-to size: 0)
NODE 331: transmit1 (points-to size: 1)
    -> transmit1 + 0
NODE 332:   call void @immediate_notify() (points-to size: 0)
NODE 333:   store i32 2, i32* @E_2, align 4 (points-to size: 0)
NODE 334:   call void @transmit1() (points-to size: 0)
NODE 335:   %call20 = call i32 (...) @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 336:   store i32 %call20, i32* %tmp_ndt_3, align 4 (points-to size: 0)
NODE 337:   %6 = load i32, i32* %tmp_ndt_3, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 338:   %7 = load i32, i32* @t3_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 339:   store i32 1, i32* @t2_st, align 4 (points-to size: 0)
NODE 340: <340> PSNodeType::CALL (points-to size: 0)
NODE 341: <341> PSNodeType::ENTRY (points-to size: 0)
NODE 342:   %0 = load i32, i32* @t2_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 343:   %1 = load i32, i32* @t2_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 344:   store i32 1, i32* @t2_pc, align 4 (points-to size: 0)
NODE 345:   store i32 2, i32* @t2_st, align 4 (points-to size: 0)
NODE 346:   ret void (points-to size: 0)
NODE 347:   %2 = load i32, i32* @token, align 4 (points-to size: 3)
    -> null + 0
    -> null + Offset::UNKNOWN
    -> unknown + Offset::UNKNOWN
NODE 348:   %add = add nsw i32 %2, 1 (points-to size: 2)
    -> null + Offset::UNKNOWN
    -> unknown + Offset::UNKNOWN
NODE 349:   store i32 %add, i32* @token, align 4 (points-to size: 0)
NODE 350:   store i32 1, i32* @E_3, align 4 (points-to size: 0)
NODE 351: <351> PSNodeType::CALL (points-to size: 0)
NODE 352: transmit2 (points-to size: 1)
    -> transmit2 + 0
NODE 353:   call void @immediate_notify() (points-to size: 0)
NODE 354:   store i32 2, i32* @E_3, align 4 (points-to size: 0)
NODE 355:   call void @transmit2() (points-to size: 0)
NODE 356:   %call29 = call i32 (...) @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 357:   store i32 %call29, i32* %tmp_ndt_4, align 4 (points-to size: 0)
NODE 358:   %8 = load i32, i32* %tmp_ndt_4, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 359:   %9 = load i32, i32* @t4_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 360:   store i32 1, i32* @t3_st, align 4 (points-to size: 0)
NODE 361: <361> PSNodeType::CALL (points-to size: 0)
NODE 362: <362> PSNodeType::ENTRY (points-to size: 0)
NODE 363:   %0 = load i32, i32* @t3_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 364:   %1 = load i32, i32* @t3_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 365:   store i32 1, i32* @t3_pc, align 4 (points-to size: 0)
NODE 366:   store i32 2, i32* @t3_st, align 4 (points-to size: 0)
NODE 367:   ret void (points-to size: 0)
NODE 368:   %2 = load i32, i32* @token, align 4 (points-to size: 3)
    -> null + 0
    -> null + Offset::UNKNOWN
    -> unknown + Offset::UNKNOWN
NODE 369:   %add = add nsw i32 %2, 1 (points-to size: 2)
    -> null + Offset::UNKNOWN
    -> unknown + Offset::UNKNOWN
NODE 370:   store i32 %add, i32* @token, align 4 (points-to size: 0)
NODE 371:   store i32 1, i32* @E_4, align 4 (points-to size: 0)
NODE 372: <372> PSNodeType::CALL (points-to size: 0)
NODE 373: transmit3 (points-to size: 1)
    -> transmit3 + 0
NODE 374:   call void @immediate_notify() (points-to size: 0)
NODE 375:   store i32 2, i32* @E_4, align 4 (points-to size: 0)
NODE 376:   call void @transmit3() (points-to size: 0)
NODE 377:   %call38 = call i32 (...) @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 378:   store i32 %call38, i32* %tmp_ndt_5, align 4 (points-to size: 0)
NODE 379:   %10 = load i32, i32* %tmp_ndt_5, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 380:   %11 = load i32, i32* @t5_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 381:   store i32 1, i32* @t4_st, align 4 (points-to size: 0)
NODE 382: <382> PSNodeType::CALL (points-to size: 0)
NODE 383: <383> PSNodeType::ENTRY (points-to size: 0)
NODE 384:   %0 = load i32, i32* @t4_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 385:   %1 = load i32, i32* @t4_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 386:   store i32 1, i32* @t4_pc, align 4 (points-to size: 0)
NODE 387:   store i32 2, i32* @t4_st, align 4 (points-to size: 0)
NODE 388:   ret void (points-to size: 0)
NODE 389:   %2 = load i32, i32* @token, align 4 (points-to size: 3)
    -> null + 0
    -> null + Offset::UNKNOWN
    -> unknown + Offset::UNKNOWN
NODE 390:   %add = add nsw i32 %2, 1 (points-to size: 2)
    -> null + Offset::UNKNOWN
    -> unknown + Offset::UNKNOWN
NODE 391:   store i32 %add, i32* @token, align 4 (points-to size: 0)
NODE 392:   store i32 1, i32* @E_5, align 4 (points-to size: 0)
NODE 393: <393> PSNodeType::CALL (points-to size: 0)
NODE 394: transmit4 (points-to size: 1)
    -> transmit4 + 0
NODE 395:   call void @immediate_notify() (points-to size: 0)
NODE 396:   store i32 2, i32* @E_5, align 4 (points-to size: 0)
NODE 397:   call void @transmit4() (points-to size: 0)
NODE 398:   %call47 = call i32 (...) @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 399:   store i32 %call47, i32* %tmp_ndt_6, align 4 (points-to size: 0)
NODE 400:   %12 = load i32, i32* %tmp_ndt_6, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 401:   store i32 1, i32* @t5_st, align 4 (points-to size: 0)
NODE 402: <402> PSNodeType::CALL (points-to size: 0)
NODE 403: <403> PSNodeType::ENTRY (points-to size: 0)
NODE 404:   %0 = load i32, i32* @t5_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 405:   %1 = load i32, i32* @t5_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 406:   store i32 1, i32* @t5_pc, align 4 (points-to size: 0)
NODE 407:   store i32 2, i32* @t5_st, align 4 (points-to size: 0)
NODE 408:   ret void (points-to size: 0)
NODE 409:   %2 = load i32, i32* @token, align 4 (points-to size: 3)
    -> null + 0
    -> null + Offset::UNKNOWN
    -> unknown + Offset::UNKNOWN
NODE 410:   %add = add nsw i32 %2, 1 (points-to size: 2)
    -> null + Offset::UNKNOWN
    -> unknown + Offset::UNKNOWN
NODE 411:   store i32 %add, i32* @token, align 4 (points-to size: 0)
NODE 412:   store i32 1, i32* @E_M, align 4 (points-to size: 0)
NODE 413: <413> PSNodeType::CALL (points-to size: 0)
NODE 414: transmit5 (points-to size: 1)
    -> transmit5 + 0
NODE 415:   call void @immediate_notify() (points-to size: 0)
NODE 416:   store i32 2, i32* @E_M, align 4 (points-to size: 0)
NODE 417:   call void @transmit5() (points-to size: 0)
NODE 418:   call void @eval() (points-to size: 0)
NODE 419:   store i32 2, i32* %kernel_st, align 4 (points-to size: 0)
NODE 420: <420> PSNodeType::CALL (points-to size: 0)
NODE 421:   call void @update_channels() (points-to size: 0)
NODE 422:   store i32 3, i32* %kernel_st, align 4 (points-to size: 0)
NODE 423: <423> PSNodeType::CALL (points-to size: 0)
NODE 424:   call void @fire_delta_events() (points-to size: 0)
NODE 425: <425> PSNodeType::CALL (points-to size: 0)
NODE 426:   call void @activate_threads() (points-to size: 0)
NODE 427: <427> PSNodeType::CALL (points-to size: 0)
NODE 428:   call void @reset_delta_events() (points-to size: 0)
NODE 429: <429> PSNodeType::CALL (points-to size: 0)
NODE 430:   %call = call i32 @exists_runnable_thread() (points-to size: 0)
NODE 431:   store i32 %call, i32* %tmp, align 4 (points-to size: 0)
NODE 432:   %0 = load i32, i32* %tmp, align 4 (points-to size: 0)
NODE 433:   store i32 4, i32* %kernel_st, align 4 (points-to size: 0)
NODE 434: <434> PSNodeType::CALL (points-to size: 0)
NODE 435: <435> PSNodeType::ENTRY (points-to size: 0)
NODE 436:   store i32 1, i32* @M_E, align 4 (points-to size: 0)
NODE 437:   ret void (points-to size: 0)
NODE 438: fire_time_events (points-to size: 1)
    -> fire_time_events + 0
NODE 439:   call void @fire_time_events() (points-to size: 0)
NODE 440: <440> PSNodeType::CALL (points-to size: 0)
NODE 441:   call void @activate_threads() (points-to size: 0)
NODE 442: <442> PSNodeType::CALL (points-to size: 0)
NODE 443: <443> PSNodeType::ENTRY (points-to size: 0)
NODE 444:   %0 = load i32, i32* @M_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 445:   store i32 2, i32* @M_E, align 4 (points-to size: 0)
NODE 446:   %1 = load i32, i32* @T1_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 447:   store i32 2, i32* @T1_E, align 4 (points-to size: 0)
NODE 448:   %2 = load i32, i32* @T2_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 449:   store i32 2, i32* @T2_E, align 4 (points-to size: 0)
NODE 450:   %3 = load i32, i32* @T3_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 451:   store i32 2, i32* @T3_E, align 4 (points-to size: 0)
NODE 452:   %4 = load i32, i32* @T4_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 453:   store i32 2, i32* @T4_E, align 4 (points-to size: 0)
NODE 454:   %5 = load i32, i32* @T5_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 455:   store i32 2, i32* @T5_E, align 4 (points-to size: 0)
NODE 456:   %6 = load i32, i32* @E_M, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 457:   store i32 2, i32* @E_M, align 4 (points-to size: 0)
NODE 458:   %7 = load i32, i32* @E_1, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 459:   store i32 2, i32* @E_1, align 4 (points-to size: 0)
NODE 460:   %8 = load i32, i32* @E_2, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 461:   store i32 2, i32* @E_2, align 4 (points-to size: 0)
NODE 462:   %9 = load i32, i32* @E_3, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 463:   store i32 2, i32* @E_3, align 4 (points-to size: 0)
NODE 464:   %10 = load i32, i32* @E_4, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 465:   store i32 2, i32* @E_4, align 4 (points-to size: 0)
NODE 466:   %11 = load i32, i32* @E_5, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 467:   store i32 2, i32* @E_5, align 4 (points-to size: 0)
NODE 468:   ret void (points-to size: 0)
NODE 469: reset_time_events (points-to size: 1)
    -> reset_time_events + 0
NODE 470:   call void @reset_time_events() (points-to size: 0)
NODE 471: <471> PSNodeType::CALL (points-to size: 0)
NODE 472: <472> PSNodeType::ENTRY (points-to size: 0)
NODE 473:   %tmp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp = alloca i32, align 4 + 0
NODE 474:   %__retres2 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres2 = alloca i32, align 4 + 0
NODE 475: <475> PSNodeType::CALL (points-to size: 0)
NODE 476: stop_simulation (points-to size: 1)
    -> stop_simulation + 0
NODE 477:   %call = call i32 @exists_runnable_thread() (points-to size: 0)
NODE 478:   store i32 %call, i32* %tmp, align 4 (points-to size: 0)
NODE 479:   %0 = load i32, i32* %tmp, align 4 (points-to size: 0)
NODE 480:   store i32 0, i32* %__retres2, align 4 (points-to size: 0)
NODE 481:   %1 = load i32, i32* %__retres2, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 482:   ret i32 %1 (points-to size: 0)
NODE 483:   store i32 1, i32* %__retres2, align 4 (points-to size: 0)
NODE 484:   %call1 = call i32 @stop_simulation() (points-to size: 0)
NODE 485:   store i32 %call1, i32* %tmp___0, align 4 (points-to size: 0)
NODE 486:   %1 = load i32, i32* %tmp___0, align 4 (points-to size: 0)
NODE 487:   ret void (points-to size: 0)
NODE 488:   call void @start_simulation() (points-to size: 0)
NODE 489:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE 490:   %0 = load i32, i32* %__retres1, align 4 (points-to size: 1)
    -> null + 0
NODE 491:   ret i32 %0 (points-to size: 0)
