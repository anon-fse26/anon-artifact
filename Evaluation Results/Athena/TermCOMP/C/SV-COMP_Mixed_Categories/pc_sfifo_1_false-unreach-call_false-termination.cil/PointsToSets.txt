NODE  16: <16> PSNodeType::ENTRY (points-to size: 0)
NODE  17:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE  18:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE  19:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  20: <20> PSNodeType::CALL (points-to size: 0)
NODE  21: <21> PSNodeType::ENTRY (points-to size: 0)
NODE  22:   store i32 1, i32* @q_free, align 4 (points-to size: 0)
NODE  23:   store i32 2, i32* @q_write_ev, align 4 (points-to size: 0)
NODE  24:   %0 = load i32, i32* @q_write_ev, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  25:   store i32 %0, i32* @q_read_ev, align 4 (points-to size: 0)
NODE  26:   store i32 0, i32* @p_num_write, align 4 (points-to size: 0)
NODE  27:   store i32 0, i32* @p_dw_pc, align 4 (points-to size: 0)
NODE  28:   store i32 1, i32* @p_dw_i, align 4 (points-to size: 0)
NODE  29:   store i32 0, i32* @c_num_read, align 4 (points-to size: 0)
NODE  30:   store i32 0, i32* @c_dr_pc, align 4 (points-to size: 0)
NODE  31:   store i32 1, i32* @c_dr_i, align 4 (points-to size: 0)
NODE  32:   ret void (points-to size: 0)
NODE  33: init_model (points-to size: 1)
    -> init_model + 0
NODE  34: main (points-to size: 1)
    -> main + 0
NODE  35:   call void @init_model() (points-to size: 0)
NODE  36: <36> PSNodeType::CALL (points-to size: 0)
NODE  37: <37> PSNodeType::ENTRY (points-to size: 0)
NODE  38:   %kernel_st = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %kernel_st = alloca i32, align 4 + 0
NODE  39:   %tmp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp = alloca i32, align 4 + 0
NODE  40:   store i32 0, i32* %kernel_st, align 4 (points-to size: 0)
NODE  41: <41> PSNodeType::CALL (points-to size: 0)
NODE  42: <42> PSNodeType::ENTRY (points-to size: 0)
NODE  43:   %0 = load i32, i32* @p_dw_i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  44:   store i32 0, i32* @p_dw_st, align 4 (points-to size: 0)
NODE  45:   %1 = load i32, i32* @c_dr_i, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  46:   store i32 2, i32* @p_dw_st, align 4 (points-to size: 0)
NODE  47:   store i32 0, i32* @c_dr_st, align 4 (points-to size: 0)
NODE  48:   ret void (points-to size: 0)
NODE  49:   store i32 2, i32* @c_dr_st, align 4 (points-to size: 0)
NODE  50: init_threads (points-to size: 1)
    -> init_threads + 0
NODE  51: start_simulation (points-to size: 1)
    -> start_simulation + 0
NODE  52:   call void @init_threads() (points-to size: 0)
NODE  53:   store i32 1, i32* %kernel_st, align 4 (points-to size: 0)
NODE  54: <54> PSNodeType::CALL (points-to size: 0)
NODE  55: <55> PSNodeType::ENTRY (points-to size: 0)
NODE  56:   %tmp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp = alloca i32, align 4 + 0
NODE  57:   %tmp___0 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp___0 = alloca i32, align 4 + 0
NODE  58:   %tmp___1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp___1 = alloca i32, align 4 + 0
NODE  59: <59> PSNodeType::CALL (points-to size: 0)
NODE  60: <60> PSNodeType::ENTRY (points-to size: 0)
NODE  61:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE  62:   %0 = load i32, i32* @p_dw_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  63:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE  64:   %2 = load i32, i32* %__retres1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  65:   ret i32 %2 (points-to size: 0)
NODE  66:   %1 = load i32, i32* @c_dr_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  67:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE  68:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE  69: exists_runnable_thread (points-to size: 1)
    -> exists_runnable_thread + 0
NODE  70: eval (points-to size: 1)
    -> eval + 0
NODE  71:   %call = call i32 @exists_runnable_thread() (points-to size: 0)
NODE  72:   store i32 %call, i32* %tmp___1, align 4 (points-to size: 0)
NODE  73:   %0 = load i32, i32* %tmp___1, align 4 (points-to size: 0)
NODE  74:   %1 = load i32, i32* @p_dw_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  75:   ret void (points-to size: 0)
NODE  76:   %call2 = call i32 (...) @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  77:   store i32 %call2, i32* %tmp, align 4 (points-to size: 0)
NODE  78:   %2 = load i32, i32* %tmp, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  79:   %3 = load i32, i32* @c_dr_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  80:   store i32 1, i32* @p_dw_st, align 4 (points-to size: 0)
NODE  81: <81> PSNodeType::CALL (points-to size: 0)
NODE  82: <82> PSNodeType::ENTRY (points-to size: 0)
NODE  83:   %0 = load i32, i32* @p_dw_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  84:   %call = call i32 (...) @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  85:   store i32 %call, i32* @q_buf_0, align 4 (points-to size: 0)
NODE  86:   %3 = load i32, i32* @q_buf_0, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  87:   store i32 %3, i32* @p_last_write, align 4 (points-to size: 0)
NODE  88:   %4 = load i32, i32* @p_num_write, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  89:   %add = add nsw i32 %4, 1 (points-to size: 1)
    -> null + Offset::UNKNOWN
NODE  90:   store i32 %add, i32* @p_num_write, align 4 (points-to size: 0)
NODE  91:   store i32 0, i32* @q_free, align 4 (points-to size: 0)
NODE  92:   store i32 1, i32* @q_write_ev, align 4 (points-to size: 0)
NODE  93: <93> PSNodeType::CALL (points-to size: 0)
NODE  94: <94> PSNodeType::ENTRY (points-to size: 0)
NODE  95:   %tmp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp = alloca i32, align 4 + 0
NODE  96:   %tmp___0 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp___0 = alloca i32, align 4 + 0
NODE  97: <97> PSNodeType::CALL (points-to size: 0)
NODE  98: <98> PSNodeType::ENTRY (points-to size: 0)
NODE  99:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE 100:   %0 = load i32, i32* @p_dw_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 101:   %1 = load i32, i32* @q_read_ev, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 102:   %2 = load i32, i32* %__retres1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 103:   ret i32 %2 (points-to size: 0)
NODE 104:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE 105:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 106: is_do_write_p_triggered (points-to size: 1)
    -> is_do_write_p_triggered + 0
NODE 107: immediate_notify_threads (points-to size: 1)
    -> immediate_notify_threads + 0
NODE 108:   %call = call i32 @is_do_write_p_triggered() (points-to size: 0)
NODE 109:   store i32 %call, i32* %tmp, align 4 (points-to size: 0)
NODE 110:   %0 = load i32, i32* %tmp, align 4 (points-to size: 0)
NODE 111:   store i32 0, i32* @p_dw_st, align 4 (points-to size: 0)
NODE 112: <112> PSNodeType::CALL (points-to size: 0)
NODE 113: <113> PSNodeType::ENTRY (points-to size: 0)
NODE 114:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE 115:   %0 = load i32, i32* @c_dr_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 116:   %1 = load i32, i32* @q_write_ev, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 117:   %2 = load i32, i32* %__retres1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 118:   ret i32 %2 (points-to size: 0)
NODE 119:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE 120:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 121: is_do_read_c_triggered (points-to size: 1)
    -> is_do_read_c_triggered + 0
NODE 122:   %call1 = call i32 @is_do_read_c_triggered() (points-to size: 0)
NODE 123:   store i32 %call1, i32* %tmp___0, align 4 (points-to size: 0)
NODE 124:   %1 = load i32, i32* %tmp___0, align 4 (points-to size: 0)
NODE 125:   store i32 0, i32* @c_dr_st, align 4 (points-to size: 0)
NODE 126:   ret void (points-to size: 0)
NODE 127: do_write_p (points-to size: 1)
    -> do_write_p + 0
NODE 128:   call void @immediate_notify_threads() (points-to size: 0)
NODE 129:   store i32 2, i32* @q_write_ev, align 4 (points-to size: 0)
NODE 130:   %1 = load i32, i32* @p_dw_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 131:   %2 = load i32, i32* @q_free, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 132:   store i32 2, i32* @p_dw_st, align 4 (points-to size: 0)
NODE 133:   store i32 1, i32* @p_dw_pc, align 4 (points-to size: 0)
NODE 134:   ret void (points-to size: 0)
NODE 135:   call void @do_write_p() (points-to size: 0)
NODE 136: <136> PSNodeType::CALL (points-to size: 0)
NODE 137: <137> PSNodeType::ENTRY (points-to size: 0)
NODE 138: error (points-to size: 1)
    -> error + 0
NODE 139:   call void @error() (points-to size: 0)
NODE 140:   %call11 = call i32 (...) @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 141:   store i32 %call11, i32* %tmp___0, align 4 (points-to size: 0)
NODE 142:   %4 = load i32, i32* %tmp___0, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 143:   store i32 1, i32* @c_dr_st, align 4 (points-to size: 0)
NODE 144: <144> PSNodeType::CALL (points-to size: 0)
NODE 145: <145> PSNodeType::ENTRY (points-to size: 0)
NODE 146:   %a = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %a = alloca i32, align 4 + 0
NODE 147:   %0 = load i32, i32* @c_dr_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 148:   %5 = load i32, i32* @q_buf_0, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 149:   store i32 %5, i32* %a, align 4 (points-to size: 0)
NODE 150:   %6 = load i32, i32* %a, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 151:   store i32 %6, i32* @c_last_read, align 4 (points-to size: 0)
NODE 152:   %7 = load i32, i32* @c_num_read, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE 153:   %add = add nsw i32 %7, 1 (points-to size: 1)
    -> null + Offset::UNKNOWN
NODE 154:   store i32 %add, i32* @c_num_read, align 4 (points-to size: 0)
NODE 155:   store i32 1, i32* @q_free, align 4 (points-to size: 0)
NODE 156:   store i32 1, i32* @q_read_ev, align 4 (points-to size: 0)
NODE 157: <157> PSNodeType::CALL (points-to size: 0)
NODE 158: do_read_c (points-to size: 1)
    -> do_read_c + 0
NODE 159:   call void @immediate_notify_threads() (points-to size: 0)
NODE 160:   store i32 2, i32* @q_read_ev, align 4 (points-to size: 0)
NODE 161:   %8 = load i32, i32* @p_last_write, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 162:   %9 = load i32, i32* @c_last_read, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 163:   %1 = load i32, i32* @c_dr_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 164:   %2 = load i32, i32* @q_free, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 165:   %10 = load i32, i32* @p_num_write, align 4 (points-to size: 1)
    -> null + Offset::UNKNOWN
NODE 166:   %11 = load i32, i32* @c_num_read, align 4 (points-to size: 1)
    -> null + Offset::UNKNOWN
NODE 167: <167> PSNodeType::CALL (points-to size: 0)
NODE 168:   call void @error() (points-to size: 0)
NODE 169:   store i32 2, i32* @c_dr_st, align 4 (points-to size: 0)
NODE 170:   store i32 1, i32* @c_dr_pc, align 4 (points-to size: 0)
NODE 171:   %3 = load i32, i32* %a, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 172:   store i32 %3, i32* @a_t, align 4 (points-to size: 0)
NODE 173: <173> PSNodeType::CALL (points-to size: 0)
NODE 174:   call void @error() (points-to size: 0)
NODE 175:   %4 = load i32, i32* @a_t, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 176:   store i32 %4, i32* %a, align 4 (points-to size: 0)
NODE 177:   ret void (points-to size: 0)
NODE 178:   call void @do_read_c() (points-to size: 0)
NODE 179:   call void @eval() (points-to size: 0)
NODE 180: <180> PSNodeType::CALL (points-to size: 0)
NODE 181: <181> PSNodeType::ENTRY (points-to size: 0)
NODE 182:   %tmp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp = alloca i32, align 4 + 0
NODE 183:   %__retres2 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres2 = alloca i32, align 4 + 0
NODE 184: <184> PSNodeType::CALL (points-to size: 0)
NODE 185: stop_simulation (points-to size: 1)
    -> stop_simulation + 0
NODE 186:   %call = call i32 @exists_runnable_thread() (points-to size: 0)
NODE 187:   store i32 %call, i32* %tmp, align 4 (points-to size: 0)
NODE 188:   %0 = load i32, i32* %tmp, align 4 (points-to size: 0)
NODE 189:   store i32 0, i32* %__retres2, align 4 (points-to size: 0)
NODE 190:   %1 = load i32, i32* %__retres2, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 191:   ret i32 %1 (points-to size: 0)
NODE 192:   store i32 1, i32* %__retres2, align 4 (points-to size: 0)
NODE 193:   %call = call i32 @stop_simulation() (points-to size: 0)
NODE 194:   store i32 %call, i32* %tmp, align 4 (points-to size: 0)
NODE 195:   %0 = load i32, i32* %tmp, align 4 (points-to size: 0)
NODE 196:   ret void (points-to size: 0)
NODE 197:   call void @start_simulation() (points-to size: 0)
NODE 198:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE 199:   %0 = load i32, i32* %__retres1, align 4 (points-to size: 1)
    -> null + 0
NODE 200:   ret i32 %0 (points-to size: 0)
