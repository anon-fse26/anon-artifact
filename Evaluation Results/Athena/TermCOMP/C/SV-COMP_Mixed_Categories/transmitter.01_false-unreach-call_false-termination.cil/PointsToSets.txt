NODE  10: <10> PSNodeType::ENTRY (points-to size: 0)
NODE  11:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE  12:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE  13:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  14: <14> PSNodeType::CALL (points-to size: 0)
NODE  15: <15> PSNodeType::ENTRY (points-to size: 0)
NODE  16:   store i32 1, i32* @m_i, align 4 (points-to size: 0)
NODE  17:   store i32 1, i32* @t1_i, align 4 (points-to size: 0)
NODE  18:   ret void (points-to size: 0)
NODE  19: init_model (points-to size: 1)
    -> init_model + 0
NODE  20: main (points-to size: 1)
    -> main + 0
NODE  21:   call void @init_model() (points-to size: 0)
NODE  22: <22> PSNodeType::CALL (points-to size: 0)
NODE  23: <23> PSNodeType::ENTRY (points-to size: 0)
NODE  24:   %kernel_st = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %kernel_st = alloca i32, align 4 + 0
NODE  25:   %tmp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp = alloca i32, align 4 + 0
NODE  26:   %tmp___0 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp___0 = alloca i32, align 4 + 0
NODE  27:   store i32 0, i32* %kernel_st, align 4 (points-to size: 0)
NODE  28: <28> PSNodeType::CALL (points-to size: 0)
NODE  29: <29> PSNodeType::ENTRY (points-to size: 0)
NODE  30:   ret void (points-to size: 0)
NODE  31: update_channels (points-to size: 1)
    -> update_channels + 0
NODE  32: start_simulation (points-to size: 1)
    -> start_simulation + 0
NODE  33:   call void @update_channels() (points-to size: 0)
NODE  34: <34> PSNodeType::CALL (points-to size: 0)
NODE  35: <35> PSNodeType::ENTRY (points-to size: 0)
NODE  36:   %0 = load i32, i32* @m_i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  37:   store i32 0, i32* @m_st, align 4 (points-to size: 0)
NODE  38:   %1 = load i32, i32* @t1_i, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  39:   store i32 2, i32* @m_st, align 4 (points-to size: 0)
NODE  40:   store i32 0, i32* @t1_st, align 4 (points-to size: 0)
NODE  41:   ret void (points-to size: 0)
NODE  42:   store i32 2, i32* @t1_st, align 4 (points-to size: 0)
NODE  43: init_threads (points-to size: 1)
    -> init_threads + 0
NODE  44:   call void @init_threads() (points-to size: 0)
NODE  45: <45> PSNodeType::CALL (points-to size: 0)
NODE  46: <46> PSNodeType::ENTRY (points-to size: 0)
NODE  47:   %0 = load i32, i32* @M_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  48:   store i32 1, i32* @M_E, align 4 (points-to size: 0)
NODE  49:   %1 = load i32, i32* @T1_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  50:   store i32 1, i32* @T1_E, align 4 (points-to size: 0)
NODE  51:   %2 = load i32, i32* @E_1, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  52:   store i32 1, i32* @E_1, align 4 (points-to size: 0)
NODE  53:   ret void (points-to size: 0)
NODE  54: fire_delta_events (points-to size: 1)
    -> fire_delta_events + 0
NODE  55:   call void @fire_delta_events() (points-to size: 0)
NODE  56: <56> PSNodeType::CALL (points-to size: 0)
NODE  57: <57> PSNodeType::ENTRY (points-to size: 0)
NODE  58:   %tmp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp = alloca i32, align 4 + 0
NODE  59:   %tmp___0 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp___0 = alloca i32, align 4 + 0
NODE  60: <60> PSNodeType::CALL (points-to size: 0)
NODE  61: <61> PSNodeType::ENTRY (points-to size: 0)
NODE  62:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE  63:   %0 = load i32, i32* @m_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  64:   %1 = load i32, i32* @M_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  65:   %2 = load i32, i32* %__retres1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  66:   ret i32 %2 (points-to size: 0)
NODE  67:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE  68:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE  69: is_master_triggered (points-to size: 1)
    -> is_master_triggered + 0
NODE  70: activate_threads (points-to size: 1)
    -> activate_threads + 0
NODE  71:   %call = call i32 @is_master_triggered() (points-to size: 0)
NODE  72:   store i32 %call, i32* %tmp, align 4 (points-to size: 0)
NODE  73:   %0 = load i32, i32* %tmp, align 4 (points-to size: 0)
NODE  74:   store i32 0, i32* @m_st, align 4 (points-to size: 0)
NODE  75: <75> PSNodeType::CALL (points-to size: 0)
NODE  76: <76> PSNodeType::ENTRY (points-to size: 0)
NODE  77:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE  78:   %0 = load i32, i32* @t1_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  79:   %1 = load i32, i32* @E_1, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  80:   %2 = load i32, i32* %__retres1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  81:   ret i32 %2 (points-to size: 0)
NODE  82:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE  83:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE  84: is_transmit1_triggered (points-to size: 1)
    -> is_transmit1_triggered + 0
NODE  85:   %call1 = call i32 @is_transmit1_triggered() (points-to size: 0)
NODE  86:   store i32 %call1, i32* %tmp___0, align 4 (points-to size: 0)
NODE  87:   %1 = load i32, i32* %tmp___0, align 4 (points-to size: 0)
NODE  88:   store i32 0, i32* @t1_st, align 4 (points-to size: 0)
NODE  89:   ret void (points-to size: 0)
NODE  90:   call void @activate_threads() (points-to size: 0)
NODE  91: <91> PSNodeType::CALL (points-to size: 0)
NODE  92: <92> PSNodeType::ENTRY (points-to size: 0)
NODE  93:   %0 = load i32, i32* @M_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  94:   store i32 2, i32* @M_E, align 4 (points-to size: 0)
NODE  95:   %1 = load i32, i32* @T1_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  96:   store i32 2, i32* @T1_E, align 4 (points-to size: 0)
NODE  97:   %2 = load i32, i32* @E_1, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  98:   store i32 2, i32* @E_1, align 4 (points-to size: 0)
NODE  99:   ret void (points-to size: 0)
NODE 100: reset_delta_events (points-to size: 1)
    -> reset_delta_events + 0
NODE 101:   call void @reset_delta_events() (points-to size: 0)
NODE 102:   store i32 1, i32* %kernel_st, align 4 (points-to size: 0)
NODE 103: <103> PSNodeType::CALL (points-to size: 0)
NODE 104: <104> PSNodeType::ENTRY (points-to size: 0)
NODE 105:   %tmp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp = alloca i32, align 4 + 0
NODE 106:   %tmp_ndt_1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp_ndt_1 = alloca i32, align 4 + 0
NODE 107:   %tmp_ndt_2 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp_ndt_2 = alloca i32, align 4 + 0
NODE 108: <108> PSNodeType::CALL (points-to size: 0)
NODE 109: <109> PSNodeType::ENTRY (points-to size: 0)
NODE 110:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE 111:   %0 = load i32, i32* @m_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 112:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 113:   %2 = load i32, i32* %__retres1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 114:   ret i32 %2 (points-to size: 0)
NODE 115:   %1 = load i32, i32* @t1_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 116:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 117:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE 118: exists_runnable_thread (points-to size: 1)
    -> exists_runnable_thread + 0
NODE 119: eval (points-to size: 1)
    -> eval + 0
NODE 120:   %call = call i32 @exists_runnable_thread() (points-to size: 0)
NODE 121:   store i32 %call, i32* %tmp, align 4 (points-to size: 0)
NODE 122:   %0 = load i32, i32* %tmp, align 4 (points-to size: 0)
NODE 123:   %1 = load i32, i32* @m_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 124:   ret void (points-to size: 0)
NODE 125:   %call2 = call i32 (...) @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 126:   store i32 %call2, i32* %tmp_ndt_1, align 4 (points-to size: 0)
NODE 127:   %2 = load i32, i32* %tmp_ndt_1, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 128:   %3 = load i32, i32* @t1_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 129:   store i32 1, i32* @m_st, align 4 (points-to size: 0)
NODE 130: <130> PSNodeType::CALL (points-to size: 0)
NODE 131: <131> PSNodeType::ENTRY (points-to size: 0)
NODE 132:   %0 = load i32, i32* @m_pc, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 133:   %1 = load i32, i32* @m_pc, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 134:   store i32 1, i32* @m_pc, align 4 (points-to size: 0)
NODE 135:   store i32 2, i32* @m_st, align 4 (points-to size: 0)
NODE 136:   store i32 1, i32* @E_1, align 4 (points-to size: 0)
NODE 137: <137> PSNodeType::CALL (points-to size: 0)
NODE 138: <138> PSNodeType::ENTRY (points-to size: 0)
NODE 139: <139> PSNodeType::CALL (points-to size: 0)
NODE 140: immediate_notify (points-to size: 1)
    -> immediate_notify + 0
NODE 141:   call void @activate_threads() (points-to size: 0)
NODE 142:   ret void (points-to size: 0)
NODE 143: master (points-to size: 1)
    -> master + 0
NODE 144:   call void @immediate_notify() (points-to size: 0)
NODE 145:   store i32 2, i32* @E_1, align 4 (points-to size: 0)
NODE 146:   ret void (points-to size: 0)
NODE 147:   call void @master() (points-to size: 0)
NODE 148:   %call11 = call i32 (...) @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 149:   store i32 %call11, i32* %tmp_ndt_2, align 4 (points-to size: 0)
NODE 150:   %4 = load i32, i32* %tmp_ndt_2, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 151:   store i32 1, i32* @t1_st, align 4 (points-to size: 0)
NODE 152: <152> PSNodeType::CALL (points-to size: 0)
NODE 153: <153> PSNodeType::ENTRY (points-to size: 0)
NODE 154:   %0 = load i32, i32* @t1_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 155:   %1 = load i32, i32* @t1_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 156:   store i32 1, i32* @t1_pc, align 4 (points-to size: 0)
NODE 157:   store i32 2, i32* @t1_st, align 4 (points-to size: 0)
NODE 158:   ret void (points-to size: 0)
NODE 159: <159> PSNodeType::CALL (points-to size: 0)
NODE 160: <160> PSNodeType::ENTRY (points-to size: 0)
NODE 161: error (points-to size: 1)
    -> error + 0
NODE 162: transmit1 (points-to size: 1)
    -> transmit1 + 0
NODE 163:   call void @error() (points-to size: 0)
NODE 164:   call void @transmit1() (points-to size: 0)
NODE 165:   call void @eval() (points-to size: 0)
NODE 166:   store i32 2, i32* %kernel_st, align 4 (points-to size: 0)
NODE 167: <167> PSNodeType::CALL (points-to size: 0)
NODE 168:   call void @update_channels() (points-to size: 0)
NODE 169:   store i32 3, i32* %kernel_st, align 4 (points-to size: 0)
NODE 170: <170> PSNodeType::CALL (points-to size: 0)
NODE 171:   call void @fire_delta_events() (points-to size: 0)
NODE 172: <172> PSNodeType::CALL (points-to size: 0)
NODE 173:   call void @activate_threads() (points-to size: 0)
NODE 174: <174> PSNodeType::CALL (points-to size: 0)
NODE 175:   call void @reset_delta_events() (points-to size: 0)
NODE 176: <176> PSNodeType::CALL (points-to size: 0)
NODE 177:   %call = call i32 @exists_runnable_thread() (points-to size: 0)
NODE 178:   store i32 %call, i32* %tmp, align 4 (points-to size: 0)
NODE 179:   %0 = load i32, i32* %tmp, align 4 (points-to size: 0)
NODE 180:   store i32 4, i32* %kernel_st, align 4 (points-to size: 0)
NODE 181: <181> PSNodeType::CALL (points-to size: 0)
NODE 182: <182> PSNodeType::ENTRY (points-to size: 0)
NODE 183:   store i32 1, i32* @M_E, align 4 (points-to size: 0)
NODE 184:   ret void (points-to size: 0)
NODE 185: fire_time_events (points-to size: 1)
    -> fire_time_events + 0
NODE 186:   call void @fire_time_events() (points-to size: 0)
NODE 187: <187> PSNodeType::CALL (points-to size: 0)
NODE 188:   call void @activate_threads() (points-to size: 0)
NODE 189: <189> PSNodeType::CALL (points-to size: 0)
NODE 190: <190> PSNodeType::ENTRY (points-to size: 0)
NODE 191:   %0 = load i32, i32* @M_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 192:   store i32 2, i32* @M_E, align 4 (points-to size: 0)
NODE 193:   %1 = load i32, i32* @T1_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 194:   store i32 2, i32* @T1_E, align 4 (points-to size: 0)
NODE 195:   %2 = load i32, i32* @E_1, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 196:   store i32 2, i32* @E_1, align 4 (points-to size: 0)
NODE 197:   ret void (points-to size: 0)
NODE 198: reset_time_events (points-to size: 1)
    -> reset_time_events + 0
NODE 199:   call void @reset_time_events() (points-to size: 0)
NODE 200: <200> PSNodeType::CALL (points-to size: 0)
NODE 201: <201> PSNodeType::ENTRY (points-to size: 0)
NODE 202:   %tmp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp = alloca i32, align 4 + 0
NODE 203:   %__retres2 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres2 = alloca i32, align 4 + 0
NODE 204: <204> PSNodeType::CALL (points-to size: 0)
NODE 205: stop_simulation (points-to size: 1)
    -> stop_simulation + 0
NODE 206:   %call = call i32 @exists_runnable_thread() (points-to size: 0)
NODE 207:   store i32 %call, i32* %tmp, align 4 (points-to size: 0)
NODE 208:   %0 = load i32, i32* %tmp, align 4 (points-to size: 0)
NODE 209:   store i32 0, i32* %__retres2, align 4 (points-to size: 0)
NODE 210:   %1 = load i32, i32* %__retres2, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 211:   ret i32 %1 (points-to size: 0)
NODE 212:   store i32 1, i32* %__retres2, align 4 (points-to size: 0)
NODE 213:   %call1 = call i32 @stop_simulation() (points-to size: 0)
NODE 214:   store i32 %call1, i32* %tmp___0, align 4 (points-to size: 0)
NODE 215:   %1 = load i32, i32* %tmp___0, align 4 (points-to size: 0)
NODE 216:   ret void (points-to size: 0)
NODE 217:   call void @start_simulation() (points-to size: 0)
NODE 218:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE 219:   %0 = load i32, i32* %__retres1, align 4 (points-to size: 1)
    -> null + 0
NODE 220:   ret i32 %0 (points-to size: 0)
