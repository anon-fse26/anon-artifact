NODE  35: <35> PSNodeType::ENTRY (points-to size: 0)
NODE  36:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE  37:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE  38:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  39: <39> PSNodeType::CALL (points-to size: 0)
NODE  40: <40> PSNodeType::ENTRY (points-to size: 0)
NODE  41:   store i32 1, i32* @m_i, align 4 (points-to size: 0)
NODE  42:   store i32 1, i32* @t1_i, align 4 (points-to size: 0)
NODE  43:   store i32 1, i32* @t2_i, align 4 (points-to size: 0)
NODE  44:   store i32 1, i32* @t3_i, align 4 (points-to size: 0)
NODE  45:   store i32 1, i32* @t4_i, align 4 (points-to size: 0)
NODE  46:   store i32 1, i32* @t5_i, align 4 (points-to size: 0)
NODE  47:   store i32 1, i32* @t6_i, align 4 (points-to size: 0)
NODE  48:   ret void (points-to size: 0)
NODE  49: init_model (points-to size: 1)
    -> init_model + 0
NODE  50: main (points-to size: 1)
    -> main + 0
NODE  51:   call void @init_model() (points-to size: 0)
NODE  52: <52> PSNodeType::CALL (points-to size: 0)
NODE  53: <53> PSNodeType::ENTRY (points-to size: 0)
NODE  54:   %kernel_st = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %kernel_st = alloca i32, align 4 + 0
NODE  55:   %tmp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp = alloca i32, align 4 + 0
NODE  56:   %tmp___0 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp___0 = alloca i32, align 4 + 0
NODE  57:   store i32 0, i32* %kernel_st, align 4 (points-to size: 0)
NODE  58: <58> PSNodeType::CALL (points-to size: 0)
NODE  59: <59> PSNodeType::ENTRY (points-to size: 0)
NODE  60:   ret void (points-to size: 0)
NODE  61: update_channels (points-to size: 1)
    -> update_channels + 0
NODE  62: start_simulation (points-to size: 1)
    -> start_simulation + 0
NODE  63:   call void @update_channels() (points-to size: 0)
NODE  64: <64> PSNodeType::CALL (points-to size: 0)
NODE  65: <65> PSNodeType::ENTRY (points-to size: 0)
NODE  66:   %0 = load i32, i32* @m_i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  67:   store i32 0, i32* @m_st, align 4 (points-to size: 0)
NODE  68:   %1 = load i32, i32* @t1_i, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  69:   store i32 2, i32* @m_st, align 4 (points-to size: 0)
NODE  70:   store i32 0, i32* @t1_st, align 4 (points-to size: 0)
NODE  71:   %2 = load i32, i32* @t2_i, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  72:   store i32 2, i32* @t1_st, align 4 (points-to size: 0)
NODE  73:   store i32 0, i32* @t2_st, align 4 (points-to size: 0)
NODE  74:   %3 = load i32, i32* @t3_i, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  75:   store i32 2, i32* @t2_st, align 4 (points-to size: 0)
NODE  76:   store i32 0, i32* @t3_st, align 4 (points-to size: 0)
NODE  77:   %4 = load i32, i32* @t4_i, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  78:   store i32 2, i32* @t3_st, align 4 (points-to size: 0)
NODE  79:   store i32 0, i32* @t4_st, align 4 (points-to size: 0)
NODE  80:   %5 = load i32, i32* @t5_i, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  81:   store i32 2, i32* @t4_st, align 4 (points-to size: 0)
NODE  82:   store i32 0, i32* @t5_st, align 4 (points-to size: 0)
NODE  83:   %6 = load i32, i32* @t6_i, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  84:   store i32 2, i32* @t5_st, align 4 (points-to size: 0)
NODE  85:   store i32 0, i32* @t6_st, align 4 (points-to size: 0)
NODE  86:   ret void (points-to size: 0)
NODE  87:   store i32 2, i32* @t6_st, align 4 (points-to size: 0)
NODE  88: init_threads (points-to size: 1)
    -> init_threads + 0
NODE  89:   call void @init_threads() (points-to size: 0)
NODE  90: <90> PSNodeType::CALL (points-to size: 0)
NODE  91: <91> PSNodeType::ENTRY (points-to size: 0)
NODE  92:   %0 = load i32, i32* @M_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  93:   store i32 1, i32* @M_E, align 4 (points-to size: 0)
NODE  94:   %1 = load i32, i32* @T1_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  95:   store i32 1, i32* @T1_E, align 4 (points-to size: 0)
NODE  96:   %2 = load i32, i32* @T2_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  97:   store i32 1, i32* @T2_E, align 4 (points-to size: 0)
NODE  98:   %3 = load i32, i32* @T3_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  99:   store i32 1, i32* @T3_E, align 4 (points-to size: 0)
NODE 100:   %4 = load i32, i32* @T4_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 101:   store i32 1, i32* @T4_E, align 4 (points-to size: 0)
NODE 102:   %5 = load i32, i32* @T5_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 103:   store i32 1, i32* @T5_E, align 4 (points-to size: 0)
NODE 104:   %6 = load i32, i32* @T6_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 105:   store i32 1, i32* @T6_E, align 4 (points-to size: 0)
NODE 106:   %7 = load i32, i32* @E_1, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 107:   store i32 1, i32* @E_1, align 4 (points-to size: 0)
NODE 108:   %8 = load i32, i32* @E_2, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 109:   store i32 1, i32* @E_2, align 4 (points-to size: 0)
NODE 110:   %9 = load i32, i32* @E_3, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 111:   store i32 1, i32* @E_3, align 4 (points-to size: 0)
NODE 112:   %10 = load i32, i32* @E_4, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 113:   store i32 1, i32* @E_4, align 4 (points-to size: 0)
NODE 114:   %11 = load i32, i32* @E_5, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 115:   store i32 1, i32* @E_5, align 4 (points-to size: 0)
NODE 116:   %12 = load i32, i32* @E_6, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 117:   store i32 1, i32* @E_6, align 4 (points-to size: 0)
NODE 118:   ret void (points-to size: 0)
NODE 119: fire_delta_events (points-to size: 1)
    -> fire_delta_events + 0
NODE 120:   call void @fire_delta_events() (points-to size: 0)
NODE 121: <121> PSNodeType::CALL (points-to size: 0)
NODE 122: <122> PSNodeType::ENTRY (points-to size: 0)
NODE 123:   %tmp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp = alloca i32, align 4 + 0
NODE 124:   %tmp___0 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp___0 = alloca i32, align 4 + 0
NODE 125:   %tmp___1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp___1 = alloca i32, align 4 + 0
NODE 126:   %tmp___2 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp___2 = alloca i32, align 4 + 0
NODE 127:   %tmp___3 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp___3 = alloca i32, align 4 + 0
NODE 128:   %tmp___4 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp___4 = alloca i32, align 4 + 0
NODE 129:   %tmp___5 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp___5 = alloca i32, align 4 + 0
NODE 130: <130> PSNodeType::CALL (points-to size: 0)
NODE 131: <131> PSNodeType::ENTRY (points-to size: 0)
NODE 132:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE 133:   %0 = load i32, i32* @m_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 134:   %1 = load i32, i32* @M_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 135:   %2 = load i32, i32* %__retres1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 136:   ret i32 %2 (points-to size: 0)
NODE 137:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE 138:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 139: is_master_triggered (points-to size: 1)
    -> is_master_triggered + 0
NODE 140: activate_threads (points-to size: 1)
    -> activate_threads + 0
NODE 141:   %call = call i32 @is_master_triggered() (points-to size: 0)
NODE 142:   store i32 %call, i32* %tmp, align 4 (points-to size: 0)
NODE 143:   %0 = load i32, i32* %tmp, align 4 (points-to size: 0)
NODE 144:   store i32 0, i32* @m_st, align 4 (points-to size: 0)
NODE 145: <145> PSNodeType::CALL (points-to size: 0)
NODE 146: <146> PSNodeType::ENTRY (points-to size: 0)
NODE 147:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE 148:   %0 = load i32, i32* @t1_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 149:   %1 = load i32, i32* @E_1, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 150:   %2 = load i32, i32* %__retres1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 151:   ret i32 %2 (points-to size: 0)
NODE 152:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE 153:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 154: is_transmit1_triggered (points-to size: 1)
    -> is_transmit1_triggered + 0
NODE 155:   %call1 = call i32 @is_transmit1_triggered() (points-to size: 0)
NODE 156:   store i32 %call1, i32* %tmp___0, align 4 (points-to size: 0)
NODE 157:   %1 = load i32, i32* %tmp___0, align 4 (points-to size: 0)
NODE 158:   store i32 0, i32* @t1_st, align 4 (points-to size: 0)
NODE 159: <159> PSNodeType::CALL (points-to size: 0)
NODE 160: <160> PSNodeType::ENTRY (points-to size: 0)
NODE 161:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE 162:   %0 = load i32, i32* @t2_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 163:   %1 = load i32, i32* @E_2, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 164:   %2 = load i32, i32* %__retres1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 165:   ret i32 %2 (points-to size: 0)
NODE 166:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE 167:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 168: is_transmit2_triggered (points-to size: 1)
    -> is_transmit2_triggered + 0
NODE 169:   %call6 = call i32 @is_transmit2_triggered() (points-to size: 0)
NODE 170:   store i32 %call6, i32* %tmp___1, align 4 (points-to size: 0)
NODE 171:   %2 = load i32, i32* %tmp___1, align 4 (points-to size: 0)
NODE 172:   store i32 0, i32* @t2_st, align 4 (points-to size: 0)
NODE 173: <173> PSNodeType::CALL (points-to size: 0)
NODE 174: <174> PSNodeType::ENTRY (points-to size: 0)
NODE 175:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE 176:   %0 = load i32, i32* @t3_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 177:   %1 = load i32, i32* @E_3, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 178:   %2 = load i32, i32* %__retres1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 179:   ret i32 %2 (points-to size: 0)
NODE 180:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE 181:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 182: is_transmit3_triggered (points-to size: 1)
    -> is_transmit3_triggered + 0
NODE 183:   %call11 = call i32 @is_transmit3_triggered() (points-to size: 0)
NODE 184:   store i32 %call11, i32* %tmp___2, align 4 (points-to size: 0)
NODE 185:   %3 = load i32, i32* %tmp___2, align 4 (points-to size: 0)
NODE 186:   store i32 0, i32* @t3_st, align 4 (points-to size: 0)
NODE 187: <187> PSNodeType::CALL (points-to size: 0)
NODE 188: <188> PSNodeType::ENTRY (points-to size: 0)
NODE 189:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE 190:   %0 = load i32, i32* @t4_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 191:   %1 = load i32, i32* @E_4, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 192:   %2 = load i32, i32* %__retres1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 193:   ret i32 %2 (points-to size: 0)
NODE 194:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE 195:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 196: is_transmit4_triggered (points-to size: 1)
    -> is_transmit4_triggered + 0
NODE 197:   %call16 = call i32 @is_transmit4_triggered() (points-to size: 0)
NODE 198:   store i32 %call16, i32* %tmp___3, align 4 (points-to size: 0)
NODE 199:   %4 = load i32, i32* %tmp___3, align 4 (points-to size: 0)
NODE 200:   store i32 0, i32* @t4_st, align 4 (points-to size: 0)
NODE 201: <201> PSNodeType::CALL (points-to size: 0)
NODE 202: <202> PSNodeType::ENTRY (points-to size: 0)
NODE 203:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE 204:   %0 = load i32, i32* @t5_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 205:   %1 = load i32, i32* @E_5, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 206:   %2 = load i32, i32* %__retres1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 207:   ret i32 %2 (points-to size: 0)
NODE 208:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE 209:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 210: is_transmit5_triggered (points-to size: 1)
    -> is_transmit5_triggered + 0
NODE 211:   %call21 = call i32 @is_transmit5_triggered() (points-to size: 0)
NODE 212:   store i32 %call21, i32* %tmp___4, align 4 (points-to size: 0)
NODE 213:   %5 = load i32, i32* %tmp___4, align 4 (points-to size: 0)
NODE 214:   store i32 0, i32* @t5_st, align 4 (points-to size: 0)
NODE 215: <215> PSNodeType::CALL (points-to size: 0)
NODE 216: <216> PSNodeType::ENTRY (points-to size: 0)
NODE 217:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE 218:   %0 = load i32, i32* @t6_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 219:   %1 = load i32, i32* @E_6, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 220:   %2 = load i32, i32* %__retres1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 221:   ret i32 %2 (points-to size: 0)
NODE 222:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE 223:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 224: is_transmit6_triggered (points-to size: 1)
    -> is_transmit6_triggered + 0
NODE 225:   %call26 = call i32 @is_transmit6_triggered() (points-to size: 0)
NODE 226:   store i32 %call26, i32* %tmp___5, align 4 (points-to size: 0)
NODE 227:   %6 = load i32, i32* %tmp___5, align 4 (points-to size: 0)
NODE 228:   store i32 0, i32* @t6_st, align 4 (points-to size: 0)
NODE 229:   ret void (points-to size: 0)
NODE 230:   call void @activate_threads() (points-to size: 0)
NODE 231: <231> PSNodeType::CALL (points-to size: 0)
NODE 232: <232> PSNodeType::ENTRY (points-to size: 0)
NODE 233:   %0 = load i32, i32* @M_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 234:   store i32 2, i32* @M_E, align 4 (points-to size: 0)
NODE 235:   %1 = load i32, i32* @T1_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 236:   store i32 2, i32* @T1_E, align 4 (points-to size: 0)
NODE 237:   %2 = load i32, i32* @T2_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 238:   store i32 2, i32* @T2_E, align 4 (points-to size: 0)
NODE 239:   %3 = load i32, i32* @T3_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 240:   store i32 2, i32* @T3_E, align 4 (points-to size: 0)
NODE 241:   %4 = load i32, i32* @T4_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 242:   store i32 2, i32* @T4_E, align 4 (points-to size: 0)
NODE 243:   %5 = load i32, i32* @T5_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 244:   store i32 2, i32* @T5_E, align 4 (points-to size: 0)
NODE 245:   %6 = load i32, i32* @T6_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 246:   store i32 2, i32* @T6_E, align 4 (points-to size: 0)
NODE 247:   %7 = load i32, i32* @E_1, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 248:   store i32 2, i32* @E_1, align 4 (points-to size: 0)
NODE 249:   %8 = load i32, i32* @E_2, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 250:   store i32 2, i32* @E_2, align 4 (points-to size: 0)
NODE 251:   %9 = load i32, i32* @E_3, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 252:   store i32 2, i32* @E_3, align 4 (points-to size: 0)
NODE 253:   %10 = load i32, i32* @E_4, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 254:   store i32 2, i32* @E_4, align 4 (points-to size: 0)
NODE 255:   %11 = load i32, i32* @E_5, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 256:   store i32 2, i32* @E_5, align 4 (points-to size: 0)
NODE 257:   %12 = load i32, i32* @E_6, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 258:   store i32 2, i32* @E_6, align 4 (points-to size: 0)
NODE 259:   ret void (points-to size: 0)
NODE 260: reset_delta_events (points-to size: 1)
    -> reset_delta_events + 0
NODE 261:   call void @reset_delta_events() (points-to size: 0)
NODE 262:   store i32 1, i32* %kernel_st, align 4 (points-to size: 0)
NODE 263: <263> PSNodeType::CALL (points-to size: 0)
NODE 264: <264> PSNodeType::ENTRY (points-to size: 0)
NODE 265:   %tmp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp = alloca i32, align 4 + 0
NODE 266:   %tmp_ndt_1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp_ndt_1 = alloca i32, align 4 + 0
NODE 267:   %tmp_ndt_2 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp_ndt_2 = alloca i32, align 4 + 0
NODE 268:   %tmp_ndt_3 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp_ndt_3 = alloca i32, align 4 + 0
NODE 269:   %tmp_ndt_4 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp_ndt_4 = alloca i32, align 4 + 0
NODE 270:   %tmp_ndt_5 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp_ndt_5 = alloca i32, align 4 + 0
NODE 271:   %tmp_ndt_6 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp_ndt_6 = alloca i32, align 4 + 0
NODE 272:   %tmp_ndt_7 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp_ndt_7 = alloca i32, align 4 + 0
NODE 273: <273> PSNodeType::CALL (points-to size: 0)
NODE 274: <274> PSNodeType::ENTRY (points-to size: 0)
NODE 275:   %__retres1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres1 = alloca i32, align 4 + 0
NODE 276:   %0 = load i32, i32* @m_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 277:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 278:   %7 = load i32, i32* %__retres1, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 279:   ret i32 %7 (points-to size: 0)
NODE 280:   %1 = load i32, i32* @t1_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 281:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 282:   %2 = load i32, i32* @t2_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 283:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 284:   %3 = load i32, i32* @t3_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 285:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 286:   %4 = load i32, i32* @t4_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 287:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 288:   %5 = load i32, i32* @t5_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 289:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 290:   %6 = load i32, i32* @t6_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 291:   store i32 1, i32* %__retres1, align 4 (points-to size: 0)
NODE 292:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE 293: exists_runnable_thread (points-to size: 1)
    -> exists_runnable_thread + 0
NODE 294: eval (points-to size: 1)
    -> eval + 0
NODE 295:   %call = call i32 @exists_runnable_thread() (points-to size: 0)
NODE 296:   store i32 %call, i32* %tmp, align 4 (points-to size: 0)
NODE 297:   %0 = load i32, i32* %tmp, align 4 (points-to size: 0)
NODE 298:   %1 = load i32, i32* @m_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 299:   ret void (points-to size: 0)
NODE 300:   %call2 = call i32 (...) @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 301:   store i32 %call2, i32* %tmp_ndt_1, align 4 (points-to size: 0)
NODE 302:   %2 = load i32, i32* %tmp_ndt_1, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 303:   %3 = load i32, i32* @t1_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 304:   store i32 1, i32* @m_st, align 4 (points-to size: 0)
NODE 305: <305> PSNodeType::CALL (points-to size: 0)
NODE 306: <306> PSNodeType::ENTRY (points-to size: 0)
NODE 307:   %0 = load i32, i32* @m_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 308:   %1 = load i32, i32* @m_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 309:   store i32 1, i32* @m_pc, align 4 (points-to size: 0)
NODE 310:   store i32 2, i32* @m_st, align 4 (points-to size: 0)
NODE 311:   store i32 1, i32* @E_1, align 4 (points-to size: 0)
NODE 312: <312> PSNodeType::CALL (points-to size: 0)
NODE 313: <313> PSNodeType::ENTRY (points-to size: 0)
NODE 314: <314> PSNodeType::CALL (points-to size: 0)
NODE 315: immediate_notify (points-to size: 1)
    -> immediate_notify + 0
NODE 316:   call void @activate_threads() (points-to size: 0)
NODE 317:   ret void (points-to size: 0)
NODE 318: master (points-to size: 1)
    -> master + 0
NODE 319:   call void @immediate_notify() (points-to size: 0)
NODE 320:   store i32 2, i32* @E_1, align 4 (points-to size: 0)
NODE 321:   ret void (points-to size: 0)
NODE 322:   call void @master() (points-to size: 0)
NODE 323:   %call11 = call i32 (...) @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 324:   store i32 %call11, i32* %tmp_ndt_2, align 4 (points-to size: 0)
NODE 325:   %4 = load i32, i32* %tmp_ndt_2, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 326:   %5 = load i32, i32* @t2_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 327:   store i32 1, i32* @t1_st, align 4 (points-to size: 0)
NODE 328: <328> PSNodeType::CALL (points-to size: 0)
NODE 329: <329> PSNodeType::ENTRY (points-to size: 0)
NODE 330:   %0 = load i32, i32* @t1_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 331:   %1 = load i32, i32* @t1_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 332:   store i32 1, i32* @t1_pc, align 4 (points-to size: 0)
NODE 333:   store i32 2, i32* @t1_st, align 4 (points-to size: 0)
NODE 334:   ret void (points-to size: 0)
NODE 335:   store i32 1, i32* @E_2, align 4 (points-to size: 0)
NODE 336: <336> PSNodeType::CALL (points-to size: 0)
NODE 337: transmit1 (points-to size: 1)
    -> transmit1 + 0
NODE 338:   call void @immediate_notify() (points-to size: 0)
NODE 339:   store i32 2, i32* @E_2, align 4 (points-to size: 0)
NODE 340:   call void @transmit1() (points-to size: 0)
NODE 341:   %call20 = call i32 (...) @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 342:   store i32 %call20, i32* %tmp_ndt_3, align 4 (points-to size: 0)
NODE 343:   %6 = load i32, i32* %tmp_ndt_3, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 344:   %7 = load i32, i32* @t3_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 345:   store i32 1, i32* @t2_st, align 4 (points-to size: 0)
NODE 346: <346> PSNodeType::CALL (points-to size: 0)
NODE 347: <347> PSNodeType::ENTRY (points-to size: 0)
NODE 348:   %0 = load i32, i32* @t2_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 349:   %1 = load i32, i32* @t2_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 350:   store i32 1, i32* @t2_pc, align 4 (points-to size: 0)
NODE 351:   store i32 2, i32* @t2_st, align 4 (points-to size: 0)
NODE 352:   ret void (points-to size: 0)
NODE 353:   store i32 1, i32* @E_3, align 4 (points-to size: 0)
NODE 354: <354> PSNodeType::CALL (points-to size: 0)
NODE 355: transmit2 (points-to size: 1)
    -> transmit2 + 0
NODE 356:   call void @immediate_notify() (points-to size: 0)
NODE 357:   store i32 2, i32* @E_3, align 4 (points-to size: 0)
NODE 358:   call void @transmit2() (points-to size: 0)
NODE 359:   %call29 = call i32 (...) @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 360:   store i32 %call29, i32* %tmp_ndt_4, align 4 (points-to size: 0)
NODE 361:   %8 = load i32, i32* %tmp_ndt_4, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 362:   %9 = load i32, i32* @t4_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 363:   store i32 1, i32* @t3_st, align 4 (points-to size: 0)
NODE 364: <364> PSNodeType::CALL (points-to size: 0)
NODE 365: <365> PSNodeType::ENTRY (points-to size: 0)
NODE 366:   %0 = load i32, i32* @t3_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 367:   %1 = load i32, i32* @t3_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 368:   store i32 1, i32* @t3_pc, align 4 (points-to size: 0)
NODE 369:   store i32 2, i32* @t3_st, align 4 (points-to size: 0)
NODE 370:   ret void (points-to size: 0)
NODE 371:   store i32 1, i32* @E_4, align 4 (points-to size: 0)
NODE 372: <372> PSNodeType::CALL (points-to size: 0)
NODE 373: transmit3 (points-to size: 1)
    -> transmit3 + 0
NODE 374:   call void @immediate_notify() (points-to size: 0)
NODE 375:   store i32 2, i32* @E_4, align 4 (points-to size: 0)
NODE 376:   call void @transmit3() (points-to size: 0)
NODE 377:   %call38 = call i32 (...) @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 378:   store i32 %call38, i32* %tmp_ndt_5, align 4 (points-to size: 0)
NODE 379:   %10 = load i32, i32* %tmp_ndt_5, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 380:   %11 = load i32, i32* @t5_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 381:   store i32 1, i32* @t4_st, align 4 (points-to size: 0)
NODE 382: <382> PSNodeType::CALL (points-to size: 0)
NODE 383: <383> PSNodeType::ENTRY (points-to size: 0)
NODE 384:   %0 = load i32, i32* @t4_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 385:   %1 = load i32, i32* @t4_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 386:   store i32 1, i32* @t4_pc, align 4 (points-to size: 0)
NODE 387:   store i32 2, i32* @t4_st, align 4 (points-to size: 0)
NODE 388:   ret void (points-to size: 0)
NODE 389:   store i32 1, i32* @E_5, align 4 (points-to size: 0)
NODE 390: <390> PSNodeType::CALL (points-to size: 0)
NODE 391: transmit4 (points-to size: 1)
    -> transmit4 + 0
NODE 392:   call void @immediate_notify() (points-to size: 0)
NODE 393:   store i32 2, i32* @E_5, align 4 (points-to size: 0)
NODE 394:   call void @transmit4() (points-to size: 0)
NODE 395:   %call47 = call i32 (...) @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 396:   store i32 %call47, i32* %tmp_ndt_6, align 4 (points-to size: 0)
NODE 397:   %12 = load i32, i32* %tmp_ndt_6, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 398:   %13 = load i32, i32* @t6_st, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 399:   store i32 1, i32* @t5_st, align 4 (points-to size: 0)
NODE 400: <400> PSNodeType::CALL (points-to size: 0)
NODE 401: <401> PSNodeType::ENTRY (points-to size: 0)
NODE 402:   %0 = load i32, i32* @t5_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 403:   %1 = load i32, i32* @t5_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 404:   store i32 1, i32* @t5_pc, align 4 (points-to size: 0)
NODE 405:   store i32 2, i32* @t5_st, align 4 (points-to size: 0)
NODE 406:   ret void (points-to size: 0)
NODE 407:   store i32 1, i32* @E_6, align 4 (points-to size: 0)
NODE 408: <408> PSNodeType::CALL (points-to size: 0)
NODE 409: transmit5 (points-to size: 1)
    -> transmit5 + 0
NODE 410:   call void @immediate_notify() (points-to size: 0)
NODE 411:   store i32 2, i32* @E_6, align 4 (points-to size: 0)
NODE 412:   call void @transmit5() (points-to size: 0)
NODE 413:   %call56 = call i32 (...) @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 414:   store i32 %call56, i32* %tmp_ndt_7, align 4 (points-to size: 0)
NODE 415:   %14 = load i32, i32* %tmp_ndt_7, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 416:   store i32 1, i32* @t6_st, align 4 (points-to size: 0)
NODE 417: <417> PSNodeType::CALL (points-to size: 0)
NODE 418: <418> PSNodeType::ENTRY (points-to size: 0)
NODE 419:   %0 = load i32, i32* @t6_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 420:   %1 = load i32, i32* @t6_pc, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 421:   store i32 1, i32* @t6_pc, align 4 (points-to size: 0)
NODE 422:   store i32 2, i32* @t6_st, align 4 (points-to size: 0)
NODE 423:   ret void (points-to size: 0)
NODE 424: <424> PSNodeType::CALL (points-to size: 0)
NODE 425: <425> PSNodeType::ENTRY (points-to size: 0)
NODE 426: error (points-to size: 1)
    -> error + 0
NODE 427: transmit6 (points-to size: 1)
    -> transmit6 + 0
NODE 428:   call void @error() (points-to size: 0)
NODE 429:   call void @transmit6() (points-to size: 0)
NODE 430:   call void @eval() (points-to size: 0)
NODE 431:   store i32 2, i32* %kernel_st, align 4 (points-to size: 0)
NODE 432: <432> PSNodeType::CALL (points-to size: 0)
NODE 433:   call void @update_channels() (points-to size: 0)
NODE 434:   store i32 3, i32* %kernel_st, align 4 (points-to size: 0)
NODE 435: <435> PSNodeType::CALL (points-to size: 0)
NODE 436:   call void @fire_delta_events() (points-to size: 0)
NODE 437: <437> PSNodeType::CALL (points-to size: 0)
NODE 438:   call void @activate_threads() (points-to size: 0)
NODE 439: <439> PSNodeType::CALL (points-to size: 0)
NODE 440:   call void @reset_delta_events() (points-to size: 0)
NODE 441: <441> PSNodeType::CALL (points-to size: 0)
NODE 442:   %call = call i32 @exists_runnable_thread() (points-to size: 0)
NODE 443:   store i32 %call, i32* %tmp, align 4 (points-to size: 0)
NODE 444:   %0 = load i32, i32* %tmp, align 4 (points-to size: 0)
NODE 445:   store i32 4, i32* %kernel_st, align 4 (points-to size: 0)
NODE 446: <446> PSNodeType::CALL (points-to size: 0)
NODE 447: <447> PSNodeType::ENTRY (points-to size: 0)
NODE 448:   store i32 1, i32* @M_E, align 4 (points-to size: 0)
NODE 449:   ret void (points-to size: 0)
NODE 450: fire_time_events (points-to size: 1)
    -> fire_time_events + 0
NODE 451:   call void @fire_time_events() (points-to size: 0)
NODE 452: <452> PSNodeType::CALL (points-to size: 0)
NODE 453:   call void @activate_threads() (points-to size: 0)
NODE 454: <454> PSNodeType::CALL (points-to size: 0)
NODE 455: <455> PSNodeType::ENTRY (points-to size: 0)
NODE 456:   %0 = load i32, i32* @M_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 457:   store i32 2, i32* @M_E, align 4 (points-to size: 0)
NODE 458:   %1 = load i32, i32* @T1_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 459:   store i32 2, i32* @T1_E, align 4 (points-to size: 0)
NODE 460:   %2 = load i32, i32* @T2_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 461:   store i32 2, i32* @T2_E, align 4 (points-to size: 0)
NODE 462:   %3 = load i32, i32* @T3_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 463:   store i32 2, i32* @T3_E, align 4 (points-to size: 0)
NODE 464:   %4 = load i32, i32* @T4_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 465:   store i32 2, i32* @T4_E, align 4 (points-to size: 0)
NODE 466:   %5 = load i32, i32* @T5_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 467:   store i32 2, i32* @T5_E, align 4 (points-to size: 0)
NODE 468:   %6 = load i32, i32* @T6_E, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 469:   store i32 2, i32* @T6_E, align 4 (points-to size: 0)
NODE 470:   %7 = load i32, i32* @E_1, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 471:   store i32 2, i32* @E_1, align 4 (points-to size: 0)
NODE 472:   %8 = load i32, i32* @E_2, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 473:   store i32 2, i32* @E_2, align 4 (points-to size: 0)
NODE 474:   %9 = load i32, i32* @E_3, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 475:   store i32 2, i32* @E_3, align 4 (points-to size: 0)
NODE 476:   %10 = load i32, i32* @E_4, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 477:   store i32 2, i32* @E_4, align 4 (points-to size: 0)
NODE 478:   %11 = load i32, i32* @E_5, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 479:   store i32 2, i32* @E_5, align 4 (points-to size: 0)
NODE 480:   %12 = load i32, i32* @E_6, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 481:   store i32 2, i32* @E_6, align 4 (points-to size: 0)
NODE 482:   ret void (points-to size: 0)
NODE 483: reset_time_events (points-to size: 1)
    -> reset_time_events + 0
NODE 484:   call void @reset_time_events() (points-to size: 0)
NODE 485: <485> PSNodeType::CALL (points-to size: 0)
NODE 486: <486> PSNodeType::ENTRY (points-to size: 0)
NODE 487:   %tmp = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp = alloca i32, align 4 + 0
NODE 488:   %__retres2 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %__retres2 = alloca i32, align 4 + 0
NODE 489: <489> PSNodeType::CALL (points-to size: 0)
NODE 490: stop_simulation (points-to size: 1)
    -> stop_simulation + 0
NODE 491:   %call = call i32 @exists_runnable_thread() (points-to size: 0)
NODE 492:   store i32 %call, i32* %tmp, align 4 (points-to size: 0)
NODE 493:   %0 = load i32, i32* %tmp, align 4 (points-to size: 0)
NODE 494:   store i32 0, i32* %__retres2, align 4 (points-to size: 0)
NODE 495:   %1 = load i32, i32* %__retres2, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE 496:   ret i32 %1 (points-to size: 0)
NODE 497:   store i32 1, i32* %__retres2, align 4 (points-to size: 0)
NODE 498:   %call1 = call i32 @stop_simulation() (points-to size: 0)
NODE 499:   store i32 %call1, i32* %tmp___0, align 4 (points-to size: 0)
NODE 500:   %1 = load i32, i32* %tmp___0, align 4 (points-to size: 0)
NODE 501:   ret void (points-to size: 0)
NODE 502:   call void @start_simulation() (points-to size: 0)
NODE 503:   store i32 0, i32* %__retres1, align 4 (points-to size: 0)
NODE 504:   %0 = load i32, i32* %__retres1, align 4 (points-to size: 1)
    -> null + 0
NODE 505:   ret i32 %0 (points-to size: 0)
