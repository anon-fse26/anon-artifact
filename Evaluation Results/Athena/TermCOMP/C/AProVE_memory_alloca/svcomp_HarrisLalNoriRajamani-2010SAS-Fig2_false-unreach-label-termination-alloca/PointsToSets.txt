NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %d = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %d = alloca i32*, align 8 + 0
NODE   4:   %x = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %x = alloca i32*, align 8 + 0
NODE   5:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   6:   %0 = alloca i8, i64 4, align 16 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE   7:   %1 = bitcast i8* %0 to i32* (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE   8:   store i32* %1, i32** %d, align 8 (points-to size: 0)
NODE   9:   %2 = alloca i8, i64 4, align 16 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  10:   %3 = bitcast i8* %2 to i32* (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  11:   store i32* %3, i32** %x, align 8 (points-to size: 0)
NODE  12:   %4 = load i32*, i32** %d, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  13:   store i32 1, i32* %4, align 4 (points-to size: 0)
NODE  14:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  15:   %5 = load i32*, i32** %d, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  16:   %6 = load i32, i32* %5, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  17:   %sub = sub nsw i32 %6, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  18:   %7 = load i32*, i32** %d, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  19:   store i32 %sub, i32* %7, align 4 (points-to size: 0)
NODE  20:   %call1 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  21: <21> PSNodeType::CALL (points-to size: 0)
NODE  22: <22> PSNodeType::ENTRY (points-to size: 0)
NODE  23:   %y = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %y = alloca i32*, align 8 + 0
NODE  24:   %0 = alloca i8, i64 4, align 16 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  25:   %1 = bitcast i8* %0 to i32* (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  26:   store i32* %1, i32** %y, align 8 (points-to size: 0)
NODE  27:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  28:   %call1 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  29:   %10 = load i32*, i32** %y, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  30:   %11 = load i32, i32* %10, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  31:   ret i32 %11 (points-to size: 0)
NODE  32:   %call15 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  33:   %call4 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  34:   %call8 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  35:   %call18 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  36:   %call24 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  37:   %2 = load i32*, i32** %y, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  38:   store i32 0, i32* %2, align 4 (points-to size: 0)
NODE  39:   %3 = load i32*, i32** %y, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  40:   store i32 1, i32* %3, align 4 (points-to size: 0)
NODE  41:   %4 = load i32*, i32** %y, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  42:   store i32 2, i32* %4, align 4 (points-to size: 0)
NODE  43:   %5 = load i32*, i32** %y, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  44:   store i32 3, i32* %5, align 4 (points-to size: 0)
NODE  45:   %6 = load i32*, i32** %y, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  46:   store i32 4, i32* %6, align 4 (points-to size: 0)
NODE  47:   %7 = load i32*, i32** %y, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  48:   store i32 5, i32* %7, align 4 (points-to size: 0)
NODE  49:   %8 = load i32*, i32** %y, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  50:   store i32 6, i32* %8, align 4 (points-to size: 0)
NODE  51:   %9 = load i32*, i32** %y, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  52:   store i32 7, i32* %9, align 4 (points-to size: 0)
NODE  53: foo (points-to size: 1)
    -> foo + 0
NODE  54: main (points-to size: 1)
    -> main + 0
NODE  55:   %call4 = call i32 @foo() (points-to size: 0)
NODE  56:   %call6 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  57: <57> PSNodeType::CALL (points-to size: 0)
NODE  58:   %call9 = call i32 @foo() (points-to size: 0)
NODE  59:   %call11 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  60: <60> PSNodeType::CALL (points-to size: 0)
NODE  61:   %call14 = call i32 @foo() (points-to size: 0)
NODE  62:   %call16 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  63: <63> PSNodeType::CALL (points-to size: 0)
NODE  64:   %call19 = call i32 @foo() (points-to size: 0)
NODE  65:   %call21 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  66:   %8 = load i32*, i32** %d, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  67:   %9 = load i32, i32* %8, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  68:   %sub24 = sub nsw i32 %9, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  69:   %10 = load i32*, i32** %d, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  70:   store i32 %sub24, i32* %10, align 4 (points-to size: 0)
NODE  71:   %11 = load i32*, i32** %x, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  72:   %12 = load i32, i32* %11, align 4 (points-to size: 0)
NODE  73:   %13 = load i32*, i32** %x, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  74:   %14 = load i32, i32* %13, align 4 (points-to size: 0)
NODE  75:   %15 = load i32*, i32** %d, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  76:   %16 = load i32, i32* %15, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  77:   %sub26 = sub nsw i32 %14, %16 (points-to size: 0)
NODE  78:   %17 = load i32*, i32** %x, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  79:   store i32 %sub26, i32* %17, align 4 (points-to size: 0)
NODE  80:   ret i32 0 (points-to size: 1)
    -> null + 0
