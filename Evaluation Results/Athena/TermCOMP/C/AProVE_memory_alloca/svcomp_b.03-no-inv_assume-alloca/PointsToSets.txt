NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   4:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   5:   %call1 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   6: <6> PSNodeType::CALL (points-to size: 0)
NODE   7: <7> PSNodeType::ENTRY (points-to size: 0)
NODE   8: i32 %x (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   9: i32 %y (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  10:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE  11:   %x.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %x.addr = alloca i32, align 4 + 0
NODE  12:   %y.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %y.addr = alloca i32, align 4 + 0
NODE  13:   %x_ref = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %x_ref = alloca i32*, align 8 + 0
NODE  14:   %y_ref = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %y_ref = alloca i32*, align 8 + 0
NODE  15:   store i32 %x, i32* %x.addr, align 4 (points-to size: 0)
NODE  16:   store i32 %y, i32* %y.addr, align 4 (points-to size: 0)
NODE  17:   %0 = alloca i8, i64 4, align 16 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  18:   %1 = bitcast i8* %0 to i32* (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  19:   store i32* %1, i32** %x_ref, align 8 (points-to size: 0)
NODE  20:   %2 = alloca i8, i64 4, align 16 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  21:   %3 = bitcast i8* %2 to i32* (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  22:   store i32* %3, i32** %y_ref, align 8 (points-to size: 0)
NODE  23:   %4 = load i32, i32* %x.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  24:   %5 = load i32*, i32** %x_ref, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  25:   store i32 %4, i32* %5, align 4 (points-to size: 0)
NODE  26:   %6 = load i32, i32* %y.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  27:   %7 = load i32*, i32** %y_ref, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  28:   store i32 %6, i32* %7, align 4 (points-to size: 0)
NODE  29:   %8 = load i32*, i32** %x_ref, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  30:   %9 = load i32, i32* %8, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  31:   %10 = load i32*, i32** %y_ref, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  32:   %11 = load i32, i32* %10, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  33:   store i32 %11, i32* %retval, align 4 (points-to size: 0)
NODE  34:   %23 = load i32, i32* %retval, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  35:   ret i32 %23 (points-to size: 0)
NODE  36:   %12 = load i32*, i32** %x_ref, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  37:   %13 = load i32, i32* %12, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  38:   %14 = load i32*, i32** %y_ref, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  39:   %15 = load i32, i32* %14, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  40:   %16 = load i32*, i32** %y_ref, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  41:   %17 = load i32, i32* %16, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  42:   %18 = load i32*, i32** %x_ref, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  43:   %19 = load i32, i32* %18, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  44:   %add = add nsw i32 %17, %19 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  45:   %20 = load i32*, i32** %y_ref, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  46:   store i32 %add, i32* %20, align 4 (points-to size: 0)
NODE  47:   %21 = load i32*, i32** %y_ref, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  48:   %22 = load i32, i32* %21, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  49:   store i32 %22, i32* %retval, align 4 (points-to size: 0)
NODE  50: test_fun (points-to size: 1)
    -> test_fun + 0
NODE  51: main (points-to size: 1)
    -> main + 0
NODE  52:   %call2 = call i32 @test_fun(i32 %call, i32 %call1) (points-to size: 0)
NODE  53:   ret i32 %call2 (points-to size: 0)
