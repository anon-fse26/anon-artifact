NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %i = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %i = alloca i32, align 4 + 0
NODE   4:   %j = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %j = alloca i32, align 4 + 0
NODE   5:   %val = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %val = alloca i32, align 4 + 0
NODE   6:   %length = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %length = alloca i32, align 4 + 0
NODE   7:   %arr = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %arr = alloca i32*, align 8 + 0
NODE   8:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   9:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  10:   store i32 %call, i32* %length, align 4 (points-to size: 0)
NODE  11:   %0 = load i32, i32* %length, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  12:   store i32 1, i32* %length, align 4 (points-to size: 0)
NODE  13:   %1 = load i32, i32* %length, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  14:   %conv = sext i32 %1 to i64 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  15:   %mul = mul i64 %conv, 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  16:   %2 = alloca i8, i64 %mul, align 16 (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
NODE  17:   %3 = bitcast i8* %2 to i32* (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
NODE  18:   store i32* %3, i32** %arr, align 8 (points-to size: 0)
NODE  19:   %4 = load i32*, i32** %arr, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
NODE  20:   store i32 0, i32* %i, align 4 (points-to size: 0)
NODE  21:   %21 = load i32, i32* %retval, align 4 (points-to size: 1)
    -> null + 0
NODE  22:   ret i32 %21 (points-to size: 0)
NODE  23:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  24:   %5 = load i32, i32* %i, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  25:   %6 = load i32, i32* %length, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  26:   %call5 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  27:   store i32 %call5, i32* %val, align 4 (points-to size: 0)
NODE  28:   %7 = load i32, i32* %val, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  29:   store i32 0, i32* %j, align 4 (points-to size: 0)
NODE  30:   store i32 0, i32* %val, align 4 (points-to size: 0)
NODE  31:   %8 = load i32, i32* %val, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  32:   %9 = load i32*, i32** %arr, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
NODE  33:   %10 = load i32, i32* %i, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  34:   %idxprom = sext i32 %10 to i64 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  35:   %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + Offset::UNKNOWN
NODE  36:   store i32 %8, i32* %arrayidx, align 4 (points-to size: 0)
NODE  37:   %12 = load i32, i32* %j, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  38:   %13 = load i32, i32* %length, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  39:   %11 = load i32, i32* %i, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  40:   %inc = add nsw i32 %11, 1 (points-to size: 1)
    -> null + Offset::UNKNOWN
NODE  41:   store i32 %inc, i32* %i, align 4 (points-to size: 0)
NODE  42:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  43:   %14 = load i32*, i32** %arr, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
NODE  44:   %15 = load i32, i32* %j, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  45:   %idxprom14 = sext i32 %15 to i64 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  46:   %arrayidx15 = getelementptr inbounds i32, i32* %14, i64 %idxprom14 (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + Offset::UNKNOWN
NODE  47:   %16 = load i32, i32* %arrayidx15, align 4 (points-to size: 3)
    -> null + 0
    -> null + Offset::UNKNOWN
    -> unknown + Offset::UNKNOWN
NODE  48:   %17 = load i32*, i32** %arr, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
NODE  49:   %18 = load i32, i32* %j, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  50:   %idxprom18 = sext i32 %18 to i64 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  51:   %arrayidx19 = getelementptr inbounds i32, i32* %17, i64 %idxprom18 (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + Offset::UNKNOWN
NODE  52:   %19 = load i32, i32* %arrayidx19, align 4 (points-to size: 3)
    -> null + 0
    -> null + Offset::UNKNOWN
    -> unknown + Offset::UNKNOWN
NODE  53:   %dec = add nsw i32 %19, -1 (points-to size: 2)
    -> null + Offset::UNKNOWN
    -> unknown + Offset::UNKNOWN
NODE  54:   store i32 %dec, i32* %arrayidx19, align 4 (points-to size: 0)
NODE  55:   %20 = load i32, i32* %j, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  56:   %inc21 = add nsw i32 %20, 1 (points-to size: 1)
    -> null + Offset::UNKNOWN
NODE  57:   store i32 %inc21, i32* %j, align 4 (points-to size: 0)
NODE  58: main (points-to size: 1)
    -> main + 0
