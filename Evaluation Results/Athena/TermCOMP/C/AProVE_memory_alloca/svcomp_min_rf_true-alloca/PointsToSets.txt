NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %x = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %x = alloca i32*, align 8 + 0
NODE   4:   %y = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %y = alloca i32*, align 8 + 0
NODE   5:   %z = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %z = alloca i32*, align 8 + 0
NODE   6:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   7:   %0 = alloca i8, i64 4, align 16 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE   8:   %1 = bitcast i8* %0 to i32* (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE   9:   store i32* %1, i32** %x, align 8 (points-to size: 0)
NODE  10:   %2 = alloca i8, i64 4, align 16 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  11:   %3 = bitcast i8* %2 to i32* (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  12:   store i32* %3, i32** %y, align 8 (points-to size: 0)
NODE  13:   %4 = alloca i8, i64 4, align 16 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  14:   %5 = bitcast i8* %4 to i32* (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  15:   store i32* %5, i32** %z, align 8 (points-to size: 0)
NODE  16:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  17:   %6 = load i32*, i32** %x, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  18:   store i32 %call, i32* %6, align 4 (points-to size: 0)
NODE  19:   %call1 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  20:   %7 = load i32*, i32** %y, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  21:   store i32 %call1, i32* %7, align 4 (points-to size: 0)
NODE  22:   %8 = load i32*, i32** %y, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  23:   %9 = load i32, i32* %8, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  24:   %10 = load i32*, i32** %x, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  25:   %11 = load i32, i32* %10, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  26:   %12 = phi i1 [ false, %while.cond ], [ %cmp2, %land.rhs ] (points-to size: 1)
    -> null + 0
NODE  27:   %13 = load i32*, i32** %x, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  28:   %14 = load i32, i32* %13, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  29:   %15 = load i32*, i32** %y, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  30:   %16 = load i32, i32* %15, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  31:   %49 = load i32, i32* %retval, align 4 (points-to size: 1)
    -> null + 0
NODE  32:   ret i32 %49 (points-to size: 0)
NODE  33:   %17 = load i32*, i32** %y, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  34:   %18 = load i32, i32* %17, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  35:   %19 = load i32*, i32** %z, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  36:   store i32 %18, i32* %19, align 4 (points-to size: 0)
NODE  37:   %call4 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  38:   %20 = load i32*, i32** %x, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  39:   %21 = load i32, i32* %20, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  40:   %22 = load i32*, i32** %z, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  41:   store i32 %21, i32* %22, align 4 (points-to size: 0)
NODE  42:   %23 = load i32*, i32** %y, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  43:   %24 = load i32, i32* %23, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  44:   %25 = load i32*, i32** %x, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  45:   %26 = load i32, i32* %25, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  46:   %add = add nsw i32 %24, %26 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  47:   %27 = load i32*, i32** %y, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  48:   store i32 %add, i32* %27, align 4 (points-to size: 0)
NODE  49:   %28 = load i32*, i32** %z, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  50:   %29 = load i32, i32* %28, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  51:   %sub = sub nsw i32 %29, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  52:   %30 = load i32*, i32** %x, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  53:   store i32 %sub, i32* %30, align 4 (points-to size: 0)
NODE  54:   %31 = load i32*, i32** %y, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  55:   %32 = load i32, i32* %31, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  56:   %33 = load i32*, i32** %z, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  57:   %34 = load i32, i32* %33, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  58:   %add6 = add nsw i32 %32, %34 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  59:   %35 = load i32*, i32** %z, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  60:   store i32 %add6, i32* %35, align 4 (points-to size: 0)
NODE  61:   %36 = load i32*, i32** %y, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  62:   %37 = load i32, i32* %36, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  63:   %38 = load i32*, i32** %x, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  64:   %39 = load i32, i32* %38, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  65:   %add8 = add nsw i32 %37, %39 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  66:   %40 = load i32*, i32** %x, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  67:   store i32 %add8, i32* %40, align 4 (points-to size: 0)
NODE  68:   %41 = load i32*, i32** %z, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  69:   %42 = load i32, i32* %41, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  70:   %sub9 = sub nsw i32 %42, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  71:   %43 = load i32*, i32** %y, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  72:   store i32 %sub9, i32* %43, align 4 (points-to size: 0)
NODE  73:   %44 = load i32*, i32** %x, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  74:   %45 = load i32, i32* %44, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  75:   %46 = load i32*, i32** %z, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  76:   %47 = load i32, i32* %46, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  77:   %add10 = add nsw i32 %45, %47 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  78:   %48 = load i32*, i32** %z, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  79:   store i32 %add10, i32* %48, align 4 (points-to size: 0)
NODE  80: main (points-to size: 1)
    -> main + 0
