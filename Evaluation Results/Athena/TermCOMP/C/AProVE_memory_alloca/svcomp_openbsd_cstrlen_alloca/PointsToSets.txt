NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %length1 = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %length1 = alloca i32, align 4 + 0
NODE   4:   %nondetString1 = alloca i8*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %nondetString1 = alloca i8*, align 8 + 0
NODE   5:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   6:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   7:   store i32 %call, i32* %length1, align 4 (points-to size: 0)
NODE   8:   %0 = load i32, i32* %length1, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   9:   store i32 1, i32* %length1, align 4 (points-to size: 0)
NODE  10:   %1 = load i32, i32* %length1, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  11:   %conv = sext i32 %1 to i64 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  12:   %mul = mul i64 %conv, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  13:   %2 = alloca i8, i64 %mul, align 16 (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
NODE  14:   store i8* %2, i8** %nondetString1, align 8 (points-to size: 0)
NODE  15:   %3 = load i8*, i8** %nondetString1, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
NODE  16:   %4 = load i32, i32* %length1, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  17:   %sub = sub nsw i32 %4, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  18:   %idxprom = sext i32 %sub to i64 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  19:   %arrayidx = getelementptr inbounds i8, i8* %3, i64 %idxprom (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + Offset::UNKNOWN
NODE  20:   store i8 0, i8* %arrayidx, align 1 (points-to size: 0)
NODE  21:   %5 = load i8*, i8** %nondetString1, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
NODE  22: <22> PSNodeType::CALL (points-to size: 0)
NODE  23: <23> PSNodeType::ENTRY (points-to size: 0)
NODE  24: i8* %str (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
NODE  25:   %str.addr = alloca i8*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %str.addr = alloca i8*, align 8 + 0
NODE  26:   %s = alloca i8*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %s = alloca i8*, align 8 + 0
NODE  27:   store i8* %str, i8** %str.addr, align 8 (points-to size: 0)
NODE  28:   %0 = load i8*, i8** %str.addr, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
NODE  29:   store i8* %0, i8** %s, align 8 (points-to size: 0)
NODE  30:   %1 = load i8*, i8** %s, align 8 (points-to size: 2)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
    ->   %2 = alloca i8, i64 %mul, align 16 + Offset::UNKNOWN
NODE  31:   %2 = load i8, i8* %1, align 1 (points-to size: 1)
    -> null + 0
NODE  32:   %4 = load i8*, i8** %s, align 8 (points-to size: 2)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
    ->   %2 = alloca i8, i64 %mul, align 16 + Offset::UNKNOWN
NODE  33:   %5 = load i8*, i8** %str.addr, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
NODE  34:   %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64 (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + Offset::UNKNOWN
NODE  35:   %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64 (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
NODE  36:   %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + Offset::UNKNOWN
NODE  37:   %conv = trunc i64 %sub.ptr.sub to i32 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  38:   ret i32 %conv (points-to size: 0)
NODE  39:   %3 = load i8*, i8** %s, align 8 (points-to size: 2)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
    ->   %2 = alloca i8, i64 %mul, align 16 + Offset::UNKNOWN
NODE  40:   %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1 (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + Offset::UNKNOWN
NODE  41:   store i8* %incdec.ptr, i8** %s, align 8 (points-to size: 0)
NODE  42: cstrlen (points-to size: 1)
    -> cstrlen + 0
NODE  43: main (points-to size: 1)
    -> main + 0
NODE  44:   %call1 = call i32 @cstrlen(i8* %5) (points-to size: 0)
NODE  45:   ret i32 %call1 (points-to size: 0)
