NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %MAX = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %MAX = alloca i32*, align 8 + 0
NODE   4:   %a = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %a = alloca i32*, align 8 + 0
NODE   5:   %b = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %b = alloca i32*, align 8 + 0
NODE   6:   %c = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %c = alloca i32*, align 8 + 0
NODE   7:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   8:   %0 = alloca i8, i64 4, align 16 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE   9:   %1 = bitcast i8* %0 to i32* (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  10:   store i32* %1, i32** %MAX, align 8 (points-to size: 0)
NODE  11:   %2 = alloca i8, i64 4, align 16 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  12:   %3 = bitcast i8* %2 to i32* (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  13:   store i32* %3, i32** %a, align 8 (points-to size: 0)
NODE  14:   %4 = alloca i8, i64 4, align 16 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  15:   %5 = bitcast i8* %4 to i32* (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  16:   store i32* %5, i32** %b, align 8 (points-to size: 0)
NODE  17:   %6 = alloca i8, i64 4, align 16 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %6 = alloca i8, i64 4, align 16 + 0
NODE  18:   %7 = bitcast i8* %6 to i32* (points-to size: 1)
    ->   %6 = alloca i8, i64 4, align 16 + 0
NODE  19:   store i32* %7, i32** %c, align 8 (points-to size: 0)
NODE  20:   %8 = load i32*, i32** %MAX, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  21:   store i32 1000, i32* %8, align 4 (points-to size: 0)
NODE  22:   %9 = load i32*, i32** %a, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  23:   store i32 1, i32* %9, align 4 (points-to size: 0)
NODE  24:   %10 = load i32*, i32** %b, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  25:   store i32 1, i32* %10, align 4 (points-to size: 0)
NODE  26:   %11 = load i32*, i32** %c, align 8 (points-to size: 1)
    ->   %6 = alloca i8, i64 4, align 16 + 0
NODE  27:   store i32 1, i32* %11, align 4 (points-to size: 0)
NODE  28:   %12 = load i32*, i32** %a, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  29:   %13 = load i32, i32* %12, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  30:   %14 = load i32*, i32** %a, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  31:   %15 = load i32, i32* %14, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  32:   %mul = mul nsw i32 %13, %15 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  33:   %16 = load i32*, i32** %a, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  34:   %17 = load i32, i32* %16, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  35:   %mul1 = mul nsw i32 %mul, %17 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  36:   %18 = load i32*, i32** %b, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  37:   %19 = load i32, i32* %18, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  38:   %20 = load i32*, i32** %b, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  39:   %21 = load i32, i32* %20, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  40:   %mul2 = mul nsw i32 %19, %21 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  41:   %22 = load i32*, i32** %b, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  42:   %23 = load i32, i32* %22, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  43:   %mul3 = mul nsw i32 %mul2, %23 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  44:   %24 = load i32*, i32** %c, align 8 (points-to size: 1)
    ->   %6 = alloca i8, i64 4, align 16 + 0
NODE  45:   %25 = load i32, i32* %24, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  46:   %26 = load i32*, i32** %c, align 8 (points-to size: 1)
    ->   %6 = alloca i8, i64 4, align 16 + 0
NODE  47:   %27 = load i32, i32* %26, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  48:   %mul4 = mul nsw i32 %25, %27 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  49:   %28 = load i32*, i32** %c, align 8 (points-to size: 1)
    ->   %6 = alloca i8, i64 4, align 16 + 0
NODE  50:   %29 = load i32, i32* %28, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  51:   %mul5 = mul nsw i32 %mul4, %29 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  52:   %add = add nsw i32 %mul3, %mul5 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  53:   store i32 1, i32* %retval, align 4 (points-to size: 0)
NODE  54:   %50 = load i32, i32* %retval, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  55:   ret i32 %50 (points-to size: 0)
NODE  56:   %30 = load i32*, i32** %a, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  57:   %31 = load i32, i32* %30, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  58:   %inc = add nsw i32 %31, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  59:   store i32 %inc, i32* %30, align 4 (points-to size: 0)
NODE  60:   %32 = load i32*, i32** %a, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  61:   %33 = load i32, i32* %32, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  62:   %34 = load i32*, i32** %MAX, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  63:   %35 = load i32, i32* %34, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  64:   %36 = load i32*, i32** %a, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  65:   store i32 1, i32* %36, align 4 (points-to size: 0)
NODE  66:   %37 = load i32*, i32** %b, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  67:   %38 = load i32, i32* %37, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  68:   %inc8 = add nsw i32 %38, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  69:   store i32 %inc8, i32* %37, align 4 (points-to size: 0)
NODE  70:   %39 = load i32*, i32** %b, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  71:   %40 = load i32, i32* %39, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  72:   %41 = load i32*, i32** %MAX, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  73:   %42 = load i32, i32* %41, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  74:   %43 = load i32*, i32** %b, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  75:   store i32 1, i32* %43, align 4 (points-to size: 0)
NODE  76:   %44 = load i32*, i32** %c, align 8 (points-to size: 1)
    ->   %6 = alloca i8, i64 4, align 16 + 0
NODE  77:   %45 = load i32, i32* %44, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  78:   %inc12 = add nsw i32 %45, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  79:   store i32 %inc12, i32* %44, align 4 (points-to size: 0)
NODE  80:   %46 = load i32*, i32** %c, align 8 (points-to size: 1)
    ->   %6 = alloca i8, i64 4, align 16 + 0
NODE  81:   %47 = load i32, i32* %46, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  82:   %48 = load i32*, i32** %MAX, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  83:   %49 = load i32, i32* %48, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  84:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  85: main (points-to size: 1)
    -> main + 0
