NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   4:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   5:   %call1 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   6:   %call2 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   7: <7> PSNodeType::CALL (points-to size: 0)
NODE   8: <8> PSNodeType::ENTRY (points-to size: 0)
NODE   9: i32 %x (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  10: i32 %y (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  11: i32 %tmp (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  12:   %x.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %x.addr = alloca i32, align 4 + 0
NODE  13:   %y.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %y.addr = alloca i32, align 4 + 0
NODE  14:   %tmp.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp.addr = alloca i32, align 4 + 0
NODE  15:   %x_ref = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %x_ref = alloca i32*, align 8 + 0
NODE  16:   %y_ref = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %y_ref = alloca i32*, align 8 + 0
NODE  17:   %tmp_ref = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp_ref = alloca i32*, align 8 + 0
NODE  18:   store i32 %x, i32* %x.addr, align 4 (points-to size: 0)
NODE  19:   store i32 %y, i32* %y.addr, align 4 (points-to size: 0)
NODE  20:   store i32 %tmp, i32* %tmp.addr, align 4 (points-to size: 0)
NODE  21:   %0 = alloca i8, i64 4, align 16 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  22:   %1 = bitcast i8* %0 to i32* (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  23:   store i32* %1, i32** %x_ref, align 8 (points-to size: 0)
NODE  24:   %2 = alloca i8, i64 4, align 16 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  25:   %3 = bitcast i8* %2 to i32* (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  26:   store i32* %3, i32** %y_ref, align 8 (points-to size: 0)
NODE  27:   %4 = alloca i8, i64 4, align 16 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  28:   %5 = bitcast i8* %4 to i32* (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  29:   store i32* %5, i32** %tmp_ref, align 8 (points-to size: 0)
NODE  30:   %6 = load i32, i32* %x.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  31:   %7 = load i32*, i32** %x_ref, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  32:   store i32 %6, i32* %7, align 4 (points-to size: 0)
NODE  33:   %8 = load i32, i32* %y.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  34:   %9 = load i32*, i32** %y_ref, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  35:   store i32 %8, i32* %9, align 4 (points-to size: 0)
NODE  36:   %10 = load i32, i32* %tmp.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  37:   %11 = load i32*, i32** %tmp_ref, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  38:   store i32 %10, i32* %11, align 4 (points-to size: 0)
NODE  39:   %12 = load i32*, i32** %x_ref, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  40:   %13 = load i32, i32* %12, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  41:   %14 = load i32*, i32** %y_ref, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  42:   %15 = load i32, i32* %14, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  43:   %16 = load i32*, i32** %x_ref, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  44:   %17 = load i32, i32* %16, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  45:   %18 = load i32*, i32** %tmp_ref, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  46:   store i32 %17, i32* %18, align 4 (points-to size: 0)
NODE  47:   %19 = load i32*, i32** %y_ref, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  48:   %20 = load i32, i32* %19, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  49:   %21 = load i32*, i32** %x_ref, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  50:   store i32 %20, i32* %21, align 4 (points-to size: 0)
NODE  51:   %22 = load i32*, i32** %tmp_ref, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  52:   %23 = load i32, i32* %22, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  53:   %24 = load i32*, i32** %y_ref, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  54:   store i32 %23, i32* %24, align 4 (points-to size: 0)
NODE  55:   %25 = load i32*, i32** %tmp_ref, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  56:   %26 = load i32, i32* %25, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  57:   ret i32 %26 (points-to size: 0)
NODE  58: test_fun (points-to size: 1)
    -> test_fun + 0
NODE  59: main (points-to size: 1)
    -> main + 0
NODE  60:   %call3 = call i32 @test_fun(i32 %call, i32 %call1, i32 %call2) (points-to size: 0)
NODE  61:   ret i32 %call3 (points-to size: 0)
