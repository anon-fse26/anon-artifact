NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   4:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   5:   %call1 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   6:   %call2 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   7:   %call3 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   8: <8> PSNodeType::CALL (points-to size: 0)
NODE   9: <9> PSNodeType::ENTRY (points-to size: 0)
NODE  10: i32 %i (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  11: i32 %j (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  12: i32 %k (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  13: i32 %tmp (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  14:   %i.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %i.addr = alloca i32, align 4 + 0
NODE  15:   %j.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %j.addr = alloca i32, align 4 + 0
NODE  16:   %k.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %k.addr = alloca i32, align 4 + 0
NODE  17:   %tmp.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp.addr = alloca i32, align 4 + 0
NODE  18:   %i_ref = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %i_ref = alloca i32*, align 8 + 0
NODE  19:   %j_ref = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %j_ref = alloca i32*, align 8 + 0
NODE  20:   %k_ref = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %k_ref = alloca i32*, align 8 + 0
NODE  21:   %tmp_ref = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tmp_ref = alloca i32*, align 8 + 0
NODE  22:   %c = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %c = alloca i32*, align 8 + 0
NODE  23:   store i32 %i, i32* %i.addr, align 4 (points-to size: 0)
NODE  24:   store i32 %j, i32* %j.addr, align 4 (points-to size: 0)
NODE  25:   store i32 %k, i32* %k.addr, align 4 (points-to size: 0)
NODE  26:   store i32 %tmp, i32* %tmp.addr, align 4 (points-to size: 0)
NODE  27:   %0 = alloca i8, i64 4, align 16 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  28:   %1 = bitcast i8* %0 to i32* (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  29:   store i32* %1, i32** %i_ref, align 8 (points-to size: 0)
NODE  30:   %2 = alloca i8, i64 4, align 16 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  31:   %3 = bitcast i8* %2 to i32* (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  32:   store i32* %3, i32** %j_ref, align 8 (points-to size: 0)
NODE  33:   %4 = alloca i8, i64 4, align 16 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  34:   %5 = bitcast i8* %4 to i32* (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  35:   store i32* %5, i32** %k_ref, align 8 (points-to size: 0)
NODE  36:   %6 = alloca i8, i64 4, align 16 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %6 = alloca i8, i64 4, align 16 + 0
NODE  37:   %7 = bitcast i8* %6 to i32* (points-to size: 1)
    ->   %6 = alloca i8, i64 4, align 16 + 0
NODE  38:   store i32* %7, i32** %tmp_ref, align 8 (points-to size: 0)
NODE  39:   %8 = alloca i8, i64 4, align 16 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %8 = alloca i8, i64 4, align 16 + 0
NODE  40:   %9 = bitcast i8* %8 to i32* (points-to size: 1)
    ->   %8 = alloca i8, i64 4, align 16 + 0
NODE  41:   store i32* %9, i32** %c, align 8 (points-to size: 0)
NODE  42:   %10 = load i32, i32* %i.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  43:   %11 = load i32*, i32** %i_ref, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  44:   store i32 %10, i32* %11, align 4 (points-to size: 0)
NODE  45:   %12 = load i32, i32* %j.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  46:   %13 = load i32*, i32** %j_ref, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  47:   store i32 %12, i32* %13, align 4 (points-to size: 0)
NODE  48:   %14 = load i32, i32* %k.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  49:   %15 = load i32*, i32** %k_ref, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  50:   store i32 %14, i32* %15, align 4 (points-to size: 0)
NODE  51:   %16 = load i32, i32* %tmp.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  52:   %17 = load i32*, i32** %tmp_ref, align 8 (points-to size: 1)
    ->   %6 = alloca i8, i64 4, align 16 + 0
NODE  53:   store i32 %16, i32* %17, align 4 (points-to size: 0)
NODE  54:   %18 = load i32*, i32** %c, align 8 (points-to size: 1)
    ->   %8 = alloca i8, i64 4, align 16 + 0
NODE  55:   store i32 0, i32* %18, align 4 (points-to size: 0)
NODE  56:   %19 = load i32*, i32** %i_ref, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  57:   %20 = load i32, i32* %19, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  58:   %21 = load i32*, i32** %j_ref, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  59:   %22 = load i32, i32* %21, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  60:   %23 = load i32, i32* %k.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  61:   %24 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ] (points-to size: 1)
    -> null + 0
NODE  62:   %25 = load i32*, i32** %i_ref, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  63:   %26 = load i32, i32* %25, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  64:   %27 = load i32*, i32** %tmp_ref, align 8 (points-to size: 1)
    ->   %6 = alloca i8, i64 4, align 16 + 0
NODE  65:   store i32 %26, i32* %27, align 4 (points-to size: 0)
NODE  66:   %28 = load i32*, i32** %j_ref, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  67:   %29 = load i32, i32* %28, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  68:   %30 = load i32*, i32** %i_ref, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  69:   store i32 %29, i32* %30, align 4 (points-to size: 0)
NODE  70:   %31 = load i32*, i32** %tmp_ref, align 8 (points-to size: 1)
    ->   %6 = alloca i8, i64 4, align 16 + 0
NODE  71:   %32 = load i32, i32* %31, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  72:   %add = add nsw i32 %32, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  73:   %33 = load i32*, i32** %j_ref, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  74:   store i32 %add, i32* %33, align 4 (points-to size: 0)
NODE  75:   %34 = load i32*, i32** %k_ref, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  76:   %35 = load i32, i32* %34, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  77:   %sub = sub nsw i32 %35, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  78:   %36 = load i32*, i32** %k_ref, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  79:   store i32 %sub, i32* %36, align 4 (points-to size: 0)
NODE  80:   %37 = load i32*, i32** %c, align 8 (points-to size: 1)
    ->   %8 = alloca i8, i64 4, align 16 + 0
NODE  81:   %38 = load i32, i32* %37, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  82:   %add2 = add nsw i32 %38, 1 (points-to size: 1)
    -> null + Offset::UNKNOWN
NODE  83:   %39 = load i32*, i32** %c, align 8 (points-to size: 1)
    ->   %8 = alloca i8, i64 4, align 16 + 0
NODE  84:   store i32 %add2, i32* %39, align 4 (points-to size: 0)
NODE  85:   %40 = load i32*, i32** %c, align 8 (points-to size: 1)
    ->   %8 = alloca i8, i64 4, align 16 + 0
NODE  86:   %41 = load i32, i32* %40, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  87:   ret i32 %41 (points-to size: 0)
NODE  88: test_fun (points-to size: 1)
    -> test_fun + 0
NODE  89: main (points-to size: 1)
    -> main + 0
NODE  90:   %call4 = call i32 @test_fun(i32 %call, i32 %call1, i32 %call2, i32 % ... (points-to size: 0)
NODE  91:   ret i32 %call4 (points-to size: 0)
