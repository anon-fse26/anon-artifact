NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %array_size = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %array_size = alloca i32, align 4 + 0
NODE   4:   %numbers = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %numbers = alloca i32*, align 8 + 0
NODE   5:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   6:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   7:   store i32 %call, i32* %array_size, align 4 (points-to size: 0)
NODE   8:   %0 = load i32, i32* %array_size, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   9:   store i32 1, i32* %array_size, align 4 (points-to size: 0)
NODE  10:   %1 = load i32, i32* %array_size, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  11:   %conv = sext i32 %1 to i64 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  12:   %mul = mul i64 %conv, 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  13:   %2 = alloca i8, i64 %mul, align 16 (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
NODE  14:   %3 = bitcast i8* %2 to i32* (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
NODE  15:   store i32* %3, i32** %numbers, align 8 (points-to size: 0)
NODE  16:   %4 = load i32*, i32** %numbers, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
NODE  17:   %5 = load i32, i32* %array_size, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  18: <18> PSNodeType::CALL (points-to size: 0)
NODE  19: <19> PSNodeType::ENTRY (points-to size: 0)
NODE  20: i32* %a (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
NODE  21: i32 %N (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  22:   %a.addr = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %a.addr = alloca i32*, align 8 + 0
NODE  23:   %N.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %N.addr = alloca i32, align 4 + 0
NODE  24:   %best = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %best = alloca i32*, align 8 + 0
NODE  25:   %prev = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %prev = alloca i32*, align 8 + 0
NODE  26:   %i = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %i = alloca i32, align 4 + 0
NODE  27:   %j = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %j = alloca i32, align 4 + 0
NODE  28:   %max = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %max = alloca i32, align 4 + 0
NODE  29:   store i32* %a, i32** %a.addr, align 8 (points-to size: 0)
NODE  30:   store i32 %N, i32* %N.addr, align 4 (points-to size: 0)
NODE  31:   store i32 0, i32* %max, align 4 (points-to size: 0)
NODE  32:   %0 = load i32, i32* %N.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  33:   %conv = sext i32 %0 to i64 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  34:   %mul = mul i64 4, %conv (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  35:   %1 = alloca i8, i64 %mul, align 16 (points-to size: 1)
    ->   %1 = alloca i8, i64 %mul, align 16 + 0
NODE  36:   %2 = bitcast i8* %1 to i32* (points-to size: 1)
    ->   %1 = alloca i8, i64 %mul, align 16 + 0
NODE  37:   store i32* %2, i32** %best, align 8 (points-to size: 0)
NODE  38:   %3 = load i32, i32* %N.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  39:   %conv1 = sext i32 %3 to i64 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  40:   %mul2 = mul i64 4, %conv1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  41:   %4 = alloca i8, i64 %mul2, align 16 (points-to size: 1)
    ->   %4 = alloca i8, i64 %mul2, align 16 + 0
NODE  42:   %5 = bitcast i8* %4 to i32* (points-to size: 1)
    ->   %4 = alloca i8, i64 %mul2, align 16 + 0
NODE  43:   store i32* %5, i32** %prev, align 8 (points-to size: 0)
NODE  44:   store i32 0, i32* %i, align 4 (points-to size: 0)
NODE  45:   %6 = load i32, i32* %i, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  46:   %7 = load i32, i32* %N.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  47:   %8 = load i32*, i32** %best, align 8 (points-to size: 1)
    ->   %1 = alloca i8, i64 %mul, align 16 + 0
NODE  48:   %9 = load i32, i32* %i, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  49:   %idxprom = sext i32 %9 to i64 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  50:   %arrayidx = getelementptr inbounds i32, i32* %8, i64 %idxprom (points-to size: 1)
    ->   %1 = alloca i8, i64 %mul, align 16 + Offset::UNKNOWN
NODE  51:   store i32 1, i32* %arrayidx, align 4 (points-to size: 0)
NODE  52:   %10 = load i32, i32* %i, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  53:   %11 = load i32*, i32** %prev, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 %mul2, align 16 + 0
NODE  54:   %12 = load i32, i32* %i, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  55:   %idxprom4 = sext i32 %12 to i64 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  56:   %arrayidx5 = getelementptr inbounds i32, i32* %11, i64 %idxprom4 (points-to size: 1)
    ->   %4 = alloca i8, i64 %mul2, align 16 + Offset::UNKNOWN
NODE  57:   store i32 %10, i32* %arrayidx5, align 4 (points-to size: 0)
NODE  58:   store i32 1, i32* %i, align 4 (points-to size: 0)
NODE  59:   %13 = load i32, i32* %i, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  60:   %inc = add nsw i32 %13, 1 (points-to size: 1)
    -> null + Offset::UNKNOWN
NODE  61:   store i32 %inc, i32* %i, align 4 (points-to size: 0)
NODE  62:   %14 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  63:   %15 = load i32, i32* %N.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  64:   store i32 0, i32* %j, align 4 (points-to size: 0)
NODE  65:   store i32 0, i32* %i, align 4 (points-to size: 0)
NODE  66:   %16 = load i32, i32* %j, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  67:   %17 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  68:   %40 = load i32, i32* %i, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  69:   %41 = load i32, i32* %N.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  70:   %18 = load i32*, i32** %a.addr, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
NODE  71:   %19 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  72:   %idxprom14 = sext i32 %19 to i64 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  73:   %arrayidx15 = getelementptr inbounds i32, i32* %18, i64 %idxprom14 (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + Offset::UNKNOWN
NODE  74:   %20 = load i32, i32* %arrayidx15, align 4 (points-to size: 0)
NODE  75:   %21 = load i32*, i32** %a.addr, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + 0
NODE  76:   %22 = load i32, i32* %j, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  77:   %idxprom16 = sext i32 %22 to i64 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  78:   %arrayidx17 = getelementptr inbounds i32, i32* %21, i64 %idxprom16 (points-to size: 1)
    ->   %2 = alloca i8, i64 %mul, align 16 + Offset::UNKNOWN
NODE  79:   %23 = load i32, i32* %arrayidx17, align 4 (points-to size: 0)
NODE  80:   %42 = load i32, i32* %max, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  81:   %43 = load i32*, i32** %best, align 8 (points-to size: 1)
    ->   %1 = alloca i8, i64 %mul, align 16 + 0
NODE  82:   %44 = load i32, i32* %i, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  83:   %idxprom43 = sext i32 %44 to i64 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  84:   %arrayidx44 = getelementptr inbounds i32, i32* %43, i64 %idxprom43 (points-to size: 1)
    ->   %1 = alloca i8, i64 %mul, align 16 + Offset::UNKNOWN
NODE  85:   %45 = load i32, i32* %arrayidx44, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  86:   %50 = load i32, i32* %max, align 4 (points-to size: 2)
    -> null + 0
    -> unknown + Offset::UNKNOWN
NODE  87:   ret i32 %50 (points-to size: 0)
NODE  88:   %24 = load i32*, i32** %best, align 8 (points-to size: 1)
    ->   %1 = alloca i8, i64 %mul, align 16 + 0
NODE  89:   %25 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  90:   %idxprom20 = sext i32 %25 to i64 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  91:   %arrayidx21 = getelementptr inbounds i32, i32* %24, i64 %idxprom20 (points-to size: 1)
    ->   %1 = alloca i8, i64 %mul, align 16 + Offset::UNKNOWN
NODE  92:   %26 = load i32, i32* %arrayidx21, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  93:   %27 = load i32*, i32** %best, align 8 (points-to size: 1)
    ->   %1 = alloca i8, i64 %mul, align 16 + 0
NODE  94:   %28 = load i32, i32* %j, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  95:   %idxprom22 = sext i32 %28 to i64 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  96:   %arrayidx23 = getelementptr inbounds i32, i32* %27, i64 %idxprom22 (points-to size: 1)
    ->   %1 = alloca i8, i64 %mul, align 16 + Offset::UNKNOWN
NODE  97:   %29 = load i32, i32* %arrayidx23, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  98:   %add = add nsw i32 %29, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  99:   %39 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 100:   %inc37 = add nsw i32 %39, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 101:   store i32 %inc37, i32* %i, align 4 (points-to size: 0)
NODE 102:   %46 = load i32*, i32** %best, align 8 (points-to size: 1)
    ->   %1 = alloca i8, i64 %mul, align 16 + 0
NODE 103:   %47 = load i32, i32* %i, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE 104:   %idxprom48 = sext i32 %47 to i64 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE 105:   %arrayidx49 = getelementptr inbounds i32, i32* %46, i64 %idxprom48 (points-to size: 1)
    ->   %1 = alloca i8, i64 %mul, align 16 + Offset::UNKNOWN
NODE 106:   %48 = load i32, i32* %arrayidx49, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 107:   store i32 %48, i32* %max, align 4 (points-to size: 0)
NODE 108:   %30 = load i32*, i32** %best, align 8 (points-to size: 1)
    ->   %1 = alloca i8, i64 %mul, align 16 + 0
NODE 109:   %31 = load i32, i32* %j, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE 110:   %idxprom26 = sext i32 %31 to i64 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE 111:   %arrayidx27 = getelementptr inbounds i32, i32* %30, i64 %idxprom26 (points-to size: 1)
    ->   %1 = alloca i8, i64 %mul, align 16 + Offset::UNKNOWN
NODE 112:   %32 = load i32, i32* %arrayidx27, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 113:   %add28 = add nsw i32 %32, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 114:   %33 = load i32*, i32** %best, align 8 (points-to size: 1)
    ->   %1 = alloca i8, i64 %mul, align 16 + 0
NODE 115:   %34 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 116:   %idxprom29 = sext i32 %34 to i64 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 117:   %arrayidx30 = getelementptr inbounds i32, i32* %33, i64 %idxprom29 (points-to size: 1)
    ->   %1 = alloca i8, i64 %mul, align 16 + Offset::UNKNOWN
NODE 118:   store i32 %add28, i32* %arrayidx30, align 4 (points-to size: 0)
NODE 119:   %35 = load i32, i32* %j, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE 120:   %36 = load i32*, i32** %prev, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 %mul2, align 16 + 0
NODE 121:   %37 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 122:   %idxprom31 = sext i32 %37 to i64 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE 123:   %arrayidx32 = getelementptr inbounds i32, i32* %36, i64 %idxprom31 (points-to size: 1)
    ->   %4 = alloca i8, i64 %mul2, align 16 + Offset::UNKNOWN
NODE 124:   store i32 %35, i32* %arrayidx32, align 4 (points-to size: 0)
NODE 125:   %38 = load i32, i32* %j, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE 126:   %inc34 = add nsw i32 %38, 1 (points-to size: 1)
    -> null + Offset::UNKNOWN
NODE 127:   store i32 %inc34, i32* %j, align 4 (points-to size: 0)
NODE 128:   %49 = load i32, i32* %i, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE 129:   %inc52 = add nsw i32 %49, 1 (points-to size: 1)
    -> null + Offset::UNKNOWN
NODE 130:   store i32 %inc52, i32* %i, align 4 (points-to size: 0)
NODE 131: lis (points-to size: 1)
    -> lis + 0
NODE 132: main (points-to size: 1)
    -> main + 0
NODE 133:   %call1 = call i32 @lis(i32* %4, i32 %5) (points-to size: 0)
NODE 134:   ret i32 %call1 (points-to size: 0)
