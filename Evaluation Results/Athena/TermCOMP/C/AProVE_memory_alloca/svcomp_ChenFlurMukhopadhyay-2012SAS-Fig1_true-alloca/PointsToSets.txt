NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %x = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %x = alloca i32*, align 8 + 0
NODE   4:   %y = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %y = alloca i32*, align 8 + 0
NODE   5:   %z = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %z = alloca i32*, align 8 + 0
NODE   6:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   7:   %0 = alloca i8, i64 4, align 16 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE   8:   %1 = bitcast i8* %0 to i32* (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE   9:   store i32* %1, i32** %x, align 8 (points-to size: 0)
NODE  10:   %2 = alloca i8, i64 4, align 16 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  11:   %3 = bitcast i8* %2 to i32* (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  12:   store i32* %3, i32** %y, align 8 (points-to size: 0)
NODE  13:   %4 = alloca i8, i64 4, align 16 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  14:   %5 = bitcast i8* %4 to i32* (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  15:   store i32* %5, i32** %z, align 8 (points-to size: 0)
NODE  16:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  17:   %6 = load i32*, i32** %x, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  18:   store i32 %call, i32* %6, align 4 (points-to size: 0)
NODE  19:   %call1 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  20:   %7 = load i32*, i32** %y, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  21:   store i32 %call1, i32* %7, align 4 (points-to size: 0)
NODE  22:   %call2 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  23:   %8 = load i32*, i32** %z, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  24:   store i32 %call2, i32* %8, align 4 (points-to size: 0)
NODE  25:   %9 = load i32*, i32** %x, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  26:   %10 = load i32, i32* %9, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  27:   %11 = load i32*, i32** %x, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  28:   %12 = load i32, i32* %11, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  29:   %13 = load i32*, i32** %y, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  30:   %14 = load i32, i32* %13, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  31:   %add = add nsw i32 %12, %14 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  32:   %15 = load i32*, i32** %x, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  33:   store i32 %add, i32* %15, align 4 (points-to size: 0)
NODE  34:   %16 = load i32*, i32** %z, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  35:   %17 = load i32, i32* %16, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  36:   %18 = load i32*, i32** %y, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  37:   store i32 %17, i32* %18, align 4 (points-to size: 0)
NODE  38:   %19 = load i32*, i32** %z, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  39:   %20 = load i32, i32* %19, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  40:   %sub = sub nsw i32 0, %20 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  41:   %sub3 = sub nsw i32 %sub, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  42:   %21 = load i32*, i32** %z, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  43:   store i32 %sub3, i32* %21, align 4 (points-to size: 0)
NODE  44:   %22 = load i32, i32* %retval, align 4 (points-to size: 1)
    -> null + 0
NODE  45:   ret i32 %22 (points-to size: 0)
NODE  46: main (points-to size: 1)
    -> main + 0
