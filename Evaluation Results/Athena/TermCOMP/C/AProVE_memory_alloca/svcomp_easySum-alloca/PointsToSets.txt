NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   4:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   5: <5> PSNodeType::CALL (points-to size: 0)
NODE   6: <6> PSNodeType::ENTRY (points-to size: 0)
NODE   7: i32 %bound (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   8:   %bound.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %bound.addr = alloca i32, align 4 + 0
NODE   9:   %bound_ref = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %bound_ref = alloca i32*, align 8 + 0
NODE  10:   %i = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %i = alloca i32*, align 8 + 0
NODE  11:   %sum = alloca i32*, align 8 [size: 8, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %sum = alloca i32*, align 8 + 0
NODE  12:   store i32 %bound, i32* %bound.addr, align 4 (points-to size: 0)
NODE  13:   %0 = alloca i8, i64 4, align 16 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  14:   %1 = bitcast i8* %0 to i32* (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  15:   store i32* %1, i32** %bound_ref, align 8 (points-to size: 0)
NODE  16:   %2 = alloca i8, i64 4, align 16 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  17:   %3 = bitcast i8* %2 to i32* (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  18:   store i32* %3, i32** %i, align 8 (points-to size: 0)
NODE  19:   %4 = alloca i8, i64 4, align 16 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  20:   %5 = bitcast i8* %4 to i32* (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  21:   store i32* %5, i32** %sum, align 8 (points-to size: 0)
NODE  22:   %6 = load i32, i32* %bound.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  23:   %7 = load i32*, i32** %bound_ref, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  24:   store i32 %6, i32* %7, align 4 (points-to size: 0)
NODE  25:   %8 = load i32*, i32** %sum, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  26:   store i32 0, i32* %8, align 4 (points-to size: 0)
NODE  27:   %9 = load i32*, i32** %i, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  28:   store i32 0, i32* %9, align 4 (points-to size: 0)
NODE  29:   %10 = load i32*, i32** %i, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  30:   %11 = load i32, i32* %10, align 4 (points-to size: 1)
    -> null + Offset::UNKNOWN
NODE  31:   %12 = load i32*, i32** %bound_ref, align 8 (points-to size: 1)
    ->   %0 = alloca i8, i64 4, align 16 + 0
NODE  32:   %13 = load i32, i32* %12, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  33:   %14 = load i32*, i32** %i, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  34:   %15 = load i32, i32* %14, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  35:   %16 = load i32*, i32** %sum, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  36:   %17 = load i32, i32* %16, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  37:   %add = add nsw i32 %17, %15 (points-to size: 1)
    -> null + Offset::UNKNOWN
NODE  38:   store i32 %add, i32* %16, align 4 (points-to size: 0)
NODE  39:   %20 = load i32*, i32** %sum, align 8 (points-to size: 1)
    ->   %4 = alloca i8, i64 4, align 16 + 0
NODE  40:   %21 = load i32, i32* %20, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  41:   ret i32 %21 (points-to size: 0)
NODE  42:   %18 = load i32*, i32** %i, align 8 (points-to size: 1)
    ->   %2 = alloca i8, i64 4, align 16 + 0
NODE  43:   %19 = load i32, i32* %18, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  44:   %inc = add nsw i32 %19, 1 (points-to size: 1)
    -> null + Offset::UNKNOWN
NODE  45:   store i32 %inc, i32* %18, align 4 (points-to size: 0)
NODE  46: iterate (points-to size: 1)
    -> iterate + 0
NODE  47: main (points-to size: 1)
    -> main + 0
NODE  48:   %call1 = call i32 @iterate(i32 %call) (points-to size: 0)
NODE  49:   ret i32 %call1 (points-to size: 0)
