NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %x = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %x = alloca i32, align 4 + 0
NODE   4:   %tx = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %tx = alloca i32, align 4 + 0
NODE   5:   %y = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %y = alloca i32, align 4 + 0
NODE   6:   %ty = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %ty = alloca i32, align 4 + 0
NODE   7:   %n = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %n = alloca i32, align 4 + 0
NODE   8:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   9:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  10:   store i32 %call, i32* %x, align 4 (points-to size: 0)
NODE  11:   %call1 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  12:   store i32 %call1, i32* %tx, align 4 (points-to size: 0)
NODE  13:   %call2 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  14:   store i32 %call2, i32* %y, align 4 (points-to size: 0)
NODE  15:   %call3 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  16:   store i32 %call3, i32* %ty, align 4 (points-to size: 0)
NODE  17:   %call4 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  18:   store i32 %call4, i32* %n, align 4 (points-to size: 0)
NODE  19:   %0 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  20:   %1 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  21:   %add = add nsw i32 %0, %1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  22:   ret i32 0 (points-to size: 1)
    -> null + 0
NODE  23:   %2 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  24:   %3 = load i32, i32* %n, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  25:   %4 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  26:   %5 = load i32, i32* %tx, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  27:   %mul = mul nsw i32 2, %5 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  28:   %6 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  29:   %add6 = add nsw i32 %mul, %6 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  30:   %11 = phi i1 [ false, %land.lhs.true8 ], [ false, %land.lhs.true ],  ... (points-to size: 1)
    -> null + 0
NODE  31:   %7 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  32:   %8 = load i32, i32* %ty, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  33:   %add9 = add nsw i32 %8, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  34:   %call13 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  35:   %9 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  36:   %10 = load i32, i32* %tx, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  37:   %add11 = add nsw i32 %10, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  38:   %12 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  39:   store i32 %12, i32* %tx, align 4 (points-to size: 0)
NODE  40:   %13 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  41:   store i32 %13, i32* %ty, align 4 (points-to size: 0)
NODE  42:   %call15 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  43:   store i32 %call15, i32* %x, align 4 (points-to size: 0)
NODE  44:   %call16 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  45:   store i32 %call16, i32* %y, align 4 (points-to size: 0)
NODE  46:   %14 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  47:   store i32 %14, i32* %tx, align 4 (points-to size: 0)
NODE  48:   %call17 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  49:   store i32 %call17, i32* %x, align 4 (points-to size: 0)
NODE  50: main (points-to size: 1)
    -> main + 0
