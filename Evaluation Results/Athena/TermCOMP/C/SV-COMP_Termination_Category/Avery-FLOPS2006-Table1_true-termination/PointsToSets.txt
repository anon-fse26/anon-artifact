NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %x = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %x = alloca i32, align 4 + 0
NODE   4:   %y = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %y = alloca i32, align 4 + 0
NODE   5:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   6:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   7:   store i32 %call, i32* %x, align 4 (points-to size: 0)
NODE   8:   %call1 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   9:   store i32 %call1, i32* %y, align 4 (points-to size: 0)
NODE  10:   %0 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  11:   %1 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  12: <12> PSNodeType::CALL (points-to size: 0)
NODE  13: <13> PSNodeType::ENTRY (points-to size: 0)
NODE  14: i32 %x (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  15: i32 %y (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  16:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE  17:   %x.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %x.addr = alloca i32, align 4 + 0
NODE  18:   %y.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %y.addr = alloca i32, align 4 + 0
NODE  19:   %z = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %z = alloca i32, align 4 + 0
NODE  20:   %i = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %i = alloca i32, align 4 + 0
NODE  21:   store i32 %x, i32* %x.addr, align 4 (points-to size: 0)
NODE  22:   store i32 %y, i32* %y.addr, align 4 (points-to size: 0)
NODE  23:   store i32 0, i32* %z, align 4 (points-to size: 0)
NODE  24:   %0 = load i32, i32* %x.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  25:   store i32 %0, i32* %i, align 4 (points-to size: 0)
NODE  26:   %1 = load i32, i32* %y.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  27:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  28:   %11 = load i32, i32* %retval, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  29:   ret i32 %11 (points-to size: 0)
NODE  30:   %2 = load i32, i32* %x.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  31:   %3 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  32:   %4 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  33:   %dec = add nsw i32 %4, -1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  34:   store i32 %dec, i32* %i, align 4 (points-to size: 0)
NODE  35:   %5 = load i32, i32* %z, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  36:   %inc = add nsw i32 %5, 1 (points-to size: 1)
    -> null + Offset::UNKNOWN
NODE  37:   store i32 %inc, i32* %z, align 4 (points-to size: 0)
NODE  38:   %6 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  39:   %7 = load i32, i32* %y.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  40:   %8 = load i32, i32* %i, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  41:   %inc6 = add nsw i32 %8, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  42:   store i32 %inc6, i32* %i, align 4 (points-to size: 0)
NODE  43:   %9 = load i32, i32* %z, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  44:   %dec7 = add nsw i32 %9, -1 (points-to size: 1)
    -> null + Offset::UNKNOWN
NODE  45:   store i32 %dec7, i32* %z, align 4 (points-to size: 0)
NODE  46:   %10 = load i32, i32* %z, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  47:   store i32 %10, i32* %retval, align 4 (points-to size: 0)
NODE  48: subxy (points-to size: 1)
    -> subxy + 0
NODE  49: main (points-to size: 1)
    -> main + 0
NODE  50:   %call2 = call i32 @subxy(i32 %0, i32 %1) (points-to size: 0)
NODE  51:   ret i32 0 (points-to size: 1)
    -> null + 0
