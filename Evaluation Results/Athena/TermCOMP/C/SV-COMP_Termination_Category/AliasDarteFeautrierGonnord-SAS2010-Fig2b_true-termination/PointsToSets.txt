NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %x = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %x = alloca i32, align 4 + 0
NODE   4:   %y = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %y = alloca i32, align 4 + 0
NODE   5:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   6:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   7:   store i32 %call, i32* %x, align 4 (points-to size: 0)
NODE   8:   %call1 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   9:   store i32 %call1, i32* %y, align 4 (points-to size: 0)
NODE  10:   %0 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  11:   %1 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  12:   %dec = add nsw i32 %1, -1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  13:   store i32 %dec, i32* %x, align 4 (points-to size: 0)
NODE  14:   %2 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  15:   %3 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  16:   %add = add nsw i32 %2, %3 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  17:   store i32 %add, i32* %y, align 4 (points-to size: 0)
NODE  18:   ret i32 0 (points-to size: 1)
    -> null + 0
NODE  19:   %4 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  20:   %5 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  21:   %add3 = add nsw i32 %5, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  22:   %call5 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  23:   %6 = phi i1 [ false, %while.cond2 ], [ %tobool, %land.rhs ] (points-to size: 1)
    -> null + 0
NODE  24:   %7 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  25:   %dec7 = add nsw i32 %7, -1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  26:   store i32 %dec7, i32* %y, align 4 (points-to size: 0)
NODE  27:   %14 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  28:   %dec18 = add nsw i32 %14, -1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  29:   store i32 %dec18, i32* %x, align 4 (points-to size: 0)
NODE  30:   %15 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  31:   %16 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  32:   %sub19 = sub nsw i32 %15, %16 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  33:   store i32 %sub19, i32* %y, align 4 (points-to size: 0)
NODE  34:   %8 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  35:   %9 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  36:   %add9 = add nsw i32 %9, 3 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  37:   %call12 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  38:   %10 = phi i1 [ false, %while.cond8 ], [ %tobool13, %land.rhs11 ] (points-to size: 1)
    -> null + 0
NODE  39:   %11 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  40:   %inc = add nsw i32 %11, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  41:   store i32 %inc, i32* %x, align 4 (points-to size: 0)
NODE  42:   %12 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  43:   %sub = sub nsw i32 %12, 2 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  44:   store i32 %sub, i32* %y, align 4 (points-to size: 0)
NODE  45:   %13 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  46:   %dec16 = add nsw i32 %13, -1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  47:   store i32 %dec16, i32* %y, align 4 (points-to size: 0)
NODE  48: main (points-to size: 1)
    -> main + 0
