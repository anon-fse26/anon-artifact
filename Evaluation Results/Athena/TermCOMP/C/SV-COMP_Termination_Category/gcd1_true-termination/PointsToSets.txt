NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %x = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %x = alloca i32, align 4 + 0
NODE   3:   %y = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %y = alloca i32, align 4 + 0
NODE   4:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   5:   store i32 %call, i32* %x, align 4 (points-to size: 0)
NODE   6:   %call1 = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   7:   store i32 %call1, i32* %y, align 4 (points-to size: 0)
NODE   8:   %0 = load i32, i32* %x, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   9:   %1 = load i32, i32* %y, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  10: <10> PSNodeType::CALL (points-to size: 0)
NODE  11: <11> PSNodeType::ENTRY (points-to size: 0)
NODE  12: i32 %x (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  13: i32 %y (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  14:   %x.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %x.addr = alloca i32, align 4 + 0
NODE  15:   %y.addr = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %y.addr = alloca i32, align 4 + 0
NODE  16:   %r = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %r = alloca i32, align 4 + 0
NODE  17:   store i32 %x, i32* %x.addr, align 4 (points-to size: 0)
NODE  18:   store i32 %y, i32* %y.addr, align 4 (points-to size: 0)
NODE  19:   %0 = load i32, i32* %x.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  20:   %1 = load i32, i32* %x.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  21:   %sub = sub nsw i32 0, %1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  22:   store i32 %sub, i32* %x.addr, align 4 (points-to size: 0)
NODE  23:   %2 = load i32, i32* %y.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  24:   %3 = load i32, i32* %y.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  25:   %sub3 = sub nsw i32 0, %3 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  26:   store i32 %sub3, i32* %y.addr, align 4 (points-to size: 0)
NODE  27:   %4 = load i32, i32* %y.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  28:   %5 = load i32, i32* %x.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  29:   store i32 %5, i32* %r, align 4 (points-to size: 0)
NODE  30:   %12 = load i32, i32* %x.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  31:   ret i32 %12 (points-to size: 0)
NODE  32:   %6 = load i32, i32* %r, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  33:   %7 = load i32, i32* %y.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  34:   %8 = load i32, i32* %r, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  35:   %9 = load i32, i32* %y.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  36:   %sub9 = sub nsw i32 %8, %9 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  37:   store i32 %sub9, i32* %r, align 4 (points-to size: 0)
NODE  38:   %10 = load i32, i32* %y.addr, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  39:   store i32 %10, i32* %x.addr, align 4 (points-to size: 0)
NODE  40:   %11 = load i32, i32* %r, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  41:   store i32 %11, i32* %y.addr, align 4 (points-to size: 0)
NODE  42: gcd (points-to size: 1)
    -> gcd + 0
NODE  43: main (points-to size: 1)
    -> main + 0
NODE  44:   %call2 = call i32 @gcd(i32 %0, i32 %1) (points-to size: 0)
NODE  45:   ret i32 0 (points-to size: 1)
    -> null + 0
