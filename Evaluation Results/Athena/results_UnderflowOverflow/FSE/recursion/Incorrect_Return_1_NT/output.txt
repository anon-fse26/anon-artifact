WARNING: The requested image's platform (linux/amd64) does not match the detected host platform (linux/arm64/v8) and no specific platform was requested
Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with default stack size (1024k). Specify a larger value with --stack if needed.
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

CPAchecker 4.0 (OpenJDK 64-Bit Server VM 17.0.15) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "Benchmarks/FSE/recursion/Incorrect_Return_1_NT/Incorrect_Return_1_NT.c" (CPAchecker.parse, INFO)

Using predicate analysis with MathSAT5 version 5.6.10 (9293adc746be) (May 31 2023 12:38:06, gmp 6.2.0, gcc 7.5.0, 64-bit, reentrant) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Recursion detected, aborting. To ignore recursion, add --skip-recursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 84: Unsupported feature (recursion): __CPAchecker_TMP_1 = player_invention_reachable(root, 1); (line was originally return player_invention_reachable(root, 1);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)


PredicateCPA statistics
-----------------------
Number of abstractions:            10 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            4 (40%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6 (60%)
  Times precision was empty:       6 (60%)
  Times precision was {false}:     1 (10%)
  Times result was cached:         3 (30%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        4 (40%)
Number of strengthen sat checks:   0
Number of coverage checks:         46
  BDD entailment checks:           4
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Avg ABE block size:                                13.20 (sum: 132, count: 10, min: 2, max: 30)
Number of predicates discovered:          2
Number of abstraction locations:          1
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         4
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.00
Number of irrelevant predicates:          4 (100%)

Time for post operator:                                0.172s
  Time for path formula creation:                      0.179s
Time for strengthen operator:                          0.019s
Time for prec operator:                                0.009s
  Time for abstraction:                  0.004s (Max:     0.003s, Count: 10)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                               0.006s
Time for coverage checks:                              0.003s
  Time for BDD entailment checks:                      0.003s
Total time for SMT solver (w/o itp):     0.000s

Number of path formula cache hits:   44 (37%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.170s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                    0.00 (sum: 0, count: 35, min: 0, max: 0)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

KeyValue statistics
-------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (Overflows) statistics
----------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.004s
Total time for strengthen operator:                    0.096s
Automaton transfers with branching:                0
Automaton transfer successors:                     1.00 (sum: 109, count: 109, min: 1, max: 1) [1 x 109]
Number of states with assumption transitions:      0

AutomatonAnalysis (svcompTerminatingFunctions) statistics
---------------------------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                     1.00 (sum: 109, count: 109, min: 1, max: 1) [1 x 109]
Number of states with assumption transitions:      0

CPA algorithm statistics
------------------------
Number of iterations:            57
Max size of waitlist:            5
Average size of waitlist:        2
ReversePostorderSortedWaitlist:                    0.09 (sum: 3, count: 34, min: 0, max: 2)
CallstackSortedWaitlist:                           14.00 (sum: 42, count: 3, min: 3, max: 23)
Number of computed successors:   85
Max successors for one state:    4
Number of times merged:          4
Number of times stopped:         17
Number of times breaked:         2

Total time for CPA algorithm:         0.362s (Max:     0.216s)
  Time for choose from waitlist:      0.003s
  Time for precision adjustment:      0.016s
  Time for transfer relation:         0.327s
  Time for merge operator:            0.011s
  Time for stop operator:             0.001s
  Time for adding to reached set:     0.002s

Static Predicate Refiner statistics
-----------------------------------
Number of predicates found statically:                    1 (count: 1, min: 1, max: 1, avg: 1.00)

Total time for static refinement:                      0.070s
  Time for path feasibility check:                     0.037s
  Time for predicate extraction from CFA:              0.014s
  Time for ARG update:                                 0.018s

PredicateCPARefiner statistics
------------------------------
Number of predicate refinements:                   1
Avg. length of target path (in blocks):            2.00 (sum: 2, count: 1, min: 2, max: 2)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.016s
  Path-formulas extraction:                            0.000s
  Counterexample analysis:                             0.046s (Max:     0.036s, Calls: 2)
    Refinement sat check:                              0.032s
    Interpolant computation:                           0.002s

Predicate-Abstraction Refiner statistics
----------------------------------------
  Predicate creation:                                  0.000s
  Precision update:                                    0.005s
  ARG update:                                          0.000s

Length of refined path (in blocks):                2.00 (sum: 2, count: 1, min: 2, max: 2)
Number of affected states:                                0 (count: 1, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  1 (count: 1, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:         0 (count: 1, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 1, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 1, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 1, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of CEGAR refinements:          2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 42
Max. size of reached set after ref.:  41
Avg. size of reached set before ref.: 28.50
Avg. size of reached set after ref.:  21.00

Total time for CEGAR algorithm:       0.455s
Time for refinements:                 0.093s
Average time for refinement:          0.046s
Max time for refinement:              0.077s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          46
  Total lines:            48
  Line coverage:          0.958
  Visited conditions:     16
  Total conditions:       18
  Condition coverage:     0.889

CPAchecker general statistics
-----------------------------
Number of program locations:                       80
Number of CFA edges (per node):                          89 (count: 80, min: 0, max: 2, avg: 1.11)
Number of relevant variables:                      25
Number of functions:                               7
Number of loops (and loop nodes):                         2 (sum: 18, min: 6, max: 12, avg: 9.00)
Size of reached set:             48
  Number of reached locations:   46 (57%)
    Avg states per location:     1
    Max states per location:     2 (at node N8)
  Number of reached functions:   7 (100%)
  Number of partitions:          46
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N22 (before line 62), Function advance_by_number called from node N31, stack depth 4 [60325987], stack [main, player_invention_reachable, valid_advance_by_number, advance_by_number], ABS4: true])
  Number of target states:       0
  Size of final wait list:       5

Time for analysis setup:          1.878s
  Time for loading CPAs:          0.787s
  Time for loading parser:        0.207s
  Time for CFA construction:      0.781s
    Time for parsing file(s):     0.257s
    Time for AST to CFA:          0.227s
    Time for CFA sanity check:    0.020s
    Time for post-processing:     0.154s
    Time for loop structure:      0.008s
    Time for AST structure:       0.000s
    Time for CFA export:          0.450s
      Time for function pointers resolving:            0.004s
        Function calls via function pointers:             0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer calls:              0 (count: 1, min: 0, max: 0, avg: 0.00)
        Function calls with function pointer arguments:        0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer arguments:          0 (count: 1, min: 0, max: 0, avg: 0.00)
      Time for classifying variables:                  0.098s
        Time for collecting variables:                 0.066s
        Time for solving dependencies:                 0.003s
        Time for building hierarchy:                   0.000s
        Time for building classification:              0.026s
        Time for exporting data:                       0.003s
Time for Analysis:                0.455s
CPU time for analysis:            0.810s
Total time for CPAchecker:        2.338s
Total CPU time for CPAchecker:    4.340s
Time for statistics:              0.146s

Time for Garbage Collector:       0.060s (in 3 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                 70MB (    67 MiB) max;     40MB (    38 MiB) avg;     89MB (    85 MiB) peak
Used non-heap memory:             45MB (    43 MiB) max;     28MB (    27 MiB) avg;     47MB (    45 MiB) peak
Used in PS Old Gen pool:          13MB (    12 MiB) max;      6MB (     6 MiB) avg;     13MB (    12 MiB) peak
Allocated heap memory:           252MB (   240 MiB) max;    251MB (   240 MiB) avg
Allocated non-heap memory:        48MB (    46 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:  14969MB ( 14275 MiB) max;  14706MB ( 14025 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
Graphical representation included in the file "./output/Report.html".
Runtime: 4695 milliseconds