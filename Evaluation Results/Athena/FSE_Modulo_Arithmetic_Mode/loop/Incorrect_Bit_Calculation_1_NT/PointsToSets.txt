NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %mask = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %mask = alloca i32, align 4 + 0
NODE   4:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   5:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   6:   store i32 %call, i32* %mask, align 4 (points-to size: 0)
NODE   7:   %0 = load i32, i32* %mask, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   8:   %and = and i32 %0, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   9:   %1 = load i32, i32* %mask, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  10:   %shr = ashr i32 %1, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  11:   store i32 %shr, i32* %mask, align 4 (points-to size: 0)
NODE  12:   ret i32 0 (points-to size: 1)
    -> null + 0
NODE  13: main (points-to size: 1)
    -> main + 0
