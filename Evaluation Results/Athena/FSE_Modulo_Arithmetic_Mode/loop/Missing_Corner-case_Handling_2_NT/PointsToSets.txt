NODE   1: <1> PSNodeType::ENTRY (points-to size: 0)
NODE   2:   %retval = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %retval = alloca i32, align 4 + 0
NODE   3:   %val = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %val = alloca i32, align 4 + 0
NODE   4:   %bits = alloca i32, align 4 [size: 4, heap: 0, zeroed: 0] (points-to size: 1)
    ->   %bits = alloca i32, align 4 + 0
NODE   5:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE   6:   %call = call i32 @__VERIFIER_nondet_int() (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   7:   store i32 %call, i32* %val, align 4 (points-to size: 0)
NODE   8:   %0 = load i32, i32* %val, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE   9:   store i32 0, i32* %bits, align 4 (points-to size: 0)
NODE  10:   %4 = load i32, i32* %retval, align 4 (points-to size: 1)
    -> null + 0
NODE  11:   ret i32 %4 (points-to size: 0)
NODE  12:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  13:   %1 = load i32, i32* %val, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  14:   %2 = load i32, i32* %val, align 4 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  15:   %shr = ashr i32 %2, 1 (points-to size: 1)
    -> unknown + Offset::UNKNOWN
NODE  16:   store i32 %shr, i32* %val, align 4 (points-to size: 0)
NODE  17:   store i32 0, i32* %retval, align 4 (points-to size: 0)
NODE  18:   %3 = load i32, i32* %bits, align 4 (points-to size: 2)
    -> null + 0
    -> null + Offset::UNKNOWN
NODE  19:   %inc = add nsw i32 %3, 1 (points-to size: 1)
    -> null + Offset::UNKNOWN
NODE  20:   store i32 %inc, i32* %bits, align 4 (points-to size: 0)
NODE  21: main (points-to size: 1)
    -> main + 0
